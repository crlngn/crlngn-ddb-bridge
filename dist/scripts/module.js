var Ve=Object.defineProperty;var qe=Object.getPrototypeOf;var Ue=Reflect.get;var _e=c=>{throw TypeError(c)};var Be=(c,t,e)=>t in c?Ve(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var b=(c,t,e)=>Be(c,typeof t!="symbol"?t+"":t,e),fe=(c,t,e)=>t.has(c)||_e("Cannot "+e);var I=(c,t,e)=>(fe(c,t,"read from private field"),e?e.call(c):t.get(c)),j=(c,t,e)=>t.has(c)?_e("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(c):t.set(c,e),W=(c,t,e,a)=>(fe(c,t,"write to private field"),a?a.call(c,e):t.set(c,e),e),re=(c,t,e)=>(fe(c,t,"access private method"),e);var Me=(c,t,e)=>Ue(qe(c),e,t);const C={toHit:{prop:"toHit",cls:"to hit",actionType:"attack",rollType:"attack"},damage:{prop:"damage",cls:"damage",actionType:"damage",rollType:"damage"},heal:{prop:"heal",cls:"heal",actionType:"heal",rollType:"heal"},save:{prop:"save",cls:"save",actionType:"save",rollType:"ability"},check:{prop:"check",cls:"check",actionType:"check",rollType:"ability"},custom:{prop:"custom",cls:"roll",actionType:"roll",rollType:"custom"},cast:{prop:"cast",cls:"cast",actionType:"cast",rollType:"cast"}},X="crlngn-ddb-bridge",z="crlngn-ddb-bridge",Q=["%cDDB Gamelog Bridge","color: #003377; font-weight: bold;","|"],$={abilityCheck:"ability",abilitySave:"save",attack:"attack",check:"check",concentration:"concentration",damage:"damage",deathSave:"death",formula:"formula",healing:"heal",custom:"roll",skillCheck:"skill",toolCheck:"tool"},Ke=[{abbrev:"str",name:"strength"},{abbrev:"dex",name:"dexterity"},{abbrev:"con",name:"constitution"},{abbrev:"int",name:"intelligence"},{abbrev:"wis",name:"wisdom"},{abbrev:"cha",name:"charisma"}],H={CHAT_MESSAGE:"chatMessage",INIT:"init",READY:"ready",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage",CREATE_CHAT_MESSAGE:"createChatMessage",RENDER_CHAT_MESSAGE:"renderChatMessage",CREATE_MEASURED_TEMPLATE:"createMeasuredTemplate",REFRESH_MEASURED_TEMPLATE:"refreshMeasuredTemplate",CLOSE_SETTINGS_CONFIG:"closeSettingsConfig",RENDER_ROLL_RESOLVER:"renderRollResolver"},k={PRE_ROLL_V2:"dnd5e.preRollV2",PRE_ROLL_ABILITY_TEST:"dnd5e.preRollAbilityTest",PRE_ROLL_ABILITY_SAVE:"dnd5e.preRollAbilitySave",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrow",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_CLASS_HIT_POINTS:"dnd5e.preRollClassHitPoints",PRE_ROLL_CONCENTRATION:"dnd5e.preRollConcentration",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",PRE_ROLL_DEATH_SAVE:"dnd5e.preRollDeathSave",PRE_ROLL_FORMULA_V2:"dnd5e.preRollFormulaV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_NPC_HIT_POINTS:"dnd5e.preRollNPCHitPoints",PRE_ROLL_RECHARGE_V2:"dnd5e.preRollRechargeV2",PRE_ROLL_SKILL:"dnd5e.preRollSkill",PRE_ROLL_TOOL_CHECK:"dnd5e.preRollToolCheck",PRE_USE_ITEM:"dnd5e.preUseItem",ROLL_ABILITY_TEST:"dnd5e.rollAbilityTest",ROLL_ABILITY_SAVE:"dnd5e.rollAbilitySave",ROLL_ATTACK_V2:"dnd5e.rollAttackV2",ROLL_CLASS_HIT_POINTS:"dnd5e.rollClassHitPoints",ROLL_CONCENTRATION:"dnd5e.rollConcentration",ROLL_DEATH_SAVE:"dnd5e.rollDeathSave",ROLL_DAMAGE_V2:"dnd5e.rollDamageV2",ROLL_FORMULA_V2:"dnd5e.rollFormulaV2",ROLL_HIT_DIE_V2:"dnd5e.rollHitDieV2",ROLL_INITIATIVE:"dnd5e.rollInitiative",ROLL_NPC_HIT_POINTS:"dnd5e.rollNPCHitPoints",ROLL_RECHARGE_V2:"dnd5e.rollRechargeV2",ROLL_SKILL:"dnd5e.rollSkill",ROLL_TOOL_CHECK:"dnd5e.rollToolCheck",DISPLAY_CARD:"dnd5e.preDisplayCardV2",PRE_DISPLAY_CARD_V2:"dnd5e.preDisplayCardV2",RENDER_CHAT_MESSAGE:"dnd5e.renderChatMessage",PRE_LONG_REST:"dnd5e.preLongRest",PRE_REST_COMPLETED:"dnd5e.preRestCmpleted",PRE_SHORT_REST:"dnd5e.preShortRest",REST_COMPLETED:"dnd5e.restCmpleted",ACTIVITY_CONSUMPTION:"dnd5e.activityConsumption",POST_ACTIVITY_CONSUMPTION:"dnd5e.postActivityConsumption",POST_CREATE_USAGE_MESSAGE:"dnd5e.postCreateUsageMessage",POST_USE_ACTIVITY:"dnd5e.postUseActivity",PRE_ACTIVITY_CONSUMPTION:"dnd5e.preActivityConsumption",PRE_CREATE_USAGE_MESSAGE:"dnd5e.preCreateUsageMessage",PRE_USE_ACTIVITY:"dnd5e.preUseActivity"},je={READY:"socketlib.ready"},P={select:"select",checkbox:"checkbox"},F={client:"client",world:"world"};function v(){return{enableChatStyles:{tag:"enable-chat-styles",label:game.i18n.localize("CRLNGN.settings.enableChatStyles.label"),hint:game.i18n.localize("CRLNGN.settings.enableChatStyles.hint"),propType:Boolean,inputType:P.checkbox,default:!0,scope:F.client,config:!0,requiresReload:!0},ddbRollOwnership:{tag:"ddb-roll-ownership",label:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.label"),hint:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.choices.gm.label"),2:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.choices.player.label")},inputType:P.select,default:2,scope:F.world,config:!0},foundryRollModifiers:{tag:"foundry-roll-modifiers",label:game.i18n.localize("CRLNGN.settings.foundryRollModifiers.label"),hint:game.i18n.localize("CRLNGN.settings.foundryRollModifiers.hint"),propType:Boolean,inputType:P.checkbox,default:!0,scope:F.world,config:!0},forceDDBGL:{tag:"force-ddbgl-settings",label:game.i18n.localize("CRLNGN.settings.forceDDBGL.label"),hint:game.i18n.localize("CRLNGN.settings.forceDDBGL.hint"),propType:Boolean,inputType:P.checkbox,default:!0,scope:F.world,config:!0},removeTemplate:{tag:"remove-template",label:game.i18n.localize("CRLNGN.settings.removeTemplate.label"),hint:game.i18n.localize("CRLNGN.settings.removeTemplate.hint"),propType:Boolean,inputType:P.checkbox,default:!0,scope:F.world,config:!0},templateAutoTarget:{tag:"template-auto-target",label:game.i18n.localize("CRLNGN.settings.templateAutoTarget.label"),hint:game.i18n.localize("CRLNGN.settings.templateAutoTarget.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.all.label"),2:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.notFriendly.label"),3:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.none.label")},inputType:P.checkbox,default:!0,scope:F.world,config:!0},skipRollConfig:{tag:"skip-roll-config",label:game.i18n.localize("CRLNGN.settings.skipRollConfig.label"),hint:game.i18n.localize("CRLNGN.settings.skipRollConfig.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.skipRollConfig.choices.all.label"),2:game.i18n.localize("CRLNGN.settings.skipRollConfig.choices.ddbgl.label")},inputType:P.select,default:1,scope:F.world,config:!0},debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN.settings.debugMode.hint"),propType:Boolean,inputType:P.checkbox,default:!0,scope:F.client,config:!0}}}const ue=class ue{static log(t="",e=[],a=!1){try{const s=ue.debugOn;if(!(a||s))return;console.log(...Q,t,...e)}catch{console.log(...Q,t,...e)}}static warn(t="",e=[]){console.warn(...Q,t,...e)}static error(t="",e=[],a={ui:!1,console:!0,permanent:!1}){var s;console.log(...Q,t,e,a),a.ui&&((s=ui.notifications)==null||s.error(t,{permanent:a.permanent})),a.console&&console.error(...Q,t,...e)}};b(ue,"debugOn",!1);let o=ue;class R{static getTargets(t){let e=game.users.find(s=>s.isGM===!0),a=t.targets||e.targets;return new Set([...a])}static getActorFromItem(t){const e=t.split(".")[1];return game.actors.get(e)}static isModuleOn(t){var a;const e=(a=game.modules)==null?void 0:a.get(t);return!!(e!=null&&e.active)}static parseDDBGLAbility(t){let e=null;const a=`${t}`;return Ke.forEach(s=>{a.toLowerCase().includes(s.name)&&(e=s)}),e}static isPrivateRoll(t){return t===CONST.DICE_ROLL_MODES.BLIND||t===CONST.DICE_ROLL_MODES.PRIVATE}static removeTemplateForItem(t){o.log("removeTemplateForItem - A",[t]);const e=_.get("remove-template");if(o.log("removeTemplateForItem - B",[e]),!e)return;const a=canvas.templates.objects.children.filter(s=>s.document.flags.dnd5e.item===(t==null?void 0:t.uuid));canvas.scene.deleteEmbeddedDocuments("MeasuredTemplate",a.map(s=>s.id))}static getUserFromActor(t){let e;if(!t)return null;const a=t?game.actors.get(t):null;return e=game.users.players.find(i=>i.active===!0&&i.character.id===t),e||game.users.players.forEach(i=>{i.active&&a.testUserPermission(i,foundry.CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,{exact:!0})&&(e=i)}),o.log("getUserFromActor",[t,e]),e}static html(t,e){return t.querySelector(e)}}b(R,"getClientTargets",()=>{if(!game.user)return[];const t=Array.from(game.user.targets);return o.log("Selected Targets",[game.user.id,t,t.filter(e=>e.actor)]),t}),b(R,"getTargetDescriptors",()=>{var e,a;const t=new Map;for(const s of game.user.targets){const{name:i}=s,{img:r,system:n,uuid:l,statuses:d}=s.actor??{};if(l){const g=d.has("coverTotal")?null:(a=(e=n.attributes)==null?void 0:e.ac)==null?void 0:a.value;t.set(l,{name:i,img:r,uuid:l,ac:g??null})}}return Array.from(t.values())}),b(R,"findItemFromActor",(t,e,a)=>{const s=game.actors.get(t);if(o.log("findItemFromActor",[e,a]),!s)return null;let i=e?s.items.find(r=>r.id===e):null;return i||(i=a?s.items.find(r=>r.name.toLowerCase()===a.toLowerCase()):null,i||(i=s.items.find(r=>r.name.toLowerCase()===(a+" (Legacy)").toLowerCase()))),i}),b(R,"addCSSVars",(t,e)=>{let a=document.querySelector("#crlngn-chat-vars");if(!a){const m=document.querySelector("body");a=document.createElement("style"),a.id="crlngn-chat-vars",a.textContent=`body.crlngn-chat {
}
`,m.prepend(a)}let s=a.textContent,i=s.indexOf("body.crlngn-chat {"),r=s.indexOf("}",i);i===-1&&(s=`body.crlngn-chat {
}
`,i=0,r=s.indexOf("}"));const l=s.substring(i+18,r).split(";").map(m=>m.trim()).filter(m=>m!==""),d={};l.forEach(m=>{const p=m.split(":");if(p.length>=2){const h=p[0].trim(),f=p.slice(1).join(":").trim();h&&(d[h]=f)}}),t.includes("i18n")&&typeof e=="string"&&!e.startsWith('"')&&!e.startsWith("'")&&!e.match(/^url\(|^rgba?\(|^hsla?\(/)&&(e=`"${e}"`),d[t]=e;const g=Object.entries(d).map(([m,p])=>`  ${m}: ${p};`).join(`
`),u=s.substring(0,i)+`body.crlngn-chat {
`+g+`
}`+s.substring(r+1);a.textContent=u});const A=class A{static registerSettings(){const t=v();document.querySelector("body").classList.add(z),Object.entries(t).forEach(async a=>{const s=a[1];o.log("Registering... ",[a]);const i={name:s.label,hint:s.hint,default:s.default,type:s.propType,scope:s.scope,config:s.config,requiresReload:s.requiresReload||!1,onChange:r=>A.apply(s.tag,r)};s.choices&&(i.choices=s.choices),await game.settings.register(X,s.tag,i),A.get(s.tag)===void 0&&A.set(s.tag,s.default),o.log("registerSettings",[s.tag,A.get(s.tag)])}),A.get(t.enableChatStyles.tag)||document.querySelector("body").classList.remove("crlngn-chat"),A.applyDebugSettings()}static get(t,e=X){if(!t)return null;let a=!1;if(e===X)a=game.settings.get(e,t);else{let i=game.settings.storage.get("client")[`${e}.${t}`];i===void 0&&(i=game.settings.storage.get("world").getSetting(`${e}.${t}`)),a=i==null?void 0:i.value,o.log("GET Setting",[i,a])}return a}static set(t,e,a=X){if(!t)return!1;let s=game.settings.storage.get("client")[`${a}.${t}`];s||(s=game.settings.storage.get("world").getSetting(`${a}.${t}`));try{s&&s.update({value:e}),o.log("Able to change setting",[t,s])}catch{o.log("Unable to change setting",[t,s])}return!0}static apply(t,e){const a=v();switch(t){case a.forceDDBGL.tag:A.resetGamelogSettings();break;case a.debugMode.tag:A.applyDebugSettings();break}}static resetGamelogSettings(){const t=v();if(!R.isModuleOn("ddb-game-log"))return;const a=A.get("enable_chatcards","ddb-game-log"),s=A.get(t.forceDDBGL.tag);o.log("resetGamelogSettings",[a,s]),!a&&s&&A.set("enable_chatcards",!0,"ddb-game-log")}static applyDebugSettings(t){const e=v();o.debugOn=t||A.get(e.debugMode.tag)}};b(A,"currSettings");let _=A;const Z=class Z{static init(){const t=v();Z.chatMsgSettings=_.get(t.enableChatStyles.tag)}static enrichCard(t,e){var s,i,r,n,l,d,g,u;e.classList.remove("ddb-game-log-open-card");const a=Z.chatMsgSettings;if(a){const m=((r=(i=(s=t.flags)==null?void 0:s.dnd5e)==null?void 0:i.activity)==null?void 0:r.type)||((d=(l=(n=t.flags)==null?void 0:n.dnd5e)==null?void 0:l.roll)==null?void 0:d.type)||"custom";let p=e.get?e.get(0):e;p.classList.add("crlngn"),p.classList.add(m),o.log("enrichCard",[a.borderColor,(g=t.author)==null?void 0:g.id]),(u=a.flags)!=null&&u["ddb-game-log"]&&e.classList.add("ddbgl");const h=p.querySelectorAll(".card-buttons button[data-action=rollSave]");h.length>0&&h.forEach(f=>{const y=f.querySelector(".visible-dc"),T=f.querySelector(".hidden-dc");o.log("enrichCard",[y,T]),y.setAttribute("data-ability",f.getAttribute("data-ability")||""),y.setAttribute("data-dc",f.getAttribute("data-dc")||""),T.setAttribute("data-ability",f.getAttribute("data-ability")||"")})}}static formatFlavorText(t,e,a){var n,l,d,g;const s=game.actors.get(((n=e.speaker)==null?void 0:n.actor)||"")||null,i=(s==null?void 0:s.items.get(((g=(d=(l=e.flags)==null?void 0:l.dnd5e)==null?void 0:d.item)==null?void 0:g.id)||""))||null;let r=t||"Message";return a===$.attack?(o.log("renderChatMessage",[s,i]),i&&(r='<span class="item-name">'+(i==null?void 0:i.name),r=r+':</span> <span class="tohit">To Hit</span>')):a===$.damage?(o.log("renderChatMessage",[s,i]),i&&(r='<span class="item-name">'+(i==null?void 0:i.name),r=r+':</span> <span class="damage">Damage</span>')):a===$.healing?(o.log("renderChatMessage",[s,i]),i&&(r='<span class="item-name">'+((i==null?void 0:i.name)??"Action"),r=r+':</span> <span class="heal">Heal</span>')):t.includes("Skill Check")?(r='<span class="item-name">'+t,r=r.replace("Skill Check",':</span> <span class="check">Check</span>')):t.includes("Ability Check")?(r='<span class="item-name">'+t,r=r.replace("Ability Check",':</span> <span class="check">Check</span>')):t.includes("Saving Throw")?(r='<span class="item-name">'+t,r=r.replace("Saving Throw",':</span> <span class="save">Save</span>')):(a==="tool"||a==="check")&&t.includes("Check")?(r='<span class="item-name">'+t,r=r.replace("Check",':</span> <span class="check">Check</span>')):i?r=`<span class="item-name">${i.type}</span>`:r||(r='<span class="item-name">Info</span>'),r}};b(Z,"chatMsgSettings");let ce=Z;class G{static getActivityFromItem(t,e){var l;let a=null;if(!t)return a;const s=(l=t.system)==null?void 0:l.activities,i=t.hasAttack,r=t.hasSave;o.log("getActivityFromItem",[s,typeof s,Array.isArray(s)]);const n=d=>{const g=s.find(u=>u.type==d);return o.log("activityByType",[t,d,s.size,g]),g};switch(e){case C.toHit.cls:a=n(C.toHit.actionType);break;case C.damage.cls:i?a=n(C.toHit.actionType):r?a=n(C.save.actionType):a=n(C.damage.actionType);break;case C.check.cls:a=n(C.check.actionType);break;case C.save.cls:a=n(C.save.actionType);break;case C.heal.cls:a=n(C.heal.actionType);break;case C.cast.cls:a=n(C.cast.actionType);break}return a??Array.from(s.keys())[0]??null}static async ddbglUse(t,e={},a={},s={},i=!1){var m,p,h,f,y,T;if(!t){ui.notifications.error("No activity found",{localize:!1});return}if(!t.item.isEmbedded||t.item.pack)return;if(!t.item.isOwner){ui.notifications.error("DND5E.DocumentUseWarn",{localize:!0});return}if(!t.canUse){ui.notifications.error("DND5E.ACTIVITY.Warning.UsageNotAllowed",{localize:!0});return}let r=t.item.clone({},{keepId:!0});const n=t._prepareUsageConfig(e);(m=n.create)!=null&&m.measuredTemplate&&((p=ui.notifications)==null||p.info("Click the map to place the template and see the roll. Right click to cancel",{localize:!1}));const l=foundry.utils.mergeObject({configure:!0,applicationClass:t.metadata.usage.dialog},a),d=foundry.utils.mergeObject({create:!0,data:{flags:{dnd5e:{...t.messageFlags,messageType:"usage",use:{effects:(h=t.applicableEffects)==null?void 0:h.map(D=>D.id)}},rsr5e:{processed:!0,quickRoll:!1}}},hasConsumption:n.hasConsumption},s);if(Hooks.call("dnd5e.preUseActivity",t,n,l,d)===!1)return;await t._prepareUsageScaling(n,d,r),t=r.system.activities.get(t.id);const g=await t.consume(n,d);if(g===!1)return;const u={effects:[],templates:[],updates:g};if((f=n.concentration)!=null&&f.begin){const D=await r.actor.beginConcentrating(t,{"flags.dnd5e.scaling":n.scaling});if(D&&(u.effects??(u.effects=[]),u.effects.push(D),foundry.utils.setProperty(d.data,"flags.dnd5e.use.concentrationId",D.id)),(y=n.concentration)!=null&&y.end){const w=await r.actor.endConcentration(n.concentration.end);u.effects.push(...w)}}return d.data.rolls=(d.data.rolls??[]).concat(g.rolls),u.message=await G.createUsageMessage(t,d),o.log("messageConfig",[s,u.message]),u.message.dnd5e=((T=d.flags)==null?void 0:T.dnd5e)??{},u.message.dnd5e.targets=R.getTargetDescriptors({actorId:u.message.speaker.actor}),u.message.flags={...u.message.flags,rsr5e:{processed:!0}},await t._finalizeUsage(n,u),Hooks.call("dnd5e.postUseActivity",t,n,u)===!1||i&&t._triggerSubsequentActions&&t._triggerSubsequentActions(n,u),u}static async createUsageMessage(t,e){let a=await t._usageChatContext(e),s=await We(e.data.rolls);a={...a,rolls:s},o.log("createUsageMessage",[t.metadata.usage.chatCard,a]);const i=foundry.utils.mergeObject({rollMode:game.settings.get("core","rollMode"),data:{content:await renderTemplate(t.metadata.usage.chatCard,a),speaker:ChatMessage.getSpeaker({actor:t.item.actor}),flags:{core:{canPopout:!0},rsr5e:{processed:!0}}}},e);Hooks.callAll("dnd5e.preCreateUsageMessage",t,i),ChatMessage.applyRollMode(i.data,i.rollMode);const r=i.create===!1?i.data:await ChatMessage.create(i.data);return Hooks.callAll("dnd5e.postCreateUsageMessage",t,r),r}}const We=async(c,t)=>{let e=[];return e=await Promise.all(c.map(async a=>{const s=await a.getTooltip();return{...a,formula:a.formula,total:a.total,tooltipHtml:s}})),e},{OperatorTerm:Fe,RollTerm:Ye}=foundry.dice.terms;function he(c,{respectProperties:t}={}){const e=(i,r=[])=>[i,...t?Array.from(r).sort():[]].join(),a=new Map;for(const i of c){if(!i._evaluated)throw new Error("Only evaluated rolls can be aggregated.");for(const r of Je(i.terms,i.options.type)){const n=e(r.type,i.options.properties);a.has(n)||a.set(n,{type:r.type,properties:new Set,terms:[]});const l=a.get(n);l.terms.push(new Fe({operator:r.negative?"-":"+"}),...r.terms),i.options.properties&&(l.properties=l.properties.union(new Set(i.options.properties)))}}const s=[];for(const i of a.values()){const r=new CONFIG.Dice.DamageRoll;r.terms=i.terms,r._total=r._evaluateTotal(),r._evaluated=!0,r.options={type:i.type,properties:Array.from(i.properties)},r.resetFormula(),s.push(r)}return s}function Je(c,t){var n;const e=()=>{i.type??(i.type=t),s.push(i),i=null,r=!1},a=l=>l in CONFIG.DND5E.damageTypes||l in CONFIG.DND5E.healingTypes,s=[];let i,r=!1;for(let l of c){if(l instanceof Fe&&["+","-"].includes(l.operator)){i&&e(),l.operator==="-"&&(r=!r);continue}l=Ye.fromData(foundry.utils.deepClone(l.toJSON())),i??(i={terms:[],negative:r,type:null}),i.terms.push(l);const d=(n=l.flavor)==null?void 0:n.toLowerCase().trim();a(d)&&(i.type??(i.type=d),l.options.flavor="")}return i&&e(),s}const{HandlebarsApplicationMixin:Qe}=foundry.applications.api;function Xe(c){class t extends Qe(c){get subtitle(){return game.i18n.localize(this.options.window.subtitle??"")}_initializeApplicationOptions(a){const s=super._initializeApplicationOptions(a);return s.uniqueId=s.uniqueId.replace(/\./g,"-"),s}_configureRenderOptions(a){var s;super._configureRenderOptions(a),a.isFirstRender&&this.hasFrame&&(a.window||(a.window={}),(s=a.window).subtitle||(s.subtitle=this.subtitle))}_onFirstRender(a,s){var r;super._onFirstRender(a,s);const i={};for(const[n,l]of Object.entries(this.constructor.PARTS)){if(!((r=l.container)!=null&&r.id))continue;const d=this.element.querySelector(`[data-application-part="${n}"]`);if(d){if(!i[l.container.id]){const g=document.createElement("div");g.dataset.containerId=l.container.id,g.classList.add(...l.container.classes??[]),i[l.container.id]=g,d.replaceWith(g)}i[l.container.id].append(d)}}}async _prepareContext(a){const s=await super._prepareContext(a);return s.CONFIG=CONFIG.DND5E,s.inputs={...foundry.applications.fields,...dnd5e.applications.fields},s}async _preparePartContext(a,s,i){return{...await super._preparePartContext(a,s,i)}}async _renderFrame(a){var r,n,l;const s=await super._renderFrame(a),i=document.createElement("h2");if(i.classList.add("window-subtitle"),(r=s==null?void 0:s.querySelector(".window-title"))==null||r.insertAdjacentElement("afterend",i),(((n=a.window)==null?void 0:n.icon)??"").includes(".")){const d=s.querySelector(".window-icon"),g=document.createElement((l=a.window.icon)!=null&&l.endsWith(".svg")?"dnd5e-icon":"img");g.classList.add("window-icon"),g.src=a.window.icon,d.replaceWith(g)}return s}_updateFrame(a){super._updateFrame(a),a.window&&"subtitle"in a.window&&(this.element.querySelector(".window-header > .window-subtitle").innerText=a.window.subtitle)}_onRender(a,s){super._onRender(a,s),this.element.querySelectorAll("multi-select").forEach(i=>{i.disabled||i.querySelectorAll(".tag").forEach(r=>{var n;r.classList.add("remove"),(n=r.querySelector(":scope > span"))==null||n.classList.add("remove")})}),this.element.querySelectorAll(".label-top > p.hint").forEach(i=>{const r=i.parentElement.querySelector(":scope > label");r&&(i.ariaLabel=i.innerText,i.dataset.tooltip=i.innerHTML,i.innerHTML="",r.insertAdjacentElement("beforeend",i))})}_disableFields(){const a=`.window-content :is(${["INPUT","SELECT","TEXTAREA","BUTTON","DND5E-CHECKBOX","COLOR-PICKER","DOCUMENT-TAGS","FILE-PICKER","HUE-SLIDER","MULTI-SELECT","PROSE-MIRROR","RANGE-PICKER","STRING-TAGS"].join(", ")}):not(.interface-only)`;for(const s of this.element.querySelectorAll(a))s.tagName==="TEXTAREA"?s.readOnly=!0:s.disabled=!0}}return b(t,"DEFAULT_OPTIONS",{classes:["dnd5e2"],window:{subtitle:""}}),b(t,"PARTS",{}),t}const{ApplicationV2:Ze}=foundry.applications.api;class et extends Xe(Ze){}class Re extends et{get form(){return this.options.tag==="form"?this.element:this.element.querySelector("form")}async _preparePartContext(t,e,a){return e={...await super._preparePartContext(t,e,a)},t==="content"?this._prepareContentContext(e,a):t==="footer"?this._prepareFooterContext(e,a):e}async _prepareContentContext(t,e){return t.content=this.options.content??"",t}async _prepareFooterContext(t,e){var a;return t.buttons=(a=this.options.buttons)==null?void 0:a.map(s=>({...s,cssClass:s.class})),t}_attachFrameListeners(){var t,e;super._attachFrameListeners(),this.options.tag!=="form"&&((t=this.form)==null||t.addEventListener("submit",this._onSubmitForm.bind(this,this.options.form)),(e=this.form)==null||e.addEventListener("change",this._onChangeForm.bind(this,this.options.form)))}}b(Re,"DEFAULT_OPTIONS",{tag:"dialog",window:{contentTag:"form",contentClasses:["standard-form"],minimizable:!1}}),b(Re,"PARTS",{content:{template:"systems/dnd5e/templates/shared/dialog-content.hbs"},footer:{template:"templates/generic/form-footer.hbs"}});const{DiceTerm:tt}=foundry.dice.terms;var M,ae,U,ie,Ee,ge,He;const Y=class Y extends Re{constructor(e={},a={},s={}){super(s);j(this,ie);j(this,M);j(this,ae);j(this,U);W(this,M,e),W(this,ae,a),re(this,ie,Ee).call(this,foundry.utils.deepClone(I(this,M)))}static get rollType(){return CONFIG.Dice.BasicRoll}get config(){return I(this,M)}get message(){return I(this,ae)}get rolls(){return I(this,U)}get rollType(){return this.options.rollType??this.constructor.rollType}_identifyDiceTerms(){let e=[],a=!0;const s=r=>{if(r instanceof tt){if(!Number.isFinite(r.number)||!Number.isFinite(r.faces)||!this.options.rendering.dice.denominations.has(r.denomination))return a=!1;for(let n=0;n<r.number;n++)e.push({icon:`systems/dnd5e/icons/svg/dice/${r.denomination}.svg`,label:r.denomination,denomination:r.denomination})}},i=(r=[])=>{for(const n of r)s(n),"dice"in n&&i(n.dice)};if(this.rolls.forEach(r=>i(r.terms)),e.length>this.options.rendering.dice.max){const r=e.reduce((n,{icon:l,denomination:d})=>(n[d]??(n[d]={icon:l,count:0}),n[d].count++,n),{});e=Object.entries(r).map(([n,{icon:l,count:d}])=>({icon:l,label:`${d}${n}`})),e.length>this.options.rendering.dice.max&&(a=!1)}else e.length||(a=!1);return a?e:[]}async _preparePartContext(e,a,s){switch(a=await super._preparePartContext(e,a,s),e){case"buttons":return this._prepareButtonsContext(a,s);case"configuration":return this._prepareConfigurationContext(a,s);case"formulas":return this._prepareFormulasContext(a,s);default:return a}}async _prepareButtonsContext(e,a){return e.buttons={roll:{default:!0,icon:'<i class="fa-solid fa-dice" inert></i>',label:game.i18n.localize("DND5E.Roll")}},e}async _prepareConfigurationContext(e,a){var s;return e.fields=[{field:new foundry.data.fields.StringField({label:game.i18n.localize("DND5E.RollMode"),blank:!1,required:!0}),name:"rollMode",value:this.message.rollMode??((s=this.options.default)==null?void 0:s.rollMode)??game.settings.get("core","rollMode"),options:Object.entries(CONFIG.Dice.rollModes).map(([i,r])=>({value:i,label:game.i18n.localize(`${game.release.generation<13?r:r.label}`)}))}],e}async _prepareFormulasContext(e,a){return e.rolls=this.rolls.map(s=>({roll:s})),e.dice=this._identifyDiceTerms()||[],e}_buildConfig(e,a,s){var r,n;e=foundry.utils.mergeObject({parts:[],data:{},options:{}},e);for(const l of I(this,M).hookNames??[""])Hooks.callAll(`dnd5e.build${l.capitalize()}RollConfig`,this,e,a,s);const i=a==null?void 0:a.get(`roll.${s}.situational`);i&&e.situational!==!1?(e.parts.push("@situational"),e.data.situational=i):e.parts.findSplice(l=>l==="@situational"),(n=(r=this.options).buildConfig)==null||n.call(r,this.config,e,a,s);for(const l of I(this,M).hookNames??[""])Hooks.callAll(`dnd5e.postBuild${l.capitalize()}RollConfig`,this.config,e,s,{app:this,formData:a});return e}_finalizeRolls(e){return this.rolls}rebuild(){this._onChangeForm(this.options.form,new Event("change"))}_onChangeForm(e,a){super._onChangeForm(e,a);const s=new FormDataExtended(this.form);s.has("rollMode")&&(this.message.rollMode=s.get("rollMode")),re(this,ie,Ee).call(this,foundry.utils.deepClone(I(this,M)),s),this.render({parts:["formulas"]})}_onClose(e={}){var a;(a=e.dnd5e)!=null&&a.submitted||W(this,U,[])}static async configure(e={},a={},s={}){return new Promise(i=>{const r=new this(e,s,a.options);r.addEventListener("close",()=>i(r.rolls),{once:!0}),r.render({force:!0})})}};M=new WeakMap,ae=new WeakMap,U=new WeakMap,ie=new WeakSet,Ee=function(e,a){var i;const s=this.rollType;W(this,U,((i=e.rolls)==null?void 0:i.map((r,n)=>s.fromConfig(this._buildConfig(r,a,n),this.config)))??[])},ge=new WeakSet,He=async function(e,a,s){var i,r;s.has("rollMode")&&(this.message.rollMode=s.get("rollMode")),W(this,U,this._finalizeRolls((r=(i=e.submitter)==null?void 0:i.dataset)==null?void 0:r.action)),await this.close({dnd5e:{submitted:!0}})},j(Y,ge),b(Y,"DEFAULT_OPTIONS",{classes:["roll-configuration"],window:{title:"DND5E.RollConfiguration.Title",icon:"fa-solid fa-dice"},form:{handler:re(Y,ge,He)},position:{width:400},buildConfig:null,rendering:{dice:{max:5,denominations:new Set(["d4","d6","d8","d10","d12","d20"])}}}),b(Y,"PARTS",{formulas:{template:"systems/dnd5e/templates/dice/roll-formulas.hbs"},configuration:{template:"systems/dnd5e/templates/dice/roll-configuration.hbs"},buttons:{template:"systems/dnd5e/templates/dice/roll-buttons.hbs"}});let de=Y;const ee=class ee extends de{static get rollType(){return CONFIG.Dice.DamageRoll}async _prepareButtonsContext(t,e){var i;const a=((i=this.config.critical)==null?void 0:i.allow)!==!1,s=a&&this.options.defaultButton==="critical";return t.buttons={critical:{default:s,icon:'<i class="fa-solid fa-bomb" inert></i>',label:game.i18n.localize("DND5E.CriticalHit")},normal:{default:!s,icon:'<i class="fa-solid fa-dice" inert></i>',label:game.i18n.localize(a?"DND5E.Normal":"DND5E.Roll")}},a||delete t.buttons.critical,t}async _prepareFormulasContext(t,e){t=await super._prepareFormulasContext(t,e);const a=foundry.utils.mergeObject(CONFIG.DND5E.damageTypes,CONFIG.DND5E.healingTypes,{inplace:!1});return t.rolls=t.rolls.map(({roll:s})=>{var i,r;return{roll:s,damageConfig:a[s.options.type]??a[(i=s.options.types)==null?void 0:i[0]],damageTypes:((r=s.options.types)==null?void 0:r.length)>1?Object.entries(a).map(([n,l])=>{var d;return(d=s.options.types)!=null&&d.includes(n)?{value:n,label:l.label}:null}).filter(n=>n):null}}),t}_buildConfig(t,e,a){t=super._buildConfig(t,e,a);const s=e==null?void 0:e.get(`roll.${a}.damageType`);return s&&(t.options.type=s),t}_finalizeRolls(t){return this.rolls.map(e=>(e.options.isCritical=t==="critical",e.configureDamage({critical:this.config.critical}),e))}};b(ee,"PARTS",{...Me(ee,ee,"PARTS"),formulas:{template:"systems/dnd5e/templates/dice/damage-formulas.hbs"}});let Se=ee;var Ie,Pe;const{MODIFIER_CODES:ne,MODIFIER_KEYS:ye}=((Pe=(Ie=foundry.helpers)==null?void 0:Ie.interaction)==null?void 0:Pe.KeyboardManager)??KeyboardManager,st={Alt:ne.Alt,Control:ne.Control.filter(c=>c.startsWith("Control")),Meta:ne.Control.filter(c=>!c.startsWith("Control")),Shift:ne.Shift};function be(c,t){if(!c)return!1;const e={},a=(s,i)=>{e[s]=i,st[s].forEach(r=>e[r]=i)};return a(ye.ALT,c.altKey),a(ye.CONTROL,c.ctrlKey),a("Meta",c.metaKey),a(ye.SHIFT,c.shiftKey),game.keybindings.get("dnd5e",t).some(s=>game.keyboard.downKeys.has(s.key)&&s.modifiers.every(i=>e[i])?!0:s.modifiers.length?!1:e[s.key])}const{DiceTerm:at,NumericTerm:it}=foundry.dice.terms,te=class te extends Roll{static fromConfig(t,e){var s;const a=(t.parts??[]).join(" + ");return t.options??(t.options={}),(s=t.options).target??(s.target=e.target),new this(a,t.data,t.options)}static constructParts(t,e={}){const a=[];for(const[s,i]of Object.entries(t))!i&&i!==0||(a.push(`@${s}`),foundry.utils.setProperty(e,s,foundry.utils.getType(i)==="string"?Roll.replaceFormulaData(i,e):i));return{parts:a,data:e}}static async build(t={},e={},a={}){const s=await this.buildConfigure(t,e,a);return await this.buildEvaluate(s,t,a),await this.buildPost(s,t,a),s}static async buildConfigure(t={},e={},a={}){var r;t.hookNames=[...t.hookNames??[],""];for(const n of t.hookNames)if(Hooks.call(`dnd5e.preRoll${n.capitalize()}V2`,t,e,a)===!1)return[];this.applyKeybindings(t,e,a);let s;e.configure===!1?s=((r=t.rolls)==null?void 0:r.map((n,l)=>{var d,g;(g=(d=e.options)==null?void 0:d.buildConfig)==null||g.call(d,t,n,null,l);for(const u of t.hookNames)Hooks.callAll(`dnd5e.postBuild${u.capitalize()}RollConfig`,t,n,l);return this.fromConfig(n,t)}))??[]:s=await(e.applicationClass??this.DefaultConfigurationDialog).configure(t,e,a);const i=foundry.utils.getProperty(a,"data.flags.dnd5e.roll.type");i&&s.forEach(n=>{var l;return(l=n.options).rollType??(l.rollType=i)});for(const n of t.hookNames){const l=`dnd5e.post${n.capitalize()}RollConfiguration`;if(Hooks.call(l,s,t,e,a)===!1)return[]}return s}static async buildEvaluate(t,e={},a={}){if(e.evaluate!==!1)for(const s of t)await s.evaluate()}static async buildPost(t,e,a){var i,r;a.data=foundry.utils.expandObject(a.data??{});const s=(r=(i=e.event)==null?void 0:i.target.closest("[data-message-id]"))==null?void 0:r.dataset.messageId;return s&&foundry.utils.setProperty(a.data,"flags.dnd5e.originatingMessage",s),t!=null&&t.length&&e.evaluate!==!1&&a.create!==!1&&(a.document=await this.toMessage(t,a.data,{rollMode:a.rollMode})),a.document}static applyKeybindings(t,e,a){e.configure??(e.configure=!0)}get isFailure(){if(this._evaluated)return Number.isNumeric(this.options.target)?this.total<this.options.target:!1}get isSuccess(){if(this._evaluated)return Number.isNumeric(this.options.target)?this.total>=this.options.target:!1}static async toMessage(t,e={},{rollMode:a,create:s=!0}={}){for(const n of t)n._evaluated||await n.evaluate({allowInteractive:a!==CONST.DICE_ROLL_MODES.BLIND}),a??(a=n.options.rollMode);e=foundry.utils.mergeObject({sound:CONFIG.sounds.dice},e),e.rolls=t,this._prepareMessageData(t,e);const i=getDocumentClass("ChatMessage"),r=new i(e);return s?i.create(r.toObject(),{rollMode:a}):(a&&r.applyRollMode(a),r.toObject())}static _prepareMessageData(t,e){}async evaluate(t={}){return this.preCalculateDiceTerms(t),super.evaluate(t)}evaluateSync(t={}){return this.preCalculateDiceTerms(t),super.evaluateSync(t)}static replaceFormulaData(t,e,a){return super.replaceFormulaData(t,e,a).replaceAll(/\$"?!(.+?)!"?\$/g,"$1")}preCalculateDiceTerms(t={}){this._evaluated||!t.maximize&&!t.minimize||(this.terms=this.terms.map(e=>{if(e instanceof at&&e.modifiers.length){const a=!t.maximize,s=this.constructor.preCalculateTerm(e,{minimize:a});if(Number.isFinite(s))return new it({number:s,options:e.options})}return e}))}static preCalculateTerm(t,{minimize:e=!1}={}){let a=e?1:t.faces,s=t.number;const i=foundry.utils.deepClone(t.modifiers),r=new Set(["k","kh","kl"]),n=new Set(["d","dh","dl"]),l=new Set([...r,...n,"max","min"]);let d=!1;for(const g of i){const u=/(m[ai][xn]|[kd][hl]?)(\d+)?/i,m=g.match(u);if(!m)continue;m[0].length<m.input.length&&i.push(m.input.slice(m[0].length));let[,p,h]=m;if(p=p.toLowerCase(),!l.has(p))continue;d=!0;const f=parseInt(h)||(p==="max"||p==="min"?-1:1);if(f>0){if(p==="max"&&e||p==="min"&&!e)continue;p==="max"||p==="min"?a=Math.min(t.faces,f):r.has(p)?s=Math.min(s,f):n.has(p)&&(s=Math.max(1,s-f))}}return d?a*s:null}simplify(){var t,e;for(const a of this.dice){const s=a._number;s instanceof te&&s.isDeterministic&&(a._number=s.evaluateSync().total);const i=a._faces;i instanceof te&&i.isDeterministic&&(a._faces=i.evaluateSync().total),(e=(t=i.terms)==null?void 0:t[0])!=null&&e.flavor&&(a.options.flavor=i.terms[0].flavor)}this.resetFormula()}static mergeConfigs(t,e={}){var a;return e.data&&(t.data??(t.data={}),Object.assign(t.data,e.data)),(a=e.parts)!=null&&a.length&&(t.parts??(t.parts=[]),t.parts.unshift(...e.parts)),e.options&&(t.options??(t.options={}),foundry.utils.mergeObject(t.options,e.options)),t}};b(te,"DefaultConfigurationDialog",de);let ke=te;const{DiceTerm:rt,FunctionTerm:nt,NumericTerm:ve,OperatorTerm:Te,ParentheticalTerm:Ce,StringTerm:le}=foundry.dice.terms;class De extends ke{constructor(t,e,a){super(t,e,a),this.options.preprocessed||this.preprocessFormula(),this.options.configured||this.configureDamage()}static fromConfig(t,e){return e.critical&&(t=foundry.utils.deepClone(t),t.options??(t.options={}),t.options.critical=foundry.utils.mergeObject(e.critical,t.options.critical??{},{inplace:!1})),super.fromConfig(t,e)}static async build(t={},e={},a={}){var s,i;return t.critical??(t.critical={}),(s=t.critical).multiplyNumeric??(s.multiplyNumeric=game.settings.get("dnd5e","criticalDamageModifiers")),(i=t.critical).powerfulCritical??(i.powerfulCritical=game.settings.get("dnd5e","criticalDamageMaxDice")),super.build(t,e,a)}static applyKeybindings(t,e,a){var i;const s={default:be(t.event,"skipDialogNormal"),normal:be(t.event,"skipDialogDisadvantage"),critical:be(t.event,"skipDialogAdvantage")};e.configure??(e.configure=Object.values(s).every(r=>!r));for(const r of t.rolls)r.options??(r.options={}),(i=r.options).isCritical??(i.isCritical=(t.isCritical||s.critical)&&!s.normal)}get isCritical(){return this.options.isCritical===!0}preprocessFormula(){for(let[t,e]of this.terms.entries()){const a=this.terms[t+1],s=this.terms[t-1];if(e instanceof le&&/^d\d+/.test(e.term)&&!(s instanceof Ce)){const i=`1${e.term}`,r=new Roll(i).terms[0];this.terms.splice(t,1,r),e=r}else if(e instanceof Ce&&s instanceof le&&s.term.match(/^[0-9]*d$/)){if(e.isDeterministic){let i=`${s.term}${e.evaluate().total}`,r=2;a instanceof le&&(i+=a.term,r+=1);const n=new Roll(i).terms[0];this.terms.splice(t-1,r,n),e=n}}else if((e instanceof Ce||e instanceof nt)&&a instanceof le&&a.term.match(/^d[0-9]*$/)&&e.isDeterministic){const i=`${e.evaluate().total}${a.term}`,r=new Roll(i).terms[0];this.terms.splice(t,2,r),e=r}}this.resetFormula(),this.options.preprocessed=!0}configureDamage({critical:t={}}={}){var a;t=foundry.utils.mergeObject(t,this.options.critical??{},{inplace:!1});const e=new Map;for(let[s,i]of this.terms.entries())if(i instanceof rt){if(i._number instanceof Roll){if(!i._number.isDeterministic)continue;i._number._evaluated||i._number.evaluateSync()}if(i.options.baseNumber=i.options.baseNumber??i.number,i.number=i.options.baseNumber,this.isCritical){let r=t.multiplier??2;if(t.powerfulCritical){const l=Roll.create(i.formula).evaluateSync({maximize:!0}).total;if(l>0){const d=((a=i.flavor)==null?void 0:a.toLowerCase().trim())??game.i18n.localize("DND5E.PowerfulCritical");e.set(d,(e.get(d)??0)+l)}r=Math.max(1,r-1)}let n=t.bonusDice&&s===0?t.bonusDice:0;i.alter(r,n),i.options.critical=!0}}else i instanceof ve&&(i.options.criticalFlatBonus?this.terms.splice(s-1,2):t.multiplyNumeric&&(i.options.baseNumber=i.options.baseNumber??i.number,i.number=i.options.baseNumber,this.isCritical&&(i.number*=t.multiplier??2,i.options.critical=!0)));if(t.powerfulCritical&&e.size)for(const[s,i]of e.entries())this.terms.push(new Te({operator:"+"})),this.terms.push(new ve({number:i,options:{flavor:s,criticalFlatBonus:!0}}));if(this.isCritical&&t.bonusDamage){const s=new Roll(t.bonusDamage,this.data);s.terms[0]instanceof Te||this.terms.push(new Te({operator:"+"})),this.terms.push(...s.terms)}this.resetFormula(),this.options.configured=!0}async configureDialog(t={},e={}){return(await this.constructor.configureDialog([this],t,e))[0]??null}static async configureDialog(t,{title:e,defaultRollMode:a,defaultCritical:s=!1,template:i,allowCritical:r=!0}={},n={}){return foundry.utils.logCompatibilityWarning("The `configureDialog` on DamageRoll has been deprecated and is now handled through `DamageRoll.build`.",{since:"DnD5e 4.0",until:"DnD5e 5.0"}),await this.DefaultConfigurationDialog.configure({critical:{allow:r},rolls:t.map(d=>({parts:[d.formula],options:d.options}))},{options:{title:e}},{rollMode:a})}}b(De,"DefaultConfigurationDialog",Se);const{Coin:lt,DiceTerm:Ne,Die:ot,FunctionTerm:ct,NumericTerm:me,OperatorTerm:N,ParentheticalTerm:Ge,RollTerm:dt}=foundry.dice.terms;function $e(c,{preserveFlavor:t=!1,deterministic:e=!1}={}){var d;let a;try{a=new Roll(c)}catch(g){console.warn(`Unable to simplify formula '${c}': ${g}`)}if(Roll.validate(a.formula),t||(a.terms=Roll.parse(a.formula.replace(dt.FLAVOR_REGEXP,""))),e){a.terms=we(a.terms);const g=[];let u=[],m=!1,p;for(let h=a.terms.length-1;h>=0;){let f,y=a.terms[h];if(y instanceof Ge&&(f=$e(y.term,{preserveFlavor:t,deterministic:e})),Number.isNumeric(f)){const T={number:f};t&&(T.options={flavor:y.flavor}),y=new me(T)}for(p=y.isDeterministic&&(!m||p),p?u.unshift(y):u=[],y=a.terms[--h];y instanceof N;){if(p&&u.unshift(y),y.operator==="*"||y.operator==="/"||y.operator==="%")m=!0;else for(m=!1;u.length;)g.unshift(u.pop());y=a.terms[--h]}}if(p)for(;u.length;)g.unshift(u.pop());a.terms=g}if(a.terms=we(a.terms),/[*/]/.test(a.formula))return a.isDeterministic&&!/d\(/.test(a.formula)&&(!/\[/.test(a.formula)||!t)?String(new Roll(a.formula).evaluateSync().total):a.constructor.getFormula(a.terms);a.terms=ze(a.terms),a.terms=Roll.simplifyTerms(a.terms);let{poolTerms:s,diceTerms:i,mathTerms:r,numericTerms:n}=mt(a.terms);n=ut(n??[]),i=gt(i??[]);const l=[i,s,r,n].flat().filter(Boolean);return((d=l[0])==null?void 0:d.operator)==="+"&&l.shift(),a.constructor.getFormula(l)}function we(c){return c.reduce((t,e)=>{const a=t[t.length-1],s=new Set([a==null?void 0:a.operator,e.operator]);return s.has(void 0)?t.push(e):s.has("+")&&s.has("-")?t.splice(-1,1,new N({operator:"-"})):s.has("-")&&s.size===1?t.splice(-1,1,new N({operator:"+"})):s.has("+")||t.push(e),t},[])}function ut(c){const t=[],{annotated:e,unannotated:a}=xe(c);if(a.length){const s=Roll.safeEval(Roll.getFormula(a));if(s===0)return[...e];t.push(new N({operator:s<0?"-":"+"})),t.push(new me({number:Math.abs(s)}))}return[...t,...e]}function gt(c){const{annotated:t,unannotated:e}=xe(c),a=e.reduce((i,r,n)=>{var m;if(r instanceof N)return i;const l=((m=r.constructor)==null?void 0:m.name)==="Coin",d=l?"c":r.faces,g=l?"":r.modifiers.filterJoin(""),u=`${e[n-1].operator}${d}${g}`;return i[u]??(i[u]={}),r._number instanceof Roll&&r._number.isDeterministic&&r._number.evaluateSync(),i[u].number=(i[u].number??0)+r.number,l||(i[u].modifiers=(i[u].modifiers??[]).concat(r.modifiers)),i},{});return[...Object.entries(a).flatMap(([i,{number:r,modifiers:n}])=>[new N({operator:i.charAt(0)}),i.slice(1)==="c"?new lt({number:r}):new ot({number:r,faces:parseInt(i.slice(1)),modifiers:[...new Set(n)]})]),...t]}function ze(c){return c=c.reduce((t,e)=>{if(e instanceof Ge)if(e.isDeterministic){const a=new Roll(e.term);e=new me({number:a.evaluateSync().total})}else{const a=new Roll(e.term).terms;e=ze(a)}return t.push(e),t},[]),we(c.flat())}function mt(c){return c[0]instanceof N||c.unshift(new N({operator:"+"})),c.reduce((t,e,a)=>{let s;e instanceof Ne?s=Ne:e instanceof ct&&e.isDeterministic?s=me:s=e.constructor;const i=`${s.name.charAt(0).toLowerCase()}${s.name.substring(1)}s`;return(t[i]=t[i]??[]).push(c[a-1],e),t},{})}function xe(c){return c.reduce((t,e,a)=>(e instanceof N||t[e.flavor?"annotated":"unannotated"].push(c[a-1],e),t),{annotated:[],unannotated:[]})}class oe extends ChatMessage{constructor(){super(...arguments);b(this,"_highlighted",null);b(this,"_trayStates")}get canApplyDamage(){var a,s,i;const e=(s=(a=this.flags.dnd5e)==null?void 0:a.roll)==null?void 0:s.type;return e&&e!=="damage"?!1:this.isRoll&&this.isContentVisible&&!!((i=canvas.tokens)!=null&&i.controlled.length)}get canSelectTargets(){var e,a;return((a=(e=this.flags.dnd5e)==null?void 0:e.roll)==null?void 0:a.type)!=="attack"?!1:this.isRoll&&this.isContentVisible}get isRoll(){var e,a;return((e=this.system)==null?void 0:e.isRoll)!==void 0?this.system.isRoll:super.isRoll&&!((a=this.flags.dnd5e)!=null&&a.rest)}get shouldDisplayChallenge(){if(game.user.isGM||this.author===game.user)return!0;switch(game.settings.get("dnd5e","challengeVisibility")){case"all":return!0;case"player":return!this.author.isGM;default:return!1}}static migrateData(e){if(e=super.migrateData(e),foundry.utils.hasProperty(e,"flags.dnd5e.itemData")&&(foundry.utils.setProperty(e,"flags.dnd5e.item.data",e.flags.dnd5e.itemData),delete e.flags.dnd5e.itemData),foundry.utils.hasProperty(e,"flags.dnd5e.use")){const a=e.flags.dnd5e.use;foundry.utils.setProperty(e,"flags.dnd5e.messageType","usage"),a.type&&foundry.utils.setProperty(e,"flags.dnd5e.item.type",a.type),a.itemId&&foundry.utils.setProperty(e,"flags.dnd5e.item.id",a.itemId),a.itemUuid&&foundry.utils.setProperty(e,"flags.dnd5e.item.uuid",a.itemUuid)}return e}prepareData(){var e,a,s,i,r;if(super.prepareData(),this._shimFlags(),!((a=(e=this.flags.dnd5e)==null?void 0:e.item)!=null&&a.data)&&((i=(s=this.flags.dnd5e)==null?void 0:s.item)!=null&&i.id)){const n=(r=this.getFlag("dnd5e","use.consumed.deleted"))==null?void 0:r.find(l=>l._id===this.flags.dnd5e.item.id);n&&Object.defineProperty(this.flags.dnd5e.item,"data",{value:n})}dnd5e.registry.messages.track(this)}async getHTML(e={}){var i;const a=await super.getHTML(e),s=a instanceof HTMLElement?a:a[0];return foundry.utils.getType((i=this.system)==null?void 0:i.getHTML)==="function"?(await this.system.getHTML(s,e),a):(this._displayChatActionButtons(a),this._highlightCriticalSuccessFailure(a),game.settings.get("dnd5e","autoCollapseItemCards")&&a.find(".description.collapsible").each((r,n)=>n.classList.add("collapsed")),this._enrichChatCard(s),this._collapseTrays(s),this._activateActivityListeners(s),dnd5e.bastion._activateChatListeners(this,s),Hooks.callAll("dnd5e.renderChatMessage",this,s),a)}_collapseTrays(e){var s,i;let a;switch(game.settings.get("dnd5e","autoCollapseChatTrays")){case"always":a=!0;break;case"never":a=!1;break;case"older":a=this.timestamp<Date.now()-5*60*1e3;break}for(const r of e.querySelectorAll(".card-tray"))r.classList.toggle("collapsed",((s=this._trayStates)==null?void 0:s.get(r.className.replace(" collapsed","")))??a);for(const r of e.querySelectorAll(this.constructor.TRAY_TYPES.join(", ")))r.toggleAttribute("open",((i=this._trayStates)==null?void 0:i.get(r.tagName))??!a)}_displayChatActionButtons(e){var s;const a=e.find(".dnd5e.chat-card, .dnd5e2.chat-card");if(a.length>0){const i=e.find(".flavor-text");i.text()===e.find(".item-name").text()&&i.remove(),this.shouldDisplayChallenge&&(a[0].dataset.displayChallenge="");const r=game.actors.get(this.speaker.actor),n=game.user.isGM||(r==null?void 0:r.isOwner)||this.author.id===game.user.id;for(const l of e[0].querySelectorAll(".card-buttons button"))l.dataset.visibility!=="all"&&(l.dataset.visibility==="gm"&&!game.user.isGM||!n||(s=this.getAssociatedActivity())!=null&&s.shouldHideChatButton(l,this))&&(l.hidden=!0)}}_highlightCriticalSuccessFailure(e){var l,d;if(!this.isContentVisible||!this.rolls.length)return;const a=this.getOriginatingMessage(),s=a==null?void 0:a.shouldDisplayChallenge,i=game.user.isGM||game.settings.get("dnd5e","attackRollVisibility")!=="none",r=((d=(l=this.flags.dnd5e)==null?void 0:l.roll)==null?void 0:d.forceSuccess)===!0;function n(g){const u=document.createElement("i");return u.classList.add("fas",g),u.setAttribute("inert",""),u}for(let[g,u]of this.rolls.entries()){const m=u.dice[0];if((m==null?void 0:m.faces)!==20||(m==null?void 0:m.values.length)!==1)continue;u=dnd5e.dice.D20Roll.fromRoll(u);const p=u.dice[0];if("success"in p.results[0]||p.options.marginSuccess||p.options.marginFailure)continue;const f=e.find(".dice-total")[g];if(!f)continue;const y=["attack","death"].includes(this.getFlag("dnd5e","roll.type")),D=this.getFlag("dnd5e","roll.type")==="attack"?i:s;p.options.target&&D&&(u.isSuccess||r?f.classList.add("success"):f.classList.add("failure")),y&&u.isCritical&&f.classList.add("critical"),y&&u.isFumble&&!r&&f.classList.add("fumble");const w=document.createElement("div");w.classList.add("icons"),f.classList.contains("critical")?w.append(n("fa-check"),n("fa-check")):f.classList.contains("fumble")?w.append(n("fa-xmark"),n("fa-xmark")):f.classList.contains("success")?w.append(n("fa-check")):f.classList.contains("failure")&&w.append(n("fa-xmark")),w.children.length&&f.append(w)}}_enrichChatCard(e){var D,w,V,K,Le,Ae;const a=this.getAssociatedActor();let s,i;this.isContentVisible?(s=(a==null?void 0:a.img)??this.author.avatar,i=this.alias):(s=this.author.avatar,i=this.author.name);const r=document.createElement("a");r.classList.add("avatar"),a&&(r.dataset.uuid=a.uuid);const n=document.createElement("img");Object.assign(n,{src:s,alt:i}),r.append(n);const l=document.createElement("span");l.classList.add("name-stacked");const d=document.createElement("span");d.classList.add("title"),d.append(i),l.append(d);const g=document.createElement("span");g.classList.add("subtitle"),this.whisper.length&&(g.innerText=((D=e.querySelector(".whisper-to"))==null?void 0:D.innerText)??""),i!==((w=this.author)==null?void 0:w.name)&&!g.innerText.length&&(g.innerText=((V=this.author)==null?void 0:V.name)??""),l.appendChild(g);const u=e.querySelector(".message-sender");u==null||u.replaceChildren(r,l),(K=e.querySelector(".whisper-to"))==null||K.remove();const m=e.querySelector(".message-metadata"),p=m.querySelector(".message-delete");game.user.isGM?p==null||p.querySelector("i").classList.add("fa-fw"):p==null||p.remove();const h=document.createElement("a");h.setAttribute("aria-label",game.i18n.localize("DND5E.AdditionalControls")),h.classList.add("chat-control"),h.dataset.contextMenu="",h.innerHTML='<i class="fas fa-ellipsis-vertical fa-fw"></i>',m.appendChild(h),e.querySelectorAll("i.dnd5e-icon").forEach(O=>{const q=document.createElement("dnd5e-icon");q.src=O.dataset.src,O.replaceWith(q)});const f=this.getFlag("dnd5e","roll"),y=this.getAssociatedItem(),T=this.getAssociatedActivity();if(this.isContentVisible&&y&&f){const O=f.type==="damage"&&((Le=this.rolls[0])==null?void 0:Le.isCritical),q=f.type==="damage"?O?game.i18n.localize("DND5E.CriticalHit"):(T==null?void 0:T.damageFlavor)??game.i18n.localize("DND5E.DamageRoll"):f.type==="attack"?(T==null?void 0:T.getActionLabel(f.attackMode))??"":((Ae=y.system.type)==null?void 0:Ae.label)??game.i18n.localize(CONFIG.Item.typeLabels[y.type]),J=document.createElement("div");J.classList.add("dnd5e2","chat-card"),J.innerHTML=`
        <section class="card-header description ${O?"critical":""}">
          <header class="summary">
            <div class="name-stacked">
              <span class="subtitle">${q}</span>
            </div>
          </header>
        </section>
      `;const Oe=document.createElement("img");Object.assign(Oe,{className:"gold-icon",src:y.img,alt:y.name}),J.querySelector("header").insertAdjacentElement("afterbegin",Oe);const pe=document.createElement("span");pe.classList.add("title"),pe.append(y.name),J.querySelector(".name-stacked").insertAdjacentElement("afterbegin",pe),e.querySelector(".message-header .flavor-text").remove(),e.querySelector(".message-content").insertAdjacentElement("afterbegin",J)}this._enrichAttackTargets(e),this.isContentVisible?(e.querySelectorAll(".dice-tooltip").forEach((O,q)=>{!(f instanceof De)&&this.rolls[q]&&this._enrichRollTooltip(this.rolls[q],O)}),this._enrichDamageTooltip(this.rolls.filter(O=>O instanceof De),e),this._enrichSaveTooltip(e),this._enrichEnchantmentTooltip(e),e.querySelectorAll(".dice-roll").forEach(O=>O.addEventListener("click",this._onClickDiceRoll.bind(this)))):e.querySelectorAll(".dice-roll").forEach(O=>O.classList.add("secret-roll")),this._enrichUsageEffects(e),r.addEventListener("click",this._onTargetMouseDown.bind(this)),r.addEventListener("pointerover",this._onTargetHoverIn.bind(this)),r.addEventListener("pointerout",this._onTargetHoverOut.bind(this))}_enrichRollTooltip(e,a){const s=Number($e(e._formula,{deterministic:!0}));if(!s)return;const i=s<0?"-":"+",r=document.createElement("section");r.classList.add("tooltip-part","constant"),r.innerHTML=`
      <div class="dice">
        <ol class="dice-rolls"></ol>
        <div class="total">
          <span class="value"><span class="sign">${i}</span>${Math.abs(s)}</span>
        </div>
      </div>
    `,a.appendChild(r)}_enrichAttackTargets(e){var u,m;const a=this.rolls[0];if(!(a instanceof dnd5e.dice.D20Roll))return;const s=CONFIG.DND5E.weaponMasteries[a.options.mastery];if(s){const p=document.createElement("p");p.classList.add("supplement");let h=s.label;s.reference&&(h=`
        <a class="content-link" draggable="true" data-link data-uuid="${s.reference}"
           data-tooltip="${h}">${h}</a>
      `),p.innerHTML=`<strong>${game.i18n.format("DND5E.WEAPON.Mastery.Flavor")}</strong> ${h}`,(u=e.querySelector(".chat-card")??e.querySelector(".message-content"))==null||u.appendChild(p)}const i=game.settings.get("dnd5e","attackRollVisibility");if(!(game.user.isGM||i!=="none"))return;const n=this.getFlag("dnd5e","targets");if(!(n!=null&&n.length))return;const l=document.createElement("div");l.classList.add("dnd5e2"),l.innerHTML=`
      <div class="card-tray targets-tray collapsible collapsed">
        <label class="roboto-upper">
          <i class="fas fa-bullseye" inert></i>
          <span>${game.i18n.localize("DND5E.TargetPl")}</span>
          <i class="fas fa-caret-down" inert></i>
        </label>
        <div class="collapsible-content">
          <ul class="dnd5e2 unlist evaluation wrapper"></ul>
        </div>
      </div>
    `;const d=l.querySelector("ul"),g=n.map(({name:p,ac:h,uuid:f})=>{!game.user.isGM&&i!=="all"&&(h="");const y=!a.isCritical&&(a.total<h||a.isFumble),T=document.createElement("li");return Object.assign(T.dataset,{uuid:f,miss:y}),T.className=`target ${y?"miss":"hit"}`,T.innerHTML=`
        <i class="fas ${y?"fa-times":"fa-check"}"></i>
        <div class="name"></div>
        ${h!==""?`
        <div class="ac">
          <i class="fas fa-shield-halved"></i>
          <span>${h===null?"&infin;":h}</span>
        </div>
        `:""}
      `,T.querySelector(".name").append(p),T}).sort((p,h)=>{const f=!!p.dataset.miss,y=!!h.dataset.miss;return f===y?0:f?1:-1});d.append(...g),d.querySelectorAll("li.target").forEach(p=>{p.addEventListener("click",this._onTargetMouseDown.bind(this)),p.addEventListener("pointerover",this._onTargetHoverIn.bind(this)),p.addEventListener("pointerout",this._onTargetHoverOut.bind(this))}),(m=e.querySelector(".message-content"))==null||m.appendChild(l)}_enrichDamageTooltip(e,a){var u;if(!e.length)return;const s=CONFIG.DND5E.aggregateDamageDisplay?he(e):e;let{formula:i,total:r,breakdown:n}=s.reduce((m,p)=>(m.formula.push(CONFIG.DND5E.aggregateDamageDisplay?p.formula:` + ${p.formula}`),m.total+=p.total,m.breakdown.push(this._simplifyDamageRoll(p)),m),{formula:[],total:0,breakdown:[]});i=i.join("").replace(/^ \+ /,""),a.querySelectorAll(".dice-roll").forEach(m=>m.remove());const l=document.createElement("div");l.classList.add("dice-roll");const d=n.reduce((m,{type:p,total:h,constant:f,dice:y})=>{const T=CONFIG.DND5E.damageTypes[p]??CONFIG.DND5E.healingTypes[p];return`${m}
        <section class="tooltip-part">
          <div class="dice">
            <ol class="dice-rolls">
              ${y.reduce((D,{result:w,classes:V})=>`
                ${D}<li class="roll ${V}">${w}</li>
              `,"")}
              ${f?`
              <li class="constant"><span class="sign">${f<0?"-":"+"}</span>${Math.abs(f)}</li>
              `:""}
            </ol>
            <div class="total">
              ${T?`<img src="${T.icon}" alt="${T.label}">`:""}
              <span class="label">${(T==null?void 0:T.label)??""}</span>
              <span class="value">${h}</span>
            </div>
          </div>
        </section>
      `},"");l.innerHTML=`
      <div class="dice-result">
        <div class="dice-formula">${i}</div>
        <div class="dice-tooltip-collapser">
          <div class="dice-tooltip">
            ${d}
          </div>
        </div>
        <h4 class="dice-total">${r}</h4>
      </div>
    `,a.querySelector(".message-content").appendChild(l);const g=this.getFlag("dnd5e","roll.damageOnSave");if(g){const m=document.createElement("p");m.classList.add("supplement"),m.innerHTML=`<strong>${game.i18n.format("DND5E.SAVE.OnSave")}</strong> ${game.i18n.localize(`DND5E.SAVE.FIELDS.damage.onSave.${g.capitalize()}`)}`,(u=a.querySelector(".chat-card, .message-content"))==null||u.appendChild(m)}if(game.user.isGM){const m=document.createElement("damage-application");m.classList.add("dnd5e2"),m.damages=he(e,{respectProperties:!0}).map(p=>({value:p.total,type:p.options.type,properties:new Set(p.options.properties??[])})),a.querySelector(".message-content").appendChild(m)}}_simplifyDamageRoll(e){const a={type:e.options.type,total:e.total,constant:0,dice:[]};let s=!1;for(let i=e.terms.length-1;i>=0;){const r=e.terms[i--];if(!(r instanceof foundry.dice.terms.NumericTerm)&&!(r instanceof foundry.dice.terms.DiceTerm))continue;const n=r.total;r instanceof foundry.dice.terms.DiceTerm&&a.dice.push(...r.results.map(g=>({result:r.getResultLabel(g),classes:r.getResultCSS(g).filterJoin(" ")})));let l=1,d=e.terms[i];for(;d instanceof foundry.dice.terms.OperatorTerm;)["+","-"].includes(d.operator)||(s=!0),d.operator==="-"&&(l*=-1),d=e.terms[--i];r instanceof foundry.dice.terms.NumericTerm&&(a.constant+=n*l)}return s&&(a.constant=null),a}_enrichEnchantmentTooltip(e){var n,l;if(!this.getFlag("dnd5e","use.enchantmentProfile"))return;const s=this.getFlag("dnd5e","use.concentrationId");if(s&&!((n=this.getAssociatedActor())!=null&&n.effects.get(s)))return;const i=document.createElement("enchantment-application");i.classList.add("dnd5e2");const r=e.querySelector(".card-footer");r?r.insertAdjacentElement("beforebegin",i):(l=e.querySelector(".chat-card"))==null||l.append(i)}_enrichSaveTooltip(e){const a=this.getAssociatedActor(),s=this.getFlag("dnd5e","roll");if((a==null?void 0:a.type)!=="npc"||(s==null?void 0:s.type)!=="save"||this.rolls.some(r=>r.isSuccess))return;const i=document.createElement("div");if(i.classList.add("dnd5e2","chat-card"),s.forceSuccess)i.insertAdjacentHTML("beforeend",`
      <p class="supplement">
        <strong>${game.i18n.localize("DND5E.ROLL.Status")}</strong>
        ${game.i18n.localize("DND5E.LegendaryResistance.Resisted")}
      </p>
    `);else if(a.system.resources.legres.value&&a.isOwner)i.insertAdjacentHTML("beforeend",`
        <div class="card-buttons">
          <button type="button">
            <i class="fa-solid fa-dragon" inert></i>
            ${game.i18n.localize("DND5E.LegendaryResistance.Action.Resist")}
          </button>
        </div>
      `),i.querySelector("button").addEventListener("click",()=>a.system.resistSave(this));else return;e.querySelector(".message-content").append(i)}_enrichUsageEffects(e){var r;if(this.getFlag("dnd5e","messageType")!=="usage")return;const a=this.getAssociatedItem(),s=(r=this.getFlag("dnd5e","use.effects"))==null?void 0:r.map(n=>a==null?void 0:a.effects.get(n)).filter(n=>n&&(game.user.isGM||n.transfer&&this.author.id===game.user.id));if(!(s!=null&&s.length))return;const i=document.createElement("effect-application");i.classList.add("dnd5e2"),i.effects=s,e.querySelector(".message-content").appendChild(i)}static addChatMessageContextOptions(e,a){const s=r=>{var n;return r instanceof HTMLElement||(r=r[0]),(n=game.messages.get(r.dataset.messageId))==null?void 0:n.canApplyDamage},i=r=>{var n;return r instanceof HTMLElement||(r=r[0]),(n=game.messages.get(r.dataset.messageId))==null?void 0:n.canSelectTargets};return a.push({name:game.i18n.localize("DND5E.ChatContextDamage"),icon:'<i class="fas fa-user-minus"></i>',condition:s,callback:r=>{var n;r instanceof HTMLElement||(r=r[0]),(n=game.messages.get(r.dataset.messageId))==null||n.applyChatCardDamage(r,1)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextHealing"),icon:'<i class="fas fa-user-plus"></i>',condition:s,callback:r=>{var n;r instanceof HTMLElement||(r=r[0]),(n=game.messages.get(r.dataset.messageId))==null||n.applyChatCardDamage(r,-1)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextTempHP"),icon:'<i class="fas fa-user-clock"></i>',condition:s,callback:r=>{var n;r instanceof HTMLElement||(r=r[0]),(n=game.messages.get(r.dataset.messageId))==null||n.applyChatCardTemp(r)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextDoubleDamage"),icon:'<i class="fas fa-user-injured"></i>',condition:s,callback:r=>{var n;r instanceof HTMLElement||(r=r[0]),(n=game.messages.get(r.dataset.messageId))==null||n.applyChatCardDamage(r,2)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextHalfDamage"),icon:'<i class="fas fa-user-shield"></i>',condition:s,callback:r=>{var n;r instanceof HTMLElement||(r=r[0]),(n=game.messages.get(r.dataset.messageId))==null||n.applyChatCardDamage(r,.5)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextSelectHit"),icon:'<i class="fas fa-bullseye"></i>',condition:i,callback:r=>{var n;r instanceof HTMLElement||(r=r[0]),(n=game.messages.get(r.dataset.messageId))==null||n.selectTargets(r,"hit")},group:"attack"},{name:game.i18n.localize("DND5E.ChatContextSelectMiss"),icon:'<i class="fas fa-bullseye"></i>',condition:i,callback:r=>{var n;r instanceof HTMLElement||(r=r[0]),(n=game.messages.get(r.dataset.messageId))==null||n.selectTargets(r,"miss")},group:"attack"}),a}_activateActivityListeners(e){var a;(a=this.getAssociatedActivity())==null||a.activateChatListeners(this,e)}async _onTargetMouseDown(e){var n;e.stopPropagation();const a=e.currentTarget.dataset.uuid,s=fromUuidSync(a),i=((n=s==null?void 0:s.token)==null?void 0:n.object)??(s==null?void 0:s.getActiveTokens()[0]);if(!i||!s.testUserPermission(game.user,"OBSERVER"))return;const r=!e.shiftKey;if(i.controlled)i.release();else return i.control({releaseOthers:r}),canvas.animatePan(i.center)}_onTargetHoverIn(e){var r;const a=e.currentTarget.dataset.uuid,s=fromUuidSync(a),i=((r=s==null?void 0:s.token)==null?void 0:r.object)??(s==null?void 0:s.getActiveTokens()[0]);i&&i.isVisible&&(i.controlled||i._onHoverIn(e,{hoverOutOthers:!0}),this._highlighted=i)}_onTargetHoverOut(e){this._highlighted&&this._highlighted._onHoverOut(e),this._highlighted=null}applyChatCardDamage(e,a){const s=he(this.rolls,{respectProperties:!0}).map(i=>({value:i.total,type:i.options.type,properties:new Set(i.options.properties??[])}));return Promise.all(canvas.tokens.controlled.map(i=>{var r;return(r=i.actor)==null?void 0:r.applyDamage(s,{multiplier:a})}))}selectTargets(e,a){if(!(canvas!=null&&canvas.ready))return;const s=e.closest("[data-message-id]").querySelectorAll(`.evaluation li.target.${a}`),i=new Set(Array.from(s).map(r=>r.dataset.uuid));canvas.tokens.releaseAll(),i.forEach(r=>{var d;const n=fromUuidSync(r);if(!n)return;const l=n.isToken?[(d=n.token)==null?void 0:d.object]:n.getActiveTokens();for(const g of l)g!=null&&g.isVisible&&n.testUserPermission(game.user,"OWNER")&&g.control({releaseOthers:!1})})}applyChatCardTemp(e){const a=this.rolls.reduce((s,i)=>s+i.total,0);return Promise.all(canvas.tokens.controlled.map(s=>{var i;return(i=s.actor)==null?void 0:i.applyTempHP(a)}))}_onClickDiceRoll(e){e.stopPropagation(),e.currentTarget.classList.toggle("expanded")}static onRenderChatPopout(e,a){var i;a=a instanceof HTMLElement?a:a[0];const s=a.querySelector(".header-button.close");s&&(s.innerHTML='<i class="fas fa-times"></i>',s.dataset.tooltip=game.i18n.localize("Close"),s.setAttribute("aria-label",s.dataset.tooltip)),(i=a.querySelector(".message-metadata [data-context-menu]"))==null||i.remove()}static onRenderChatLog(e){game.release.generation<13&&([e]=e),game.user.isGM&&(e.dataset.gmUser=""),game.settings.get("dnd5e","autoCollapseItemCards")||requestAnimationFrame(()=>{setTimeout(()=>ui.chat.scrollBottom(),250)})}static activateListeners(){window.addEventListener("keydown",this.toggleModifiers,{passive:!0}),window.addEventListener("keyup",this.toggleModifiers,{passive:!0}),window.addEventListener("blur",()=>this.toggleModifiers({releaseAll:!0}),{passive:!0})}static toggleModifiers({releaseAll:e=!1}={}){var s,i;const a=(((i=(s=foundry.helpers)==null?void 0:s.interaction)==null?void 0:i.KeyboardManager)??KeyboardManager).MODIFIER_KEYS;document.querySelectorAll(".chat-sidebar > ol, #chat .chat-scroll > ol").forEach(r=>{for(const n of Object.values(a))game.keyboard.isModifierActive(n)&&!e?r.dataset[`modifier${n}`]="":delete r.dataset[`modifier${n}`]})}_onDelete(e,a){super._onDelete(e,a),dnd5e.registry.messages.untrack(this)}getAssociatedActivity(){var a,s;const e=fromUuidSync(this.getFlag("dnd5e","activity.uuid"),{strict:!1});return e||((s=(a=this.getAssociatedItem())==null?void 0:a.system.activities)==null?void 0:s.get(this.getFlag("dnd5e","activity.id")))}getAssociatedActor(){if(this.speaker.scene&&this.speaker.token){const e=game.scenes.get(this.speaker.scene),a=e==null?void 0:e.tokens.get(this.speaker.token);if(a)return a.actor}return game.actors.get(this.speaker.actor)}getAssociatedItem(){const e=fromUuidSync(this.getFlag("dnd5e","item.uuid"),{strict:!1});if(e)return e;const a=this.getAssociatedActor();if(!a)return;const s=this.getFlag("dnd5e","item.data")??this.getOriginatingMessage().getFlag("dnd5e","item.data");if(s)return new Item.implementation(s,{parent:a})}getAssociatedRolls(e){return dnd5e.registry.messages.get(this.id,e)}getOriginatingMessage(){return game.messages.get(this.getFlag("dnd5e","originatingMessage"))??this}_shimFlags(){var a;const e=foundry.utils.getProperty(this,"flags.dnd5e");if((e==null?void 0:e.messageType)==="usage"&&(e!=null&&e.use)){const s="The item data in the `dnd5e.use` flag on `ChatMessage` is now `dnd5e.item.type`, `dnd5e.item.id`, and `dnd5e.item.uuid`. Checking for usage can now be done using the `dnd5e.messageType` flag.";Object.defineProperty(e.use,"type",{get(){var i;return foundry.utils.logCompatibilityWarning(s,{since:"DnD5e 4.0",until:"DnD5e 5.0",once:!0}),(i=e.item)==null?void 0:i.type},configurable:!0,enumerable:!1}),Object.defineProperty(e.use,"itemId",{get(){var i;return foundry.utils.logCompatibilityWarning(s,{since:"DnD5e 4.0",until:"DnD5e 5.0",once:!0}),(i=e.item)==null?void 0:i.id},configurable:!0,enumerable:!1}),Object.defineProperty(e.use,"itemUuid",{get(){var i;return foundry.utils.logCompatibilityWarning(s,{since:"DnD5e 4.0",until:"DnD5e 5.0",once:!0}),(i=e.item)==null?void 0:i.uuid},configurable:!0,enumerable:!1})}else if((e==null?void 0:e.messageType)==="roll"&&(e!=null&&e.roll)){const s="The item data in the `dnd5e.roll` flag on `ChatMessage` is now `dnd5e.item.id` and `dnd5e.item.uuid`.";Object.defineProperty(e.roll,"itemId",{get(){var i;return foundry.utils.logCompatibilityWarning(s,{since:"DnD5e 4.0",until:"DnD5e 5.0",once:!0}),(i=e.item)==null?void 0:i.id},configurable:!0,enumerable:!1}),Object.defineProperty(e.roll,"itemUuid",{get(){var i;return foundry.utils.logCompatibilityWarning(s,{since:"DnD5e 4.0",until:"DnD5e 5.0",once:!0}),(i=e.item)==null?void 0:i.uuid},configurable:!0,enumerable:!1})}(a=e==null?void 0:e.item)!=null&&a.data&&Object.defineProperty(e,"itemData",{get(){return foundry.utils.logCompatibilityWarning("The `dnd5e.itemData` flag on `ChatMessage` is now `dnd5e.item.data`.",{since:"DnD5e 4.0",until:"DnD5e 5.0",once:!0}),this.item.data},configurable:!0,enumerable:!1})}}b(oe,"TRAY_TYPES",["damage-application","effect-application"]);const E=class E{static serializeForTransport(t){var a;if(t==null)return t;o.log("Serializing data - Original structure",["Keys:",Object.keys(t||{}),"Has rolls:",!!t.rolls,"Rolls length:",(a=t.rolls)==null?void 0:a.length]);let e={...t};e.rolls&&Array.isArray(e.rolls)&&(o.log("Roll objects before serialization",["Roll count:",e.rolls.length,"Roll types:",e.rolls.map(s=>{var i;return((i=s==null?void 0:s.constructor)==null?void 0:i.name)||typeof s})]),e.rolls=e.rolls.map(s=>{if(s instanceof Roll){let i=s.toJSON();return o.log("Serialized roll",["Original:",s.formula,"Serialized keys:",Object.keys(i)]),i}else return s}));try{JSON.stringify(e),o.log("Data serialized successfully without circular references")}catch(s){o.error("Circular reference detected in data",["Error:",s.message,"Keys with potential circular refs:",Object.keys(e||{})]),e.actor&&o.log("Actor property exists",[typeof e.actor]),e.item&&o.log("Item property exists",[typeof e.item]),e.workflow&&o.log("Workflow property exists",[typeof e.workflow]),e.message&&o.log("Message property exists",[typeof e.message]),e.flags&&o.log("Flags property exists",[typeof e.flags,Object.keys(e.flags||{})]),e.speaker&&o.log("Speaker property exists",[typeof e.speaker,Object.keys(e.speaker||{})])}return e}static deserializeFromTransport(t){var a;o.log("Deserializing data - Received structure",["Data type:",typeof t,"Is null/undefined:",t==null,"Keys:",Object.keys(t||{}),"Has rolls:",!!(t!=null&&t.rolls),"Rolls length:",(a=t==null?void 0:t.rolls)==null?void 0:a.length]);let e={...t};if(!t)return e;if(t.rolls&&t.rolls.length>0){o.log("Roll data before deserialization",["Roll count:",t.rolls.length,"Roll types:",t.rolls.map(s=>typeof s)]);try{const s=e.rolls.map(i=>{let r=i;return typeof i=="string"?r=Roll.fromJSON(i):r=Roll.fromJSON(JSON.stringify(i)),o.log("Deserialized roll",["Result formula:",r.formula,"Result total:",r.total]),r});e.rolls=[...s]}catch(s){o.error("Error deserializing rolls",["Error:",s.message,"Roll data:",t.rolls])}}return e}};b(E,"socket"),b(E,"_activeExecutions",new Map),b(E,"initialize",t=>{Hooks.once(je.READY,()=>{if(o.log("Attempting to register module..."),typeof socketlib>"u"){o.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{E.socket=socketlib.registerModule(X),t&&t(),o.log("SocketUtil | Module registered",[E.socket])}catch(e){o.log("Problem registering module",[e])}})}),b(E,"registerCall",(t,e)=>{E.socket?(E.socket.register(t,e),o.log("SocketUtil - Registered callback",[E.socket,t])):o.log("SocketUtil - Failed to register callback (socket not initialized)",[E.socket,t])}),b(E,"sendMessage",(t,e)=>{o.log("SocketUtil - sendMessage",[t]),e&&e()}),b(E,"execForGMs",async(t,...e)=>{if(!E.socket){o.log("SocketUtil - Socket not initialized. Cannot execute as GM.");return}return await E.socket.executeForAllGMs(t,...e)}),b(E,"execForAll",async(t,...e)=>{if(!E.socket){o.log("SocketUtil - Socket not initialized. Cannot execute for all clients.");return}return await E.socket.executeForEveryone(t,...e)}),b(E,"execForUser",async(t,e,...a)=>{if(!E.socket){o.log("SocketUtil - Socket not initialized. Cannot execute as user.");return}if(e===game.user.id)return o.log("SocketUtil - Preventing recursive call",[e]),null;const s=`${t}-${e}`;if(E._activeExecutions.has(s))return o.log("SocketUtil - Preventing recursive call",[s]),null;E._activeExecutions.set(s,!0);try{const i=await E.socket.executeAsUser(t,e,...a);return o.log("SocketUtil - Executed as user.",[i]),i}catch(i){return o.log("SocketUtil - Error executing as user",[i]),null}finally{E._activeExecutions.delete(s)}});let x=E;const S=class S{static resetRollGetters(t){return t._total=t._evaluateTotal(),t.resetFormula(),t}static replaceTerms(t,e){return t.terms=e.terms,t._total=t._evaluateTotal(),t.resetFormula(),t}static replaceDie(t,e){var i;if(!e||!t)return t;if(o.log("replaceDie",[e,t]),!e.terms)return o.error("replaceDie - replacer.terms is undefined",[e]),t;const a=e.terms.filter(r=>r instanceof Die||r.class==="Die")||[],s=((i=t==null?void 0:t.terms)==null?void 0:i.filter(r=>!(r instanceof Die||r.class==="Die")))||[];return t.terms=[...a,...s],t._total=t._evaluateTotal(),t.resetFormula(),t}static getDialogSetting(t,e){var i;const a=v(),s=_.get(a.skipRollConfig.tag);if(o.log("getDialogSetting",["skip mode: "+s,B.keysPressed,e]),((i=e.flags)==null?void 0:i["ddb-game-log"])!==void 0)return!1;switch(s){case 1:return B.keysPressed.indexOf("Shift")!=-1;default:return t}}};b(S,"streamlineDDBRoll",async(t,e,a,s,i)=>{o.log("streamlineDDBRoll - A",[s,i]);let r=s,n=i;t&&!game.user.isGM&&(r=x.deserializeFromTransport(s)),n.author=game.user;let l=null,d=game.user,g=a?R.findItemFromActor(n.speaker.actor,e,a):null,u=game.actors.get(n.actor._id);u&&(n.actor=u),o.log("streamlineDDBRoll - B",[n,r,game.messages.get(r.id||r._id)]);let m={},p=r.rolls[0];m.message={flavor:r.flavor,speaker:r.speaker,whisper:r.whisper,user:d,blind:r.blind||R.isPrivateRoll(n.rollMode),rollMode:n.rollMode},m.dialog={configure:!1},m.roll={formula:p.formula,consume:{resources:!1,spellSlot:!1},user:d,rolls:[r.rolls[0]||msgConfig.rolls[0]],flags:{...r.flags,[z]:{processed:!0},dnd5e:{...r.flags.dnd5e},rsr5e:{processed:!0,quickRoll:!1}}},r.flags=m.roll.flags;try{switch(!0){case t===C.toHit.cls:l=G.getActivityFromItem(g,t)??null,await S.triggerAttack(l,r,n,m);break;case t===C.damage.cls:l=G.getActivityFromItem(g,t)??null,await S.triggerDamage(l,r,n,m);break;case(t===C.save.cls||t===C.check.cls):l=null,await S.triggerAbilityTest(t,r,n,m);break;case t===C.heal.cls:l=G.getActivityFromItem(g,t)??null,await S.triggerHeal(l,r,n,m);break;case t===C.custom.cls:l=null,await S.triggerCustomRoll(m,r,a,n);break;default:o.log("streamlineDDBRoll",[t])}}catch(h){return o.error("Error intercepting DDB roll",[h],{ui:!1,console:!0,permanent:!1}),ui.notifications.warn("Could not intercept the DDB roll"),!1}return!0}),b(S,"triggerAttack",async(t,e,a,s)=>{var u;const i=v();let r,n,l,d;const g=R.isModuleOn("midi-qol");if(!t)throw new Error("No associated activity found.");if(s.roll.flags.rsr5e={processed:!0},s.roll.flags.dnd5e.roll={type:$.attack},g){if(l=new MidiQOL.Workflow(t.actor,t,e.speaker,s.message.user.targets,{workflowOptions:{attackRollDSN:!1,damageRollDSN:!1}}),n=await t.rollAttack({...s.roll,midiOptions:{workflowOptions:{attackRollDSN:!1,damageRollDSN:!1}}},s.dialog,{create:!1,data:{...s.message}}),n.length<1)return;if(o.log("triggerAttack - rolls",[n[0],e.rolls[0]]),_.get(i.foundryRollModifiers.tag)?n[0]=S.replaceDie(n[0],e.rolls[0]):n[0]=S.replaceTerms(n[0],e.rolls[0]),o.log("triggerAttack - activityRolls",[n,r,l]),r=await t.use({...s.roll,midiOptions:{workflowOptions:{attackRollDSN:!1}}},s.dialog,{create:!0,data:{rolls:[n[0]],user:s.message.user,speaker:s.message.speaker,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`,flags:{rsr5e:s.roll.flags.rsr5e,[z]:{processed:!0,data:{msg:e,msgData:a},rollMode:a.rollMode,cls:e.flags["ddb-game-log"].cls,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`}}}}),r&&o.log("Usage of attack activity was not completed",[t]),r.message.rolls=[n[0]],l.itemCardUuid=r.message.uuid,l.suspended&&l.unSuspend.bind(l)({attackRoll:n[0]}),await l.setAttackRoll(n[0]),["formulaadv","adv"].includes(MidiQOL.configSettings.rollAlternate)&&addAdvAttribution(n[0],l.attackAdvAttribution),await l.setAttackRoll(n[0]),(u=game.modules.get("midi-qol"))==null||u.api,o.log("> MidiQOL API",[MidiQOL]),MidiQOL.configSettings.autoCheckHit!=="none"){await l.displayAttackRoll({GMOnlyAttackRoll:!0}),await l.checkHits(),await l.displayAttackRoll();const m=s.message.rollMode;if(l.whisperAttackCard=MidiQOL.configSettings.autoCheckHit==="whisper"||m===CONST.DICE_ROLL_MODES.BLIND||m===CONST.DICE_ROLL_MODES.PRIVATE,l.aborted)return l.WorkflowState_Abort;await l.displayHits(l.whisperAttackCard)}else await l.displayAttackRoll();o.log("triggerAttack - after use",[r,t.utils])}else{if(d=t.metadata.usage.chatCard,t.metadata.usage.chatCard=`modules/${z}/templates/ddb-attack-info.hbs`,n=await t.rollAttack(s.roll,s.dialog,{create:!1,data:{...s.message}}),n.length<1)return;o.log("triggerAttack - before",[n,e.rolls]),_.get(i.foundryRollModifiers.tag)?n[0]=S.replaceDie(n[0],e.rolls[0]):n[0]=S.replaceTerms(n[0],e.rolls[0]),o.log("triggerAttack - after",[n,e.rolls]),r=await G.ddbglUse(t,s.roll,s.dialog,{create:!1,data:{rolls:[n[0]],user:s.message.user,speaker:s.message.speaker,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`,flags:{rsr5e:s.roll.flags.rsr5e,[z]:{processed:!0,data:{msg:e,msgData:a},rollMode:a.rollMode,cls:e.flags["ddb-game-log"].cls,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`}}}})}if(r.message.flags=r.message.flags??{},o.log("triggerAttack - before card",[n,r.message]),!g){const m=await oe.create(r.message,{rollMode:a.rollMode});o.log("USAGE RESULTS",[m,r,s.message,t.metadata])}g||(t.metadata.usage.chatCard=d)}),b(S,"triggerDamage",async(t,e,a,s)=>{const i=v(),r=R.isModuleOn("midi-qol");let n,l,d;if(!t)throw new Error("No associated activity found.");if(d=r?t.workflow:null,r)if(!t.attack)o.warn("Damage only roll not implemented");else{if(!d){o.error("Attack workflow not found for damage roll",[t]);return}if(l=await t.rollDamage({...s.roll,midiOptions:{workflowOptions:{damageRollDSN:!1}}},s.dialog,{create:!1,data:{...s.message}}),l.length<1)return;_.get(i.foundryRollModifiers.tag)?l[0]=S.replaceDie(l[0],e.rolls[0]):l[0]=S.replaceTerms(l[0],e.rolls[0]),await d.setDamageRoll(l[0]),await d.WorkflowState_DamageRollComplete(),await d.setDamageRoll(l[0])}else{let g=[];t.attack||(n=await G.ddbglUse(t,s.roll,s.dialog,{create:!1}),await oe.create(n.message,{rollMode:a.rollMode})),o.log("triggerDamage A",[s.roll,s.dialog,t,n]);try{g=await t.rollDamage({flags:s.roll.flags,consume:s.roll.consume,formula:s.roll.formula,user:s.roll.user},s.dialog,{create:!1})}catch(u){o.error("triggerDamage B",[u])}if(o.log("triggerDamage - activityRolls",[g]),g.length<1)return;S.replaceTerms(g[0],e.rolls[0]),n||(n={message:s.message}),n.message.rolls=g,n.message.flags=n.message.flags??{},n.message.flags.rsr5e={processed:!0,quickRoll:!1},s.roll.flags.dnd5e.roll={type:$.damage},s.message.flags=s.roll.flags,s.message.flags={...s.message,dnd5e:s.roll.flags.dnd5e,rsr5e:s.roll.flags.rsr5e},await g[0].toMessage(s.message,{rollMode:a.rollMode}),t.attack||s.message.user.targets.forEach(u=>{u.control({releaseOthers:!1})}),setTimeout(()=>{R.removeTemplateForItem(t.item)},3e3)}}),b(S,"triggerAbilityTest",async(t,e,a,s)=>{const i=R.parseDDBGLAbility(e.flags["ddb-game-log"].flavor);let r;s.roll.flags.dnd5e.roll={type:t===C.check.cls?"ability":"save"},i&&(s.roll.flags.dnd5e.roll={type:t===C.check.cls?$.abilityCheck:$.abilitySave,ability:i.abbrev}),s.message.flags={dnd5e:s.roll.flags.dnd5e,rsr5e:s.roll.flags.rsr5e},t===C.save.cls?r=await a.actor.rollSavingThrow({ability:i==null?void 0:i.abbrev},s.dialog,{create:!1}):t===C.check.cls&&(r=await a.actor.rollAbilityCheck({ability:i==null?void 0:i.abbrev},s.dialog,{create:!1}),o.log("triggerAbilityTest",[r,s.message])),!(r.length<1)&&(S.replaceTerms(r[0],e.rolls[0]),await r[0].toMessage(s.message,{rollMode:a.rollMode}))}),b(S,"triggerHeal",async(t,e,a,s)=>{let i;if(!t)throw new Error("No associated activity found.");i=await G.ddbglUse(t,s.roll,s.dialog,{create:!1}),o.log("ACTIVITY",[i]),await oe.create(i.message,{rollMode:a.rollMode});let r=await t.rollDamage(s.roll,s.dialog,{create:!1,data:{flags:s.message.flags}});r.length<1||(S.replaceTerms(r[0],e.rolls[0]),i||(i={message:s.message}),i.message.rolls=r,i.message.flags=i.message.flags??{},i.message.flags.rsr5e={processed:!0,quickRoll:!1},s.roll.flags.dnd5e.roll={type:$.healing},s.message.flags={...s.message,dnd5e:s.roll.flags.dnd5e,rsr5e:s.roll.flags.rsr5e},await r[0].toMessage(s.message,{rollMode:a.rollMode}))}),b(S,"triggerCustomRoll",async(t,e,a,s)=>{t.message={...t.message,dnd5e:{...t.roll.flags.dnd5e},rsr5e:t.roll.flags.rsr5e},await e.rolls[0].toMessage(t.message,{...s})});let se=S;const L=class L{static init(){L.setupKeyListeners(),L.registerHooks()}static addCSSLocalization(){const t="CRLNGN.dnd5e.chatCard.buttons";o.log("Test",[game.i18n.translations,game.i18n.translations.CRLNGN]),o.log(`Full path being requested: ${t}.attack`),game.i18n.has(`${t}.attack`)?o.warn("Key exists"):o.warn(`Missing translation key: ${t}.attack`),R.addCSSVars("--crlngn-i18n-attack",game.i18n.localize(`${t}.attack`)),R.addCSSVars("--crlngn-i18n-damage",game.i18n.localize(`${t}.damage`)),R.addCSSVars("--crlngn-i18n-summons",game.i18n.localize(`${t}.summons`)),R.addCSSVars("--crlngn-i18n-healing",game.i18n.localize(`${t}.healing`)),R.addCSSVars("--crlngn-i18n-template",game.i18n.localize(`${t}.template`)),R.addCSSVars("--crlngn-i18n-consume",game.i18n.localize(`${t}.consume`)),R.addCSSVars("--crlngn-i18n-refund",game.i18n.localize(`${t}.refund`)),R.addCSSVars("--crlngn-i18n-macro",game.i18n.localize(`${t}.macro`)),R.addCSSVars("--crlngn-i18n-save-dc",game.i18n.localize(`${t}.savedc`))}static registerHooks(){x.initialize(()=>{o.log("SocketUtil - initialized with socket",[x.socket,game.system.utils.areKeysPressed])}),Hooks.once(H.INIT,()=>{L.isMidiOn=R.isModuleOn("midi-qol"),o.log("Initiating module",[],!0),document.querySelector("body").classList.add("crlngn-chat"),_.registerSettings(),L.registerActivityHooks(),L.registerRollHooks(),L.registerChatHooks(),L.registerTemplateHooks()}),Hooks.once(H.READY,()=>{if(!game.socket){ui.notifications.error("⚠️ DDB Bridge: Foundry needs to be restarted to enable socket functionality.",{permanent:!0}),o.error("Foundry restart required to enable sockets.");return}_.resetGamelogSettings(),L.registerSocketFunction(),L.addCSSLocalization(),ce.init()}),Hooks.on(H.CLOSE_SETTINGS_CONFIG,()=>{_.resetGamelogSettings()})}static registerSocketFunction(){x.registerCall("DDBRoll",se.streamlineDDBRoll)}static registerActivityHooks(){Hooks.on(k.PRE_USE_ACTIVITY,pt),Hooks.on(k.POST_USE_ACTIVITY,ft)}static registerRollHooks(){Hooks.on(k.ROLL_ATTACK_V2,kt),Hooks.on(k.ROLL_DAMAGE_V2,St),Hooks.on(k.PRE_ROLL_V2,Tt),Hooks.on(k.PRE_ROLL_ATTACK_V2,Rt),Hooks.on(k.PRE_ROLL_DAMAGE_V2,Et),Hooks.on(k.PRE_ROLL_SAVING_THROW,Ct)}static registerChatHooks(){Hooks.on(k.RENDER_CHAT_MESSAGE,bt),Hooks.on(H.PRE_CREATE_CHAT_MESSAGE,ht),Hooks.on(H.CREATE_CHAT_MESSAGE,yt)}static registerTemplateHooks(){Hooks.on(H.REFRESH_MEASURED_TEMPLATE,Dt)}static setupKeyListeners(){window.addEventListener("keydown",t=>{const e=t.key;L.keysPressed.indexOf(e)<0&&L.keysPressed.push(e)}),window.addEventListener("keyup",t=>{const e=t.key,a=L.keysPressed.indexOf(e);a>=0&&L.keysPressed.splice(a,1)})}};b(L,"keysPressed",[]),b(L,"isMidiOn",!1),b(L,"areKeysPressed");let B=L;const pt=async(c,t,e,a)=>(o.log(k.PRE_USE_ACTIVITY,[t,e,a,B.keysPressed]),!0),ft=async(c,t,e)=>(o.log(k.POST_USE_ACTIVITY,[c,t,e]),!0),ht=(c,t,e,a)=>{var m,p,h,f,y;const s=v();let i=!1,r,n,l,d,g=!1,u=c;if(n=R.isModuleOn("ddb-game-log")&&((m=c.getFlag("ddb-game-log","cls"))==null?void 0:m.toLowerCase())||"",g=c.getFlag(z,"processed")||!1,o.log(H.PRE_CREATE_CHAT_MESSAGE,[n,u,t,e]),n&&!g)if(r=t.actor||game.actors.get(t.speaker.actor)||null,l=((h=(p=t.flags)==null?void 0:p["ddb-game-log"])==null?void 0:h.itemId)||"",u.rolls=u.rolls&&u.rolls.length>0?[u.rolls[0]]:[t.rolls[0]],o.log("onPreCreateChatMessage",[u.flags,t.flags]),r){i=!0,u.flags={...u.flags,...t.flags},u.flags[z]&&(u.flags[z].processed=!0,g=!0);const T=document.createElement("div");T.innerHTML=t.flavor;let D=(f=T==null?void 0:T.querySelector("span:first-child"))==null?void 0:f.innerHTML.replace(":","");if(d=D?R.findItemFromActor(t.speaker.actor,l,D):null,!d&&(n===C.toHit.cls||n===C.damage.cls||n===C.heal.cls))return o.error("Could not find an item for the roll",[n,D,r.items]),!0;{const w=R.getUserFromActor((y=u.speaker)==null?void 0:y.actor),V=_.get(s.ddbRollOwnership.tag)==2;if(w&&V){o.log("Main - Before serialization",[u]);const K=x.serializeForTransport(u);o.log("Main - After serialization",[K]),o.log("CHECK ROLL",[V,w,K,t]),x.execForUser("DDBRoll",w.id,n,l,D,K,t)}else o.log("Main - No serialization",[u]),se.streamlineDDBRoll(n,l,D,u,t)}}else return o.warn("Could not find the actor from DDB Gamelog roll"),!0;return!i||g},yt=(c,t,e)=>{o.log(H.CREATE_CHAT_MESSAGE,[c,t,e])},bt=(c,t)=>{o.log(k.RENDER_CHAT_MESSAGE,[c,t]),ce.enrichCard(c,t)},Tt=(c,t,e)=>{o.log(k.PRE_ROLL_V2,[c,t,e]),t.configure=se.getDialogSetting(t.configure,c)},Ct=(c,t,e)=>{o.log(k.PRE_ROLL_SAVING_THROW,[c,t,e])},Rt=(c,t,e)=>(o.log(k.PRE_ROLL_ATTACK_V2,[e,t,c]),!0),Et=(c,t,e)=>(o.log(k.PRE_ROLL_DAMAGE_V2,[c,t,e,B.keysPressed]),!0),St=(c,t,e)=>{o.log(k.ROLL_DAMAGE_V2,[game])},kt=async(c,t,e,a)=>{o.log(k.ROLL_ATTACK_V2,[c,t,e,a]),R.isModuleOn("midi-qol")&&o.log(k.ROLL_ATTACK_V2,[MidiQOL.getWorkflow])},Dt=(c,t)=>{var s;if(!c.isOwner)return;const e=_.get("template-auto-target");let a=3;switch(e){case 1:a=3;break;case 2:a=0;break;default:return}(s=canvas.tokens.placeables[0])==null||s.setTarget(!1,{releaseOthers:!0});for(let i of canvas.tokens.placeables)i.document.disposition<=a&&c.shape.contains(i.center.x-c.x,i.center.y-c.y)&&i.setTarget(!i.isTargeted,{releaseOthers:!1})};B.init();
//# sourceMappingURL=module.js.map
