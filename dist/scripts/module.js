var Ge=Object.defineProperty;var $e=Object.getPrototypeOf;var ze=Reflect.get;var Le=o=>{throw TypeError(o)};var xe=(o,t,e)=>t in o?Ge(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var b=(o,t,e)=>xe(o,typeof t!="symbol"?t+"":t,e),pe=(o,t,e)=>t.has(o)||Le("Cannot "+e);var K=(o,t,e)=>(pe(o,t,"read from private field"),e?e.call(o):t.get(o)),j=(o,t,e)=>t.has(o)?Le("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(o):t.set(o,e),Y=(o,t,e,s)=>(pe(o,t,"write to private field"),s?s.call(o,e):t.set(o,e),e),re=(o,t,e)=>(pe(o,t,"access private method"),e);var Oe=(o,t,e)=>ze($e(o),e,t);const E={toHit:{prop:"toHit",cls:"to hit",actionType:"attack",rollType:"attack"},damage:{prop:"damage",cls:"damage",actionType:"damage",rollType:"damage"},heal:{prop:"heal",cls:"heal",actionType:"heal",rollType:"heal"},save:{prop:"save",cls:"save",actionType:"save",rollType:"ability"},check:{prop:"check",cls:"check",actionType:"check",rollType:"ability"},custom:{prop:"custom",cls:"roll",actionType:"roll",rollType:"custom"},cast:{prop:"cast",cls:"cast",actionType:"cast",rollType:"cast"}},X="crlngn-ddb-bridge",G="crlngn-ddb-bridge",J=["%cCarolingian DDB Bridge","color: #003377; font-weight: bold;","|"],H={abilityCheck:"ability",abilitySave:"save",attack:"attack",check:"check",concentration:"concentration",damage:"damage",deathSave:"death",formula:"formula",healing:"heal",custom:"roll",skillCheck:"skill",toolCheck:"tool"},Ve=[{abbrev:"str",name:"strength"},{abbrev:"dex",name:"dexterity"},{abbrev:"con",name:"constitution"},{abbrev:"int",name:"intelligence"},{abbrev:"wis",name:"wisdom"},{abbrev:"cha",name:"charisma"}],P={CHAT_MESSAGE:"chatMessage",INIT:"init",READY:"ready",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage",CREATE_CHAT_MESSAGE:"createChatMessage",RENDER_CHAT_MESSAGE:"renderChatMessage",CREATE_MEASURED_TEMPLATE:"createMeasuredTemplate",REFRESH_MEASURED_TEMPLATE:"refreshMeasuredTemplate",CLOSE_SETTINGS_CONFIG:"closeSettingsConfig"},D={PRE_ROLL_V2:"dnd5e.preRollV2",PRE_ROLL_ABILITY_TEST:"dnd5e.preRollAbilityTest",PRE_ROLL_ABILITY_SAVE:"dnd5e.preRollAbilitySave",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrow",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_CLASS_HIT_POINTS:"dnd5e.preRollClassHitPoints",PRE_ROLL_CONCENTRATION:"dnd5e.preRollConcentration",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",PRE_ROLL_DEATH_SAVE:"dnd5e.preRollDeathSave",PRE_ROLL_FORMULA_V2:"dnd5e.preRollFormulaV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_NPC_HIT_POINTS:"dnd5e.preRollNPCHitPoints",PRE_ROLL_RECHARGE_V2:"dnd5e.preRollRechargeV2",PRE_ROLL_SKILL:"dnd5e.preRollSkill",PRE_ROLL_TOOL_CHECK:"dnd5e.preRollToolCheck",PRE_USE_ITEM:"dnd5e.preUseItem",ROLL_ABILITY_TEST:"dnd5e.rollAbilityTest",ROLL_ABILITY_SAVE:"dnd5e.rollAbilitySave",ROLL_ATTACK_V2:"dnd5e.rollAttackV2",ROLL_CLASS_HIT_POINTS:"dnd5e.rollClassHitPoints",ROLL_CONCENTRATION:"dnd5e.rollConcentration",ROLL_DEATH_SAVE:"dnd5e.rollDeathSave",ROLL_DAMAGE_V2:"dnd5e.rollDamageV2",ROLL_FORMULA_V2:"dnd5e.rollFormulaV2",ROLL_HIT_DIE_V2:"dnd5e.rollHitDieV2",ROLL_INITIATIVE:"dnd5e.rollInitiative",ROLL_NPC_HIT_POINTS:"dnd5e.rollNPCHitPoints",ROLL_RECHARGE_V2:"dnd5e.rollRechargeV2",ROLL_SKILL:"dnd5e.rollSkill",ROLL_TOOL_CHECK:"dnd5e.rollToolCheck",DISPLAY_CARD:"dnd5e.preDisplayCardV2",PRE_DISPLAY_CARD_V2:"dnd5e.preDisplayCardV2",RENDER_CHAT_MESSAGE:"dnd5e.renderChatMessage",PRE_LONG_REST:"dnd5e.preLongRest",PRE_REST_COMPLETED:"dnd5e.preRestCmpleted",PRE_SHORT_REST:"dnd5e.preShortRest",REST_COMPLETED:"dnd5e.restCmpleted",ACTIVITY_CONSUMPTION:"dnd5e.activityConsumption",POST_ACTIVITY_CONSUMPTION:"dnd5e.postActivityConsumption",POST_CREATE_USAGE_MESSAGE:"dnd5e.postCreateUsageMessage",POST_USE_ACTIVITY:"dnd5e.postUseActivity",PRE_ACTIVITY_CONSUMPTION:"dnd5e.preActivityConsumption",PRE_CREATE_USAGE_MESSAGE:"dnd5e.preCreateUsageMessage",PRE_USE_ACTIVITY:"dnd5e.preUseActivity"},qe={READY:"socketlib.ready"},N={select:"select",checkbox:"checkbox"},I={client:"client",world:"world"};function M(){return{enableChatStyles:{tag:"enable-chat-styles",label:game.i18n.localize("CRLNGN.settings.enableChatStyles.label"),hint:game.i18n.localize("CRLNGN.settings.enableChatStyles.hint"),propType:Boolean,inputType:N.checkbox,default:!0,scope:I.client,config:!0,requiresReload:!0},ddbRollOwnership:{tag:"ddb-roll-ownership",label:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.label"),hint:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.choices.gm.label"),2:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.choices.player.label")},inputType:N.select,default:2,scope:I.world,config:!0},foundryRollModifiers:{tag:"foundry-roll-modifiers",label:game.i18n.localize("CRLNGN.settings.foundryRollModifiers.label"),hint:game.i18n.localize("CRLNGN.settings.foundryRollModifiers.hint"),propType:Boolean,inputType:N.checkbox,default:!0,scope:I.world,config:!0},forceDDBGL:{tag:"force-ddbgl-settings",label:game.i18n.localize("CRLNGN.settings.forceDDBGL.label"),hint:game.i18n.localize("CRLNGN.settings.forceDDBGL.hint"),propType:Boolean,inputType:N.checkbox,default:!0,scope:I.world,config:!0},removeTemplate:{tag:"remove-template",label:game.i18n.localize("CRLNGN.settings.removeTemplate.label"),hint:game.i18n.localize("CRLNGN.settings.removeTemplate.hint"),propType:Boolean,inputType:N.checkbox,default:!0,scope:I.world,config:!0},templateAutoTarget:{tag:"template-auto-target",label:game.i18n.localize("CRLNGN.settings.templateAutoTarget.label"),hint:game.i18n.localize("CRLNGN.settings.templateAutoTarget.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.all.label"),2:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.notFriendly.label"),3:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.none.label")},inputType:N.checkbox,default:!0,scope:I.world,config:!0},skipRollConfig:{tag:"skip-roll-config",label:game.i18n.localize("CRLNGN.settings.skipRollConfig.label"),hint:game.i18n.localize("CRLNGN.settings.skipRollConfig.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.skipRollConfig.choices.all.label"),2:game.i18n.localize("CRLNGN.settings.skipRollConfig.choices.ddbgl.label")},inputType:N.select,default:1,scope:I.world,config:!0},debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN.settings.debugMode.hint"),propType:Boolean,inputType:N.checkbox,default:!0,scope:I.client,config:!0}}}const de=class de{static log(t="",e=[],s=!1){try{const a=de.debugOn;if(!(s||a))return;console.log(...J,t,...e)}catch{console.log(...J,t,...e)}}static warn(t="",e=[]){console.warn(...J,t,...e)}static error(t="",e=[],s={ui:!1,console:!0,permanent:!1}){var a;console.log(...J,t,e,s),s.ui&&((a=ui.notifications)==null||a.error(t,{permanent:s.permanent})),s.console&&console.error(...J,t,...e)}};b(de,"debugOn",!1);let u=de;class C{static getTargets(t){let e=game.users.find(a=>a.isGM===!0),s=t.targets||e.targets;return new Set([...s])}static getActorFromItem(t){const e=t.split(".")[1];return game.actors.get(e)}static isModuleOn(t){var s;const e=(s=game.modules)==null?void 0:s.get(t);return!!(e!=null&&e.active)}static parseDDBGLAbility(t){let e=null;const s=`${t}`;return Ve.forEach(a=>{s.toLowerCase().includes(a.name)&&(e=a)}),e}static isPrivateRoll(t){return t===CONST.DICE_ROLL_MODES.BLIND||t===CONST.DICE_ROLL_MODES.PRIVATE}static removeTemplateForItem(t){u.log("removeTemplateForItem - A",[t]);const e=_.get("remove-template");if(u.log("removeTemplateForItem - B",[e]),!e)return;const s=canvas.templates.objects.children.filter(a=>a.document.flags.dnd5e.item===(t==null?void 0:t.uuid));canvas.scene.deleteEmbeddedDocuments("MeasuredTemplate",s.map(a=>a.id))}static getUserFromActor(t){let e;if(!t)return null;const s=t?game.actors.get(t):null;return e=game.users.players.find(i=>i.active===!0&&i.character.id===t),e||game.users.players.forEach(i=>{i.active&&s.testUserPermission(i,foundry.CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,{exact:!0})&&(e=i)}),u.log("getUserFromActor",[t,e]),e}static html(t,e){return t.querySelector(e)}}b(C,"getClientTargets",()=>{if(!game.user)return[];const t=Array.from(game.user.targets);return u.log("Selected Targets",[game.user.id,t,t.filter(e=>e.actor)]),t}),b(C,"getTargetDescriptors",()=>{var e,s;const t=new Map;for(const a of game.user.targets){const{name:i}=a,{img:r,system:n,uuid:l,statuses:c}=a.actor??{};if(l){const g=c.has("coverTotal")?null:(s=(e=n.attributes)==null?void 0:e.ac)==null?void 0:s.value;t.set(l,{name:i,img:r,uuid:l,ac:g??null})}}return Array.from(t.values())}),b(C,"findItemFromActor",(t,e,s)=>{const a=game.actors.get(t);if(u.log("findItemFromActor",[e,s]),!a)return null;let i=e?a.items.find(r=>r.id===e):null;return i||(i=s?a.items.find(r=>r.name.toLowerCase()===s.toLowerCase()):null,i||(i=a.items.find(r=>r.name.toLowerCase()===(s+" (Legacy)").toLowerCase()))),i}),b(C,"addCSSVars",(t,e)=>{let s=document.querySelector("#crlngn-chat-vars");if(!s){const m=document.querySelector("body");s=document.createElement("style"),s.id="crlngn-chat-vars",s.textContent=`body.crlngn-chat {
}
`,m.prepend(s)}let a=s.textContent,i=a.indexOf("body.crlngn-chat {"),r=a.indexOf("}",i);i===-1&&(a=`body.crlngn-chat {
}
`,i=0,r=a.indexOf("}"));const l=a.substring(i+18,r).split(";").map(m=>m.trim()).filter(m=>m!==""),c={};l.forEach(m=>{const p=m.split(":");if(p.length>=2){const h=p[0].trim(),f=p.slice(1).join(":").trim();h&&(c[h]=f)}}),t.includes("i18n")&&typeof e=="string"&&!e.startsWith('"')&&!e.startsWith("'")&&!e.match(/^url\(|^rgba?\(|^hsla?\(/)&&(e=`"${e}"`),c[t]=e;const g=Object.entries(c).map(([m,p])=>`  ${m}: ${p};`).join(`
`),d=a.substring(0,i)+`body.crlngn-chat {
`+g+`
}`+a.substring(r+1);s.textContent=d});const L=class L{static registerSettings(){const t=M();document.querySelector("body").classList.add(G),Object.entries(t).forEach(async s=>{const a=s[1];u.log("Registering... ",[s]);const i={name:a.label,hint:a.hint,default:a.default,type:a.propType,scope:a.scope,config:a.config,requiresReload:a.requiresReload||!1,onChange:r=>L.apply(a.tag,r)};a.choices&&(i.choices=a.choices),await game.settings.register(X,a.tag,i),L.get(a.tag)===void 0&&L.set(a.tag,a.default),u.log("registerSettings",[a.tag,L.get(a.tag)])}),L.get(t.enableChatStyles.tag)||document.querySelector("body").classList.remove("crlngn-chat"),L.applyDebugSettings()}static get(t,e=X){if(!t)return null;let s=!1;if(e===X)s=game.settings.get(e,t);else{let i=game.settings.storage.get("client")[`${e}.${t}`];i===void 0&&(i=game.settings.storage.get("world").getSetting(`${e}.${t}`)),s=i==null?void 0:i.value,u.log("GET Setting",[i,s])}return s}static set(t,e,s=X){if(!t)return!1;let a=game.settings.storage.get("client")[`${s}.${t}`];a||(a=game.settings.storage.get("world").getSetting(`${s}.${t}`));try{a&&a.update({value:e}),u.log("Able to change setting",[t,a])}catch{u.log("Unable to change setting",[t,a])}return!0}static apply(t,e){const s=M();switch(t){case s.forceDDBGL.tag:L.resetGamelogSettings();break;case s.debugMode.tag:L.applyDebugSettings();break}}static resetGamelogSettings(){const t=M();if(!C.isModuleOn("ddb-game-log"))return;const s=L.get("enable_chatcards","ddb-game-log"),a=L.get(t.forceDDBGL.tag);u.log("resetGamelogSettings",[s,a]),!s&&a&&L.set("enable_chatcards",!0,"ddb-game-log")}static applyDebugSettings(t){const e=M();u.debugOn=t||L.get(e.debugMode.tag)}};b(L,"currSettings");let _=L;const Z=class Z{static init(){const t=M();Z.chatMsgSettings=_.get(t.enableChatStyles.tag)}static enrichCard(t,e){var a,i,r,n,l,c,g,d;e.classList.remove("ddb-game-log-open-card");const s=Z.chatMsgSettings;if(s){const m=((r=(i=(a=t.flags)==null?void 0:a.dnd5e)==null?void 0:i.activity)==null?void 0:r.type)||((c=(l=(n=t.flags)==null?void 0:n.dnd5e)==null?void 0:l.roll)==null?void 0:c.type)||"custom";let p=e.get?e.get(0):e;p.classList.add("crlngn"),p.classList.add(m),u.log("enrichCard",[s.borderColor,(g=t.author)==null?void 0:g.id]),(d=s.flags)!=null&&d["ddb-game-log"]&&e.classList.add("ddbgl")}}static formatFlavorText(t,e,s){var n,l,c,g;const a=game.actors.get(((n=e.speaker)==null?void 0:n.actor)||"")||null,i=(a==null?void 0:a.items.get(((g=(c=(l=e.flags)==null?void 0:l.dnd5e)==null?void 0:c.item)==null?void 0:g.id)||""))||null;let r=t||"Message";return s===H.attack?(u.log("renderChatMessage",[a,i]),i&&(r='<span class="item-name">'+(i==null?void 0:i.name),r=r+':</span> <span class="tohit">To Hit</span>')):s===H.damage?(u.log("renderChatMessage",[a,i]),i&&(r='<span class="item-name">'+(i==null?void 0:i.name),r=r+':</span> <span class="damage">Damage</span>')):s===H.healing?(u.log("renderChatMessage",[a,i]),i&&(r='<span class="item-name">'+((i==null?void 0:i.name)??"Action"),r=r+':</span> <span class="heal">Heal</span>')):t.includes("Skill Check")?(r='<span class="item-name">'+t,r=r.replace("Skill Check",':</span> <span class="check">Check</span>')):t.includes("Ability Check")?(r='<span class="item-name">'+t,r=r.replace("Ability Check",':</span> <span class="check">Check</span>')):t.includes("Saving Throw")?(r='<span class="item-name">'+t,r=r.replace("Saving Throw",':</span> <span class="save">Save</span>')):(s==="tool"||s==="check")&&t.includes("Check")?(r='<span class="item-name">'+t,r=r.replace("Check",':</span> <span class="check">Check</span>')):i?r=`<span class="item-name">${i.type}</span>`:r||(r='<span class="item-name">Info</span>'),r}};b(Z,"chatMsgSettings");let oe=Z;class F{static getActivityFromItem(t,e){var l;let s=null;if(!t)return s;const a=(l=t.system)==null?void 0:l.activities,i=t.hasAttack,r=t.hasSave;u.log("getActivityFromItem",[a,typeof a,Array.isArray(a)]);const n=c=>{const g=a.find(d=>d.type==c);return u.log("activityByType",[t,c,a.size,g]),g};switch(e){case E.toHit.cls:s=n(E.toHit.actionType);break;case E.damage.cls:i?s=n(E.toHit.actionType):r?s=n(E.save.actionType):s=n(E.damage.actionType);break;case E.check.cls:s=n(E.check.actionType);break;case E.save.cls:s=n(E.save.actionType);break;case E.heal.cls:s=n(E.heal.actionType);break;case E.cast.cls:s=n(E.cast.actionType);break}return s??Array.from(a.keys())[0]??null}static async ddbglUse(t,e={},s={},a={},i=!1){var m,p,h,f,y,T;if(!t){ui.notifications.error("No activity found",{localize:!1});return}if(!t.item.isEmbedded||t.item.pack)return;if(!t.item.isOwner){ui.notifications.error("DND5E.DocumentUseWarn",{localize:!0});return}if(!t.canUse){ui.notifications.error("DND5E.ACTIVITY.Warning.UsageNotAllowed",{localize:!0});return}let r=t.item.clone({},{keepId:!0});const n=t._prepareUsageConfig(e);(m=n.create)!=null&&m.measuredTemplate&&((p=ui.notifications)==null||p.info("Click the map to place the template and see the roll. Right click to cancel",{localize:!1}));const l=foundry.utils.mergeObject({configure:!0,applicationClass:t.metadata.usage.dialog},s),c=foundry.utils.mergeObject({create:!0,data:{flags:{dnd5e:{...t.messageFlags,messageType:"usage",use:{effects:(h=t.applicableEffects)==null?void 0:h.map(k=>k.id)}},rsr5e:{processed:!0,quickRoll:!1}}},hasConsumption:n.hasConsumption},a);if(Hooks.call("dnd5e.preUseActivity",t,n,l,c)===!1)return;await t._prepareUsageScaling(n,c,r),t=r.system.activities.get(t.id);const g=await t.consume(n,c);if(g===!1)return;const d={effects:[],templates:[],updates:g};if((f=n.concentration)!=null&&f.begin){const k=await r.actor.beginConcentrating(t,{"flags.dnd5e.scaling":n.scaling});if(k&&(d.effects??(d.effects=[]),d.effects.push(k),foundry.utils.setProperty(c.data,"flags.dnd5e.use.concentrationId",k.id)),(y=n.concentration)!=null&&y.end){const w=await r.actor.endConcentration(n.concentration.end);d.effects.push(...w)}}return c.data.rolls=(c.data.rolls??[]).concat(g.rolls),d.message=await F.createUsageMessage(t,c),u.log("messageConfig",[a,d.message]),d.message.dnd5e=((T=c.flags)==null?void 0:T.dnd5e)??{},d.message.dnd5e.targets=C.getTargetDescriptors({actorId:d.message.speaker.actor}),d.message.flags={...d.message.flags,rsr5e:{processed:!0}},await t._finalizeUsage(n,d),Hooks.call("dnd5e.postUseActivity",t,n,d)===!1||i&&t._triggerSubsequentActions&&t._triggerSubsequentActions(n,d),d}static async createUsageMessage(t,e){let s=await t._usageChatContext(e),a=await Ue(e.data.rolls);s={...s,rolls:a},u.log("createUsageMessage",[t.metadata.usage.chatCard,s]);const i=foundry.utils.mergeObject({rollMode:game.settings.get("core","rollMode"),data:{content:await renderTemplate(t.metadata.usage.chatCard,s),speaker:ChatMessage.getSpeaker({actor:t.item.actor}),flags:{core:{canPopout:!0},rsr5e:{processed:!0}}}},e);Hooks.callAll("dnd5e.preCreateUsageMessage",t,i),ChatMessage.applyRollMode(i.data,i.rollMode);const r=i.create===!1?i.data:await ChatMessage.create(i.data);return Hooks.callAll("dnd5e.postCreateUsageMessage",t,r),r}}const Ue=async(o,t)=>{let e=[];return e=await Promise.all(o.map(async s=>{const a=await s.getTooltip();return{...s,formula:s.formula,total:s.total,tooltipHtml:a}})),e},{OperatorTerm:ve,RollTerm:Be}=foundry.dice.terms;function fe(o,{respectProperties:t}={}){const e=(i,r=[])=>[i,...t?Array.from(r).sort():[]].join(),s=new Map;for(const i of o){if(!i._evaluated)throw new Error("Only evaluated rolls can be aggregated.");for(const r of Ke(i.terms,i.options.type)){const n=e(r.type,i.options.properties);s.has(n)||s.set(n,{type:r.type,properties:new Set,terms:[]});const l=s.get(n);l.terms.push(new ve({operator:r.negative?"-":"+"}),...r.terms),i.options.properties&&(l.properties=l.properties.union(new Set(i.options.properties)))}}const a=[];for(const i of s.values()){const r=new CONFIG.Dice.DamageRoll;r.terms=i.terms,r._total=r._evaluateTotal(),r._evaluated=!0,r.options={type:i.type,properties:Array.from(i.properties)},r.resetFormula(),a.push(r)}return a}function Ke(o,t){var n;const e=()=>{i.type??(i.type=t),a.push(i),i=null,r=!1},s=l=>l in CONFIG.DND5E.damageTypes||l in CONFIG.DND5E.healingTypes,a=[];let i,r=!1;for(let l of o){if(l instanceof ve&&["+","-"].includes(l.operator)){i&&e(),l.operator==="-"&&(r=!r);continue}l=Be.fromData(foundry.utils.deepClone(l.toJSON())),i??(i={terms:[],negative:r,type:null}),i.terms.push(l);const c=(n=l.flavor)==null?void 0:n.toLowerCase().trim();s(c)&&(i.type??(i.type=c),l.options.flavor="")}return i&&e(),a}const{HandlebarsApplicationMixin:je}=foundry.applications.api;function Ye(o){class t extends je(o){get subtitle(){return game.i18n.localize(this.options.window.subtitle??"")}_initializeApplicationOptions(s){const a=super._initializeApplicationOptions(s);return a.uniqueId=a.uniqueId.replace(/\./g,"-"),a}_configureRenderOptions(s){var a;super._configureRenderOptions(s),s.isFirstRender&&this.hasFrame&&(s.window||(s.window={}),(a=s.window).subtitle||(a.subtitle=this.subtitle))}_onFirstRender(s,a){var r;super._onFirstRender(s,a);const i={};for(const[n,l]of Object.entries(this.constructor.PARTS)){if(!((r=l.container)!=null&&r.id))continue;const c=this.element.querySelector(`[data-application-part="${n}"]`);if(c){if(!i[l.container.id]){const g=document.createElement("div");g.dataset.containerId=l.container.id,g.classList.add(...l.container.classes??[]),i[l.container.id]=g,c.replaceWith(g)}i[l.container.id].append(c)}}}async _prepareContext(s){const a=await super._prepareContext(s);return a.CONFIG=CONFIG.DND5E,a.inputs={...foundry.applications.fields,...dnd5e.applications.fields},a}async _preparePartContext(s,a,i){return{...await super._preparePartContext(s,a,i)}}async _renderFrame(s){var r,n,l;const a=await super._renderFrame(s),i=document.createElement("h2");if(i.classList.add("window-subtitle"),(r=a==null?void 0:a.querySelector(".window-title"))==null||r.insertAdjacentElement("afterend",i),(((n=s.window)==null?void 0:n.icon)??"").includes(".")){const c=a.querySelector(".window-icon"),g=document.createElement((l=s.window.icon)!=null&&l.endsWith(".svg")?"dnd5e-icon":"img");g.classList.add("window-icon"),g.src=s.window.icon,c.replaceWith(g)}return a}_updateFrame(s){super._updateFrame(s),s.window&&"subtitle"in s.window&&(this.element.querySelector(".window-header > .window-subtitle").innerText=s.window.subtitle)}_onRender(s,a){super._onRender(s,a),this.element.querySelectorAll("multi-select").forEach(i=>{i.disabled||i.querySelectorAll(".tag").forEach(r=>{var n;r.classList.add("remove"),(n=r.querySelector(":scope > span"))==null||n.classList.add("remove")})}),this.element.querySelectorAll(".label-top > p.hint").forEach(i=>{const r=i.parentElement.querySelector(":scope > label");r&&(i.ariaLabel=i.innerText,i.dataset.tooltip=i.innerHTML,i.innerHTML="",r.insertAdjacentElement("beforeend",i))})}_disableFields(){const s=`.window-content :is(${["INPUT","SELECT","TEXTAREA","BUTTON","DND5E-CHECKBOX","COLOR-PICKER","DOCUMENT-TAGS","FILE-PICKER","HUE-SLIDER","MULTI-SELECT","PROSE-MIRROR","RANGE-PICKER","STRING-TAGS"].join(", ")}):not(.interface-only)`;for(const a of this.element.querySelectorAll(s))a.tagName==="TEXTAREA"?a.readOnly=!0:a.disabled=!0}}return b(t,"DEFAULT_OPTIONS",{classes:["dnd5e2"],window:{subtitle:""}}),b(t,"PARTS",{}),t}const{ApplicationV2:We}=foundry.applications.api;class Qe extends Ye(We){}class Te extends Qe{get form(){return this.options.tag==="form"?this.element:this.element.querySelector("form")}async _preparePartContext(t,e,s){return e={...await super._preparePartContext(t,e,s)},t==="content"?this._prepareContentContext(e,s):t==="footer"?this._prepareFooterContext(e,s):e}async _prepareContentContext(t,e){return t}async _prepareFooterContext(t,e){var s;return t.buttons=(s=this.options.buttons)==null?void 0:s.map(a=>({...a,cssClass:a.class})),t}_attachFrameListeners(){var t,e;super._attachFrameListeners(),this.options.tag!=="form"&&((t=this.form)==null||t.addEventListener("submit",this._onSubmitForm.bind(this,this.options.form)),(e=this.form)==null||e.addEventListener("change",this._onChangeForm.bind(this,this.options.form)))}}b(Te,"DEFAULT_OPTIONS",{tag:"dialog",window:{contentTag:"form",contentClasses:["standard-form"],minimizable:!1}}),b(Te,"PARTS",{content:{template:""},footer:{template:"templates/generic/form-footer.hbs"}});const{DiceTerm:Je}=foundry.dice.terms;var V,ae,q,ie,Ce,ue,Ne;const W=class W extends Te{constructor(e={},s={},a={}){super(a);j(this,ie);j(this,V);j(this,ae);j(this,q);Y(this,V,e),Y(this,ae,s),re(this,ie,Ce).call(this,foundry.utils.deepClone(K(this,V)))}static get rollType(){return CONFIG.Dice.BasicRoll}get config(){return K(this,V)}get message(){return K(this,ae)}get rolls(){return K(this,q)}get rollType(){return this.options.rollType??this.constructor.rollType}_identifyDiceTerms(){let e=[],s=!0;const a=r=>{if(r instanceof Je){if(!Number.isFinite(r.number)||!Number.isFinite(r.faces)||!this.options.rendering.dice.denominations.has(r.denomination))return s=!1;for(let n=0;n<r.number;n++)e.push({icon:`systems/dnd5e/icons/svg/dice/${r.denomination}.svg`,label:r.denomination,denomination:r.denomination})}},i=(r=[])=>{for(const n of r)a(n),"dice"in n&&i(n.dice)};if(this.rolls.forEach(r=>i(r.terms)),e.length>this.options.rendering.dice.max){const r=e.reduce((n,{icon:l,denomination:c})=>(n[c]??(n[c]={icon:l,count:0}),n[c].count++,n),{});e=Object.entries(r).map(([n,{icon:l,count:c}])=>({icon:l,label:`${c}${n}`})),e.length>this.options.rendering.dice.max&&(s=!1)}else e.length||(s=!1);return s?e:[]}async _preparePartContext(e,s,a){switch(s=await super._preparePartContext(e,s,a),e){case"buttons":return this._prepareButtonsContext(s,a);case"configuration":return this._prepareConfigurationContext(s,a);case"formulas":return this._prepareFormulasContext(s,a);default:return s}}async _prepareButtonsContext(e,s){return e.buttons={roll:{default:!0,icon:'<i class="fa-solid fa-dice" inert></i>',label:game.i18n.localize("DND5E.Roll")}},e}async _prepareConfigurationContext(e,s){var a;return e.fields=[{field:new foundry.data.fields.StringField({label:game.i18n.localize("DND5E.RollMode")}),name:"rollMode",value:this.message.rollMode??((a=this.options.default)==null?void 0:a.rollMode)??game.settings.get("core","rollMode"),options:Object.entries(CONFIG.Dice.rollModes).map(([i,r])=>({value:i,label:game.i18n.localize(`${game.release.generation<13?r:r.label}`)}))}],e}async _prepareFormulasContext(e,s){return e.rolls=this.rolls.map(a=>({roll:a})),e.dice=this._identifyDiceTerms()||[],e}_buildConfig(e,s,a){var r,n;e=foundry.utils.mergeObject({parts:[],data:{},options:{}},e),Hooks.callAll("dnd5e.buildRollConfig",this,e,s,a);const i=s==null?void 0:s.get(`roll.${a}.situational`);return i&&e.situational!==!1?(e.parts.push("@situational"),e.data.situational=i):e.parts.findSplice(l=>l==="@situational"),(n=(r=this.options).buildConfig)==null||n.call(r,this.config,e,s,a),e}_finalizeRolls(e){return this.rolls}rebuild(){this._onChangeForm(this.options.form,new Event("change"))}_onChangeForm(e,s){super._onChangeForm(e,s);const a=new FormDataExtended(this.form);a.has("rollMode")&&(this.message.rollMode=a.get("rollMode")),re(this,ie,Ce).call(this,foundry.utils.deepClone(K(this,V)),a),this.render({parts:["formulas"]})}_onClose(e={}){var s;(s=e.dnd5e)!=null&&s.submitted||Y(this,q,[])}static async configure(e={},s={},a={}){return new Promise(i=>{const r=new this(e,a,s.options);r.addEventListener("close",()=>i(r.rolls),{once:!0}),r.render({force:!0})})}};V=new WeakMap,ae=new WeakMap,q=new WeakMap,ie=new WeakSet,Ce=function(e,s){var i;const a=this.rollType;Y(this,q,((i=e.rolls)==null?void 0:i.map((r,n)=>a.fromConfig(this._buildConfig(r,s,n),this.config)))??[])},ue=new WeakSet,Ne=async function(e,s,a){var i,r;a.has("rollMode")&&(this.message.rollMode=a.get("rollMode")),Y(this,q,this._finalizeRolls((r=(i=e.submitter)==null?void 0:i.dataset)==null?void 0:r.action)),await this.close({dnd5e:{submitted:!0}})},j(W,ue),b(W,"DEFAULT_OPTIONS",{classes:["roll-configuration"],window:{title:"DND5E.RollConfiguration.Title",icon:"fa-solid fa-dice"},form:{handler:re(W,ue,Ne)},position:{width:400},buildConfig:null,rendering:{dice:{max:5,denominations:new Set(["d4","d6","d8","d10","d12","d20"])}}}),b(W,"PARTS",{formulas:{template:"systems/dnd5e/templates/dice/roll-formulas.hbs"},configuration:{template:"systems/dnd5e/templates/dice/roll-configuration.hbs"},buttons:{template:"systems/dnd5e/templates/dice/roll-buttons.hbs"}});let ce=W;const ee=class ee extends ce{static get rollType(){return CONFIG.Dice.DamageRoll}async _prepareButtonsContext(t,e){var i;const s=((i=this.config.critical)==null?void 0:i.allow)!==!1,a=s&&this.options.defaultButton==="critical";return t.buttons={critical:{default:a,icon:'<i class="fa-solid fa-bomb" inert></i>',label:game.i18n.localize("DND5E.CriticalHit")},normal:{default:!a,icon:'<i class="fa-solid fa-dice" inert></i>',label:game.i18n.localize(s?"DND5E.Normal":"DND5E.Roll")}},s||delete t.buttons.critical,t}async _prepareFormulasContext(t,e){t=await super._prepareFormulasContext(t,e);const s=foundry.utils.mergeObject(CONFIG.DND5E.damageTypes,CONFIG.DND5E.healingTypes,{inplace:!1});return t.rolls=t.rolls.map(({roll:a})=>{var i,r;return{roll:a,damageConfig:s[a.options.type]??s[(i=a.options.types)==null?void 0:i[0]],damageTypes:((r=a.options.types)==null?void 0:r.length)>1?Object.entries(s).map(([n,l])=>{var c;return(c=a.options.types)!=null&&c.includes(n)?{value:n,label:l.label}:null}).filter(n=>n):null}}),t}_buildConfig(t,e,s){t=super._buildConfig(t,e,s);const a=e==null?void 0:e.get(`roll.${s}.damageType`);return a&&(t.options.type=a),t}_finalizeRolls(t){return this.rolls.map(e=>(e.options.isCritical=t==="critical",e.configureDamage({critical:this.config.critical}),e))}};b(ee,"PARTS",{...Oe(ee,ee,"PARTS"),formulas:{template:"systems/dnd5e/templates/dice/damage-formulas.hbs"}});let Ee=ee;const Xe={Alt:KeyboardManager.MODIFIER_CODES.Alt,Control:KeyboardManager.MODIFIER_CODES.Control.filter(o=>o.startsWith("Control")),Meta:KeyboardManager.MODIFIER_CODES.Control.filter(o=>!o.startsWith("Control")),Shift:KeyboardManager.MODIFIER_CODES.Shift};function he(o,t){if(!o)return!1;const e={},s=(a,i)=>{e[a]=i,Xe[a].forEach(r=>e[r]=i)};return s(KeyboardManager.MODIFIER_KEYS.ALT,o.altKey),s(KeyboardManager.MODIFIER_KEYS.CONTROL,o.ctrlKey),s("Meta",o.metaKey),s(KeyboardManager.MODIFIER_KEYS.SHIFT,o.shiftKey),game.keybindings.get("dnd5e",t).some(a=>game.keyboard.downKeys.has(a.key)&&a.modifiers.every(i=>e[i])?!0:a.modifiers.length?!1:e[a.key])}const{DiceTerm:Ze,NumericTerm:et}=foundry.dice.terms,te=class te extends Roll{static fromConfig(t,e){var a;const s=(t.parts??[]).join(" + ");return t.options??(t.options={}),(a=t.options).target??(a.target=e.target),new this(s,t.data,t.options)}static constructParts(t,e={}){const s=[];for(const[a,i]of Object.entries(t))!i&&i!==0||(s.push(`@${a}`),foundry.utils.setProperty(e,a,foundry.utils.getType(i)==="string"?Roll.replaceFormulaData(i,e):i));return{parts:s,data:e}}static async build(t={},e={},s={}){const a=await this.buildConfigure(t,e,s);return await this.buildEvaluate(a,t,s),await this.buildPost(a,t,s),a}static async buildConfigure(t={},e={},s={}){var r;t.hookNames=[...t.hookNames??[],""];for(const n of t.hookNames)if(Hooks.call(`dnd5e.preRoll${n.capitalize()}V2`,t,e,s)===!1)return[];this.applyKeybindings(t,e,s);let a;e.configure===!1?a=((r=t.rolls)==null?void 0:r.map((n,l)=>{var c,g;return(g=(c=e.options)==null?void 0:c.buildConfig)==null||g.call(c,t,n,null,l),this.fromConfig(n,t)}))??[]:a=await(e.applicationClass??this.DefaultConfigurationDialog).configure(t,e,s);const i=foundry.utils.getProperty(s,"data.flags.dnd5e.roll.type");i&&a.forEach(n=>{var l;return(l=n.options).rollType??(l.rollType=i)});for(const n of t.hookNames){const l=`dnd5e.post${n.capitalize()}RollConfiguration`;if(Hooks.call(l,a,t,e,s)===!1)return[]}return a}static async buildEvaluate(t,e={},s={}){if(e.evaluate!==!1)for(const a of t)await a.evaluate()}static async buildPost(t,e,s){var i,r;s.data=foundry.utils.expandObject(s.data??{});const a=(r=(i=e.event)==null?void 0:i.target.closest("[data-message-id]"))==null?void 0:r.dataset.messageId;return a&&foundry.utils.setProperty(s.data,"flags.dnd5e.originatingMessage",a),t!=null&&t.length&&e.evaluate!==!1&&s.create!==!1&&(s.document=await this.toMessage(t,s.data,{rollMode:s.rollMode})),s.document}static applyKeybindings(t,e,s){e.configure??(e.configure=!0)}get isFailure(){if(this._evaluated)return Number.isNumeric(this.options.target)?this.total<this.options.target:!1}get isSuccess(){if(this._evaluated)return Number.isNumeric(this.options.target)?this.total>=this.options.target:!1}static async toMessage(t,e={},{rollMode:s,create:a=!0}={}){for(const n of t)n._evaluated||await n.evaluate({allowInteractive:s!==CONST.DICE_ROLL_MODES.BLIND}),s??(s=n.options.rollMode);e=foundry.utils.mergeObject({sound:CONFIG.sounds.dice},e),e.rolls=t,this._prepareMessageData(t,e);const i=getDocumentClass("ChatMessage"),r=new i(e);return a?i.create(r.toObject(),{rollMode:s}):(s&&r.applyRollMode(s),r.toObject())}static _prepareMessageData(t,e){}async evaluate(t={}){return this.preCalculateDiceTerms(t),super.evaluate(t)}evaluateSync(t={}){return this.preCalculateDiceTerms(t),super.evaluateSync(t)}static replaceFormulaData(t,e,s){return super.replaceFormulaData(t,e,s).replaceAll(/\$"?!(.+?)!"?\$/g,"$1")}preCalculateDiceTerms(t={}){this._evaluated||!t.maximize&&!t.minimize||(this.terms=this.terms.map(e=>{if(e instanceof Ze&&e.modifiers.length){const s=!t.maximize,a=this.constructor.preCalculateTerm(e,{minimize:s});if(Number.isFinite(a))return new et({number:a,options:e.options})}return e}))}static preCalculateTerm(t,{minimize:e=!1}={}){let s=e?1:t.faces,a=t.number;const i=foundry.utils.deepClone(t.modifiers),r=new Set(["k","kh","kl"]),n=new Set(["d","dh","dl"]),l=new Set([...r,...n,"max","min"]);let c=!1;for(const g of i){const d=/(m[ai][xn]|[kd][hl]?)(\d+)?/i,m=g.match(d);if(!m)continue;m[0].length<m.input.length&&i.push(m.input.slice(m[0].length));let[,p,h]=m;if(p=p.toLowerCase(),!l.has(p))continue;c=!0;const f=parseInt(h)||(p==="max"||p==="min"?-1:1);if(f>0){if(p==="max"&&e||p==="min"&&!e)continue;p==="max"||p==="min"?s=Math.min(t.faces,f):r.has(p)?a=Math.min(a,f):n.has(p)&&(a=Math.max(1,a-f))}}return c?s*a:null}simplify(){var t,e;for(const s of this.dice){const a=s._number;a instanceof te&&a.isDeterministic&&(s._number=a.evaluateSync().total);const i=s._faces;i instanceof te&&i.isDeterministic&&(s._faces=i.evaluateSync().total),(e=(t=i.terms)==null?void 0:t[0])!=null&&e.flavor&&(s.options.flavor=i.terms[0].flavor)}this.resetFormula()}static mergeConfigs(t,e={}){var s;return e.data&&(t.data??(t.data={}),Object.assign(t.data,e.data)),(s=e.parts)!=null&&s.length&&(t.parts??(t.parts=[]),t.parts.unshift(...e.parts)),e.options&&(t.options??(t.options={}),foundry.utils.mergeObject(t.options,e.options)),t}};b(te,"DefaultConfigurationDialog",ce);let Re=te;const{DiceTerm:tt,FunctionTerm:st,NumericTerm:_e,OperatorTerm:ye,ParentheticalTerm:be,StringTerm:ne}=foundry.dice.terms;class Se extends Re{constructor(t,e,s){super(t,e,s),this.options.preprocessed||this.preprocessFormula(),this.options.configured||this.configureDamage()}static fromConfig(t,e){return e.critical&&(t=foundry.utils.deepClone(t),t.options??(t.options={}),t.options.critical=foundry.utils.mergeObject(e.critical,t.options.critical??{},{inplace:!1})),super.fromConfig(t,e)}static async build(t={},e={},s={}){var a,i;return t.critical??(t.critical={}),(a=t.critical).multiplyNumeric??(a.multiplyNumeric=game.settings.get("dnd5e","criticalDamageModifiers")),(i=t.critical).powerfulCritical??(i.powerfulCritical=game.settings.get("dnd5e","criticalDamageMaxDice")),super.build(t,e,s)}static applyKeybindings(t,e,s){var i;const a={default:he(t.event,"skipDialogNormal"),normal:he(t.event,"skipDialogDisadvantage"),critical:he(t.event,"skipDialogAdvantage")};e.configure??(e.configure=Object.values(a).every(r=>!r));for(const r of t.rolls)r.options??(r.options={}),(i=r.options).isCritical??(i.isCritical=(t.isCritical||a.critical)&&!a.normal)}get isCritical(){return this.options.isCritical===!0}preprocessFormula(){for(let[t,e]of this.terms.entries()){const s=this.terms[t+1],a=this.terms[t-1];if(e instanceof ne&&/^d\d+/.test(e.term)&&!(a instanceof be)){const i=`1${e.term}`,r=new Roll(i).terms[0];this.terms.splice(t,1,r),e=r}else if(e instanceof be&&a instanceof ne&&a.term.match(/^[0-9]*d$/)){if(e.isDeterministic){let i=`${a.term}${e.evaluate().total}`,r=2;s instanceof ne&&(i+=s.term,r+=1);const n=new Roll(i).terms[0];this.terms.splice(t-1,r,n),e=n}}else if((e instanceof be||e instanceof st)&&s instanceof ne&&s.term.match(/^d[0-9]*$/)&&e.isDeterministic){const i=`${e.evaluate().total}${s.term}`,r=new Roll(i).terms[0];this.terms.splice(t,2,r),e=r}}this.resetFormula(),this.options.preprocessed=!0}configureDamage({critical:t={}}={}){var s;t=foundry.utils.mergeObject(t,this.options.critical??{},{inplace:!1});const e=new Map;for(let[a,i]of this.terms.entries())if(i instanceof tt){if(i._number instanceof Roll){if(!i._number.isDeterministic)continue;i._number._evaluated||i._number.evaluateSync()}if(i.options.baseNumber=i.options.baseNumber??i.number,i.number=i.options.baseNumber,this.isCritical){let r=t.multiplier??2;if(t.powerfulCritical){const l=Roll.create(i.formula).evaluateSync({maximize:!0}).total;if(l>0){const c=((s=i.flavor)==null?void 0:s.toLowerCase().trim())??game.i18n.localize("DND5E.PowerfulCritical");e.set(c,(e.get(c)??0)+l)}r=Math.max(1,r-1)}let n=t.bonusDice&&a===0?t.bonusDice:0;i.alter(r,n),i.options.critical=!0}}else t.multiplyNumeric&&i instanceof _e&&(i.options.baseNumber=i.options.baseNumber??i.number,i.number=i.options.baseNumber,this.isCritical&&(i.number*=t.multiplier??2,i.options.critical=!0));if(t.powerfulCritical&&e.size)for(const[a,i]of e.entries())this.terms.push(new ye({operator:"+"})),this.terms.push(new _e({number:i,options:{flavor:a}}));if(this.isCritical&&t.bonusDamage){const a=new Roll(t.bonusDamage,this.data);a.terms[0]instanceof ye||this.terms.push(new ye({operator:"+"})),this.terms.push(...a.terms)}this.resetFormula(),this.options.configured=!0}async configureDialog(t={},e={}){return(await this.constructor.configureDialog([this],t,e))[0]??null}static async configureDialog(t,{title:e,defaultRollMode:s,defaultCritical:a=!1,template:i,allowCritical:r=!0}={},n={}){return foundry.utils.logCompatibilityWarning("The `configureDialog` on DamageRoll has been deprecated and is now handled through `DamageRoll.build`.",{since:"DnD5e 4.0",until:"DnD5e 4.4"}),await this.DefaultConfigurationDialog.configure({critical:{allow:r},rolls:t.map(c=>({parts:[c.formula],options:c.options}))},{options:{title:e}},{rollMode:s})}}b(Se,"DefaultConfigurationDialog",Ee);const{Coin:at,DiceTerm:Me,Die:it,FunctionTerm:rt,NumericTerm:ge,OperatorTerm:v,ParentheticalTerm:Ie,RollTerm:nt}=foundry.dice.terms;function Pe(o,{preserveFlavor:t=!1,deterministic:e=!1}={}){var c;let s;try{s=new Roll(o)}catch(g){console.warn(`Unable to simplify formula '${o}': ${g}`)}if(Roll.validate(s.formula),t||(s.terms=Roll.parse(s.formula.replace(nt.FLAVOR_REGEXP,""))),e){s.terms=De(s.terms);const g=[];let d=[],m=!1,p;for(let h=s.terms.length-1;h>=0;){let f,y=s.terms[h];if(y instanceof Ie&&(f=Pe(y.term,{preserveFlavor:t,deterministic:e})),Number.isNumeric(f)){const T={number:f};t&&(T.options={flavor:y.flavor}),y=new ge(T)}for(p=y.isDeterministic&&(!m||p),p?d.unshift(y):d=[],y=s.terms[--h];y instanceof v;){if(p&&d.unshift(y),y.operator==="*"||y.operator==="/"||y.operator==="%")m=!0;else for(m=!1;d.length;)g.unshift(d.pop());y=s.terms[--h]}}if(p)for(;d.length;)g.unshift(d.pop());s.terms=g}if(s.terms=De(s.terms),/[*/]/.test(s.formula))return s.isDeterministic&&!/d\(/.test(s.formula)&&(!/\[/.test(s.formula)||!t)?String(new Roll(s.formula).evaluateSync().total):s.constructor.getFormula(s.terms);s.terms=Fe(s.terms),s.terms=Roll.simplifyTerms(s.terms);let{poolTerms:a,diceTerms:i,mathTerms:r,numericTerms:n}=ct(s.terms);n=lt(n??[]),i=ot(i??[]);const l=[i,a,r,n].flat().filter(Boolean);return((c=l[0])==null?void 0:c.operator)==="+"&&l.shift(),s.constructor.getFormula(l)}function De(o){return o.reduce((t,e)=>{const s=t[t.length-1],a=new Set([s==null?void 0:s.operator,e.operator]);return a.has(void 0)?t.push(e):a.has("+")&&a.has("-")?t.splice(-1,1,new v({operator:"-"})):a.has("-")&&a.size===1?t.splice(-1,1,new v({operator:"+"})):a.has("+")||t.push(e),t},[])}function lt(o){const t=[],{annotated:e,unannotated:s}=He(o);if(s.length){const a=Roll.safeEval(Roll.getFormula(s));if(a===0)return[...e];a>0&&t.push(new v({operator:"+"})),t.push(new ge({number:a}))}return[...t,...e]}function ot(o){const{annotated:t,unannotated:e}=He(o),s=e.reduce((i,r,n)=>{var m;if(r instanceof v)return i;const l=((m=r.constructor)==null?void 0:m.name)==="Coin",c=l?"c":r.faces,g=l?"":r.modifiers.filterJoin(""),d=`${e[n-1].operator}${c}${g}`;return i[d]??(i[d]={}),r._number instanceof Roll&&r._number.isDeterministic&&r._number.evaluateSync(),i[d].number=(i[d].number??0)+r.number,l||(i[d].modifiers=(i[d].modifiers??[]).concat(r.modifiers)),i},{});return[...Object.entries(s).flatMap(([i,{number:r,modifiers:n}])=>[new v({operator:i.charAt(0)}),i.slice(1)==="c"?new at({number:r}):new it({number:r,faces:parseInt(i.slice(1)),modifiers:[...new Set(n)]})]),...t]}function Fe(o){return o=o.reduce((t,e)=>{if(e instanceof Ie)if(e.isDeterministic){const s=new Roll(e.term);e=new ge({number:s.evaluateSync().total})}else{const s=new Roll(e.term).terms;e=Fe(s)}return t.push(e),t},[]),De(o.flat())}function ct(o){return o[0]instanceof v||o.unshift(new v({operator:"+"})),o.reduce((t,e,s)=>{let a;e instanceof Me?a=Me:e instanceof rt&&e.isDeterministic?a=ge:a=e.constructor;const i=`${a.name.charAt(0).toLowerCase()}${a.name.substring(1)}s`;return(t[i]=t[i]??[]).push(o[s-1],e),t},{})}function He(o){return o.reduce((t,e,s)=>(e instanceof v||t[e.flavor?"annotated":"unannotated"].push(o[s-1],e),t),{annotated:[],unannotated:[]})}class le extends ChatMessage{constructor(){super(...arguments);b(this,"_highlighted",null);b(this,"_trayStates")}get canApplyDamage(){var s,a,i;const e=(a=(s=this.flags.dnd5e)==null?void 0:s.roll)==null?void 0:a.type;return e&&e!=="damage"?!1:this.isRoll&&this.isContentVisible&&!!((i=canvas.tokens)!=null&&i.controlled.length)}get canSelectTargets(){var e,s;return((s=(e=this.flags.dnd5e)==null?void 0:e.roll)==null?void 0:s.type)!=="attack"?!1:this.isRoll&&this.isContentVisible}get isRoll(){var e,s;return((e=this.system)==null?void 0:e.isRoll)!==void 0?this.system.isRoll:super.isRoll&&!((s=this.flags.dnd5e)!=null&&s.rest)}get shouldDisplayChallenge(){if(game.user.isGM||this.author===game.user)return!0;switch(game.settings.get("dnd5e","challengeVisibility")){case"all":return!0;case"player":return!this.author.isGM;default:return!1}}static migrateData(e){if(e=super.migrateData(e),foundry.utils.hasProperty(e,"flags.dnd5e.itemData")&&(foundry.utils.setProperty(e,"flags.dnd5e.item.data",e.flags.dnd5e.itemData),delete e.flags.dnd5e.itemData),foundry.utils.hasProperty(e,"flags.dnd5e.use")){const s=e.flags.dnd5e.use;foundry.utils.setProperty(e,"flags.dnd5e.messageType","usage"),s.type&&foundry.utils.setProperty(e,"flags.dnd5e.item.type",s.type),s.itemId&&foundry.utils.setProperty(e,"flags.dnd5e.item.id",s.itemId),s.itemUuid&&foundry.utils.setProperty(e,"flags.dnd5e.item.uuid",s.itemUuid)}return e}prepareData(){var e,s,a,i,r;if(super.prepareData(),this._shimFlags(),!((s=(e=this.flags.dnd5e)==null?void 0:e.item)!=null&&s.data)&&((i=(a=this.flags.dnd5e)==null?void 0:a.item)!=null&&i.id)){const n=(r=this.getFlag("dnd5e","use.consumed.deleted"))==null?void 0:r.find(l=>l._id===this.flags.dnd5e.item.id);n&&Object.defineProperty(this.flags.dnd5e.item,"data",{value:n})}dnd5e.registry.messages.track(this)}async getHTML(e={}){var i;const s=await super.getHTML(e),a=s instanceof HTMLElement?s:s[0];return foundry.utils.getType((i=this.system)==null?void 0:i.getHTML)==="function"?(await this.system.getHTML(a,e),s):(this._displayChatActionButtons(s),this._highlightCriticalSuccessFailure(s),game.settings.get("dnd5e","autoCollapseItemCards")&&s.find(".description.collapsible").each((r,n)=>n.classList.add("collapsed")),this._enrichChatCard(a),this._collapseTrays(a),this._activateActivityListeners(a),dnd5e.bastion._activateChatListeners(this,a),Hooks.callAll("dnd5e.renderChatMessage",this,a),s)}_collapseTrays(e){var a,i;let s;switch(game.settings.get("dnd5e","autoCollapseChatTrays")){case"always":s=!0;break;case"never":s=!1;break;case"older":s=this.timestamp<Date.now()-5*60*1e3;break}for(const r of e.querySelectorAll(".card-tray"))r.classList.toggle("collapsed",((a=this._trayStates)==null?void 0:a.get(r.className.replace(" collapsed","")))??s);for(const r of e.querySelectorAll(this.constructor.TRAY_TYPES.join(", ")))r.toggleAttribute("open",((i=this._trayStates)==null?void 0:i.get(r.tagName))??!s)}_displayChatActionButtons(e){var a;const s=e.find(".dnd5e.chat-card, .dnd5e2.chat-card");if(s.length>0){const i=e.find(".flavor-text");i.text()===e.find(".item-name").text()&&i.remove(),this.shouldDisplayChallenge&&(s[0].dataset.displayChallenge="");const r=game.actors.get(this.speaker.actor),n=game.user.isGM||(r==null?void 0:r.isOwner)||this.author.id===game.user.id;for(const l of e[0].querySelectorAll(".card-buttons button"))l.dataset.visibility!=="all"&&(l.dataset.visibility==="gm"&&!game.user.isGM||!n||(a=this.getAssociatedActivity())!=null&&a.shouldHideChatButton(l,this))&&(l.hidden=!0)}}_highlightCriticalSuccessFailure(e){var l,c;if(!this.isContentVisible||!this.rolls.length)return;const s=this.getOriginatingMessage(),a=s==null?void 0:s.shouldDisplayChallenge,i=game.user.isGM||game.settings.get("dnd5e","attackRollVisibility")!=="none",r=((c=(l=this.flags.dnd5e)==null?void 0:l.roll)==null?void 0:c.forceSuccess)===!0;function n(g){const d=document.createElement("i");return d.classList.add("fas",g),d.setAttribute("inert",""),d}for(let[g,d]of this.rolls.entries()){const m=d.dice[0];if((m==null?void 0:m.faces)!==20||(m==null?void 0:m.values.length)!==1)continue;d=dnd5e.dice.D20Roll.fromRoll(d);const p=d.dice[0];if("success"in p.results[0]||p.options.marginSuccess||p.options.marginFailure)continue;const f=e.find(".dice-total")[g];if(!f)continue;const y=["attack","death"].includes(this.getFlag("dnd5e","roll.type")),k=this.getFlag("dnd5e","roll.type")==="attack"?i:a;p.options.target&&k&&(d.isSuccess||r?f.classList.add("success"):f.classList.add("failure")),y&&d.isCritical&&f.classList.add("critical"),y&&d.isFumble&&!r&&f.classList.add("fumble");const w=document.createElement("div");w.classList.add("icons"),f.classList.contains("critical")?w.append(n("fa-check"),n("fa-check")):f.classList.contains("fumble")?w.append(n("fa-xmark"),n("fa-xmark")):f.classList.contains("success")?w.append(n("fa-check")):f.classList.contains("failure")&&w.append(n("fa-xmark")),w.children.length&&f.append(w)}}_enrichChatCard(e){var k,w,z,B,ke,we;const s=this.getAssociatedActor();let a,i;this.isContentVisible?(a=(s==null?void 0:s.img)??this.author.avatar,i=this.alias):(a=this.author.avatar,i=this.author.name);const r=document.createElement("a");r.classList.add("avatar"),s&&(r.dataset.uuid=s.uuid);const n=document.createElement("img");Object.assign(n,{src:a,alt:i}),r.append(n);const l=document.createElement("span");l.classList.add("name-stacked");const c=document.createElement("span");c.classList.add("title"),c.append(i),l.append(c);const g=document.createElement("span");g.classList.add("subtitle"),this.whisper.length&&(g.innerText=((k=e.querySelector(".whisper-to"))==null?void 0:k.innerText)??""),i!==((w=this.author)==null?void 0:w.name)&&!g.innerText.length&&(g.innerText=((z=this.author)==null?void 0:z.name)??""),l.appendChild(g);const d=e.querySelector(".message-sender");d==null||d.replaceChildren(r,l),(B=e.querySelector(".whisper-to"))==null||B.remove();const m=e.querySelector(".message-metadata"),p=m.querySelector(".message-delete");game.user.isGM||p==null||p.remove();const h=document.createElement("a");h.setAttribute("aria-label",game.i18n.localize("DND5E.AdditionalControls")),h.classList.add("chat-control"),h.dataset.contextMenu="",h.innerHTML='<i class="fas fa-ellipsis-vertical fa-fw"></i>',m.appendChild(h),e.querySelectorAll("i.dnd5e-icon").forEach(O=>{const x=document.createElement("dnd5e-icon");x.src=O.dataset.src,O.replaceWith(x)});const f=this.getFlag("dnd5e","roll"),y=this.getAssociatedItem(),T=this.getAssociatedActivity();if(this.isContentVisible&&y&&f){const O=f.type==="damage"&&((ke=this.rolls[0])==null?void 0:ke.isCritical),x=f.type==="damage"?O?game.i18n.localize("DND5E.CriticalHit"):(T==null?void 0:T.damageFlavor)??game.i18n.localize("DND5E.DamageRoll"):f.type==="attack"?(T==null?void 0:T.getActionLabel(f.attackMode))??"":((we=y.system.type)==null?void 0:we.label)??game.i18n.localize(CONFIG.Item.typeLabels[y.type]),Q=document.createElement("div");Q.classList.add("dnd5e2","chat-card"),Q.innerHTML=`
        <section class="card-header description ${O?"critical":""}">
          <header class="summary">
            <div class="name-stacked">
              <span class="subtitle">${x}</span>
            </div>
          </header>
        </section>
      `;const Ae=document.createElement("img");Object.assign(Ae,{className:"gold-icon",src:y.img,alt:y.name}),Q.querySelector("header").insertAdjacentElement("afterbegin",Ae);const me=document.createElement("span");me.classList.add("title"),me.append(y.name),Q.querySelector(".name-stacked").insertAdjacentElement("afterbegin",me),e.querySelector(".message-header .flavor-text").remove(),e.querySelector(".message-content").insertAdjacentElement("afterbegin",Q)}this._enrichAttackTargets(e),this.isContentVisible?(e.querySelectorAll(".dice-tooltip").forEach((O,x)=>{!(f instanceof Se)&&this.rolls[x]&&this._enrichRollTooltip(this.rolls[x],O)}),this._enrichDamageTooltip(this.rolls.filter(O=>O instanceof Se),e),this._enrichSaveTooltip(e),this._enrichEnchantmentTooltip(e),e.querySelectorAll(".dice-roll").forEach(O=>O.addEventListener("click",this._onClickDiceRoll.bind(this)))):e.querySelectorAll(".dice-roll").forEach(O=>O.classList.add("secret-roll")),this._enrichUsageEffects(e),r.addEventListener("click",this._onTargetMouseDown.bind(this)),r.addEventListener("pointerover",this._onTargetHoverIn.bind(this)),r.addEventListener("pointerout",this._onTargetHoverOut.bind(this))}_enrichRollTooltip(e,s){const a=Number(Pe(e._formula,{deterministic:!0}));if(!a)return;const i=a<0?"-":"+",r=document.createElement("section");r.classList.add("tooltip-part","constant"),r.innerHTML=`
      <div class="dice">
        <ol class="dice-rolls"></ol>
        <div class="total">
          <span class="value"><span class="sign">${i}</span>${Math.abs(a)}</span>
        </div>
      </div>
    `,s.appendChild(r)}_enrichAttackTargets(e){var d,m;const s=this.rolls[0];if(!(s instanceof dnd5e.dice.D20Roll))return;const a=CONFIG.DND5E.weaponMasteries[s.options.mastery];if(a){const p=document.createElement("p");p.classList.add("supplement");let h=a.label;a.reference&&(h=`
        <a class="content-link" draggable="true" data-link data-uuid="${a.reference}"
           data-tooltip="${h}">${h}</a>
      `),p.innerHTML=`<strong>${game.i18n.format("DND5E.WEAPON.Mastery.Flavor")}</strong> ${h}`,(d=e.querySelector(".chat-card")??e.querySelector(".message-content"))==null||d.appendChild(p)}const i=game.settings.get("dnd5e","attackRollVisibility");if(!(game.user.isGM||i!=="none"))return;const n=this.getFlag("dnd5e","targets");if(!(n!=null&&n.length))return;const l=document.createElement("div");l.classList.add("dnd5e2"),l.innerHTML=`
      <div class="card-tray targets-tray collapsible collapsed">
        <label class="roboto-upper">
          <i class="fas fa-bullseye" inert></i>
          <span>${game.i18n.localize("DND5E.TargetPl")}</span>
          <i class="fas fa-caret-down" inert></i>
        </label>
        <div class="collapsible-content">
          <ul class="dnd5e2 unlist evaluation wrapper"></ul>
        </div>
      </div>
    `;const c=l.querySelector("ul"),g=n.map(({name:p,ac:h,uuid:f})=>{!game.user.isGM&&i!=="all"&&(h="");const y=!s.isCritical&&(s.total<h||s.isFumble),T=document.createElement("li");return Object.assign(T.dataset,{uuid:f,miss:y}),T.className=`target ${y?"miss":"hit"}`,T.innerHTML=`
        <i class="fas ${y?"fa-times":"fa-check"}"></i>
        <div class="name"></div>
        ${h!==""?`
        <div class="ac">
          <i class="fas fa-shield-halved"></i>
          <span>${h===null?"&infin;":h}</span>
        </div>
        `:""}
      `,T.querySelector(".name").append(p),T}).sort((p,h)=>{const f=!!p.dataset.miss,y=!!h.dataset.miss;return f===y?0:f?1:-1});c.append(...g),c.querySelectorAll("li.target").forEach(p=>{p.addEventListener("click",this._onTargetMouseDown.bind(this)),p.addEventListener("pointerover",this._onTargetHoverIn.bind(this)),p.addEventListener("pointerout",this._onTargetHoverOut.bind(this))}),(m=e.querySelector(".message-content"))==null||m.appendChild(l)}_enrichDamageTooltip(e,s){var d;if(!e.length)return;const a=CONFIG.DND5E.aggregateDamageDisplay?fe(e):e;let{formula:i,total:r,breakdown:n}=a.reduce((m,p)=>(m.formula.push(CONFIG.DND5E.aggregateDamageDisplay?p.formula:` + ${p.formula}`),m.total+=p.total,m.breakdown.push(this._simplifyDamageRoll(p)),m),{formula:[],total:0,breakdown:[]});i=i.join("").replace(/^ \+ /,""),s.querySelectorAll(".dice-roll").forEach(m=>m.remove());const l=document.createElement("div");l.classList.add("dice-roll");const c=n.reduce((m,{type:p,total:h,constant:f,dice:y})=>{const T=CONFIG.DND5E.damageTypes[p]??CONFIG.DND5E.healingTypes[p];return`${m}
        <section class="tooltip-part">
          <div class="dice">
            <ol class="dice-rolls">
              ${y.reduce((k,{result:w,classes:z})=>`
                ${k}<li class="roll ${z}">${w}</li>
              `,"")}
              ${f?`
              <li class="constant"><span class="sign">${f<0?"-":"+"}</span>${Math.abs(f)}</li>
              `:""}
            </ol>
            <div class="total">
              ${T?`<img src="${T.icon}" alt="${T.label}">`:""}
              <span class="label">${(T==null?void 0:T.label)??""}</span>
              <span class="value">${h}</span>
            </div>
          </div>
        </section>
      `},"");l.innerHTML=`
      <div class="dice-result">
        <div class="dice-formula">${i}</div>
        <div class="dice-tooltip-collapser">
          <div class="dice-tooltip">
            ${c}
          </div>
        </div>
        <h4 class="dice-total">${r}</h4>
      </div>
    `,s.querySelector(".message-content").appendChild(l);const g=this.getFlag("dnd5e","roll.damageOnSave");if(g){const m=document.createElement("p");m.classList.add("supplement"),m.innerHTML=`<strong>${game.i18n.format("DND5E.SAVE.OnSave")}</strong> ${game.i18n.localize(`DND5E.SAVE.FIELDS.damage.onSave.${g.capitalize()}`)}`,(d=s.querySelector(".chat-card, .message-content"))==null||d.appendChild(m)}if(game.user.isGM){const m=document.createElement("damage-application");m.classList.add("dnd5e2"),m.damages=fe(e,{respectProperties:!0}).map(p=>({value:p.total,type:p.options.type,properties:new Set(p.options.properties??[])})),s.querySelector(".message-content").appendChild(m)}}_simplifyDamageRoll(e){const s={type:e.options.type,total:e.total,constant:0,dice:[]};let a=!1;for(let i=e.terms.length-1;i>=0;){const r=e.terms[i--];if(!(r instanceof foundry.dice.terms.NumericTerm)&&!(r instanceof foundry.dice.terms.DiceTerm))continue;const n=r.total;r instanceof foundry.dice.terms.DiceTerm&&s.dice.push(...r.results.map(g=>({result:r.getResultLabel(g),classes:r.getResultCSS(g).filterJoin(" ")})));let l=1,c=e.terms[i];for(;c instanceof foundry.dice.terms.OperatorTerm;)["+","-"].includes(c.operator)||(a=!0),c.operator==="-"&&(l*=-1),c=e.terms[--i];r instanceof foundry.dice.terms.NumericTerm&&(s.constant+=n*l)}return a&&(s.constant=null),s}_enrichEnchantmentTooltip(e){var n,l;if(!this.getFlag("dnd5e","use.enchantmentProfile"))return;const a=this.getFlag("dnd5e","use.concentrationId");if(a&&!((n=this.getAssociatedActor())!=null&&n.effects.get(a)))return;const i=document.createElement("enchantment-application");i.classList.add("dnd5e2");const r=e.querySelector(".card-footer");r?r.insertAdjacentElement("beforebegin",i):(l=e.querySelector(".chat-card"))==null||l.append(i)}_enrichSaveTooltip(e){const s=this.getAssociatedActor(),a=this.getFlag("dnd5e","roll");if((s==null?void 0:s.type)!=="npc"||(a==null?void 0:a.type)!=="save"||this.rolls.some(r=>r.isSuccess))return;const i=document.createElement("div");if(i.classList.add("dnd5e2","chat-card"),a.forceSuccess)i.insertAdjacentHTML("beforeend",`
      <p class="supplement">
        <strong>${game.i18n.localize("DND5E.ROLL.Status")}</strong>
        ${game.i18n.localize("DND5E.LegendaryResistance.Resisted")}
      </p>
    `);else if(s.system.resources.legres.value&&s.isOwner)i.insertAdjacentHTML("beforeend",`
        <div class="card-buttons">
          <button type="button">
            <i class="fa-solid fa-dragon" inert></i>
            ${game.i18n.localize("DND5E.LegendaryResistance.Action.Resist")}
          </button>
        </div>
      `),i.querySelector("button").addEventListener("click",()=>s.system.resistSave(this));else return;e.querySelector(".message-content").append(i)}_enrichUsageEffects(e){var r;if(this.getFlag("dnd5e","messageType")!=="usage")return;const s=this.getAssociatedItem(),a=(r=this.getFlag("dnd5e","use.effects"))==null?void 0:r.map(n=>s==null?void 0:s.effects.get(n)).filter(n=>n&&(game.user.isGM||n.transfer&&this.author.id===game.user.id));if(!(a!=null&&a.length))return;const i=document.createElement("effect-application");i.classList.add("dnd5e2"),i.effects=a,e.querySelector(".message-content").appendChild(i)}static addChatMessageContextOptions(e,s){const a=([r])=>{var n;return(n=game.messages.get(r.dataset.messageId))==null?void 0:n.canApplyDamage},i=([r])=>{var n;return(n=game.messages.get(r.dataset.messageId))==null?void 0:n.canSelectTargets};return s.push({name:game.i18n.localize("DND5E.ChatContextDamage"),icon:'<i class="fas fa-user-minus"></i>',condition:a,callback:r=>{var n;return(n=game.messages.get(r.data("messageId")))==null?void 0:n.applyChatCardDamage(r,1)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextHealing"),icon:'<i class="fas fa-user-plus"></i>',condition:a,callback:r=>{var n;return(n=game.messages.get(r.data("messageId")))==null?void 0:n.applyChatCardDamage(r,-1)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextTempHP"),icon:'<i class="fas fa-user-clock"></i>',condition:a,callback:r=>{var n;return(n=game.messages.get(r.data("messageId")))==null?void 0:n.applyChatCardTemp(r)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextDoubleDamage"),icon:'<i class="fas fa-user-injured"></i>',condition:a,callback:r=>{var n;return(n=game.messages.get(r.data("messageId")))==null?void 0:n.applyChatCardDamage(r,2)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextHalfDamage"),icon:'<i class="fas fa-user-shield"></i>',condition:a,callback:r=>{var n;return(n=game.messages.get(r.data("messageId")))==null?void 0:n.applyChatCardDamage(r,.5)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextSelectHit"),icon:'<i class="fas fa-bullseye"></i>',condition:i,callback:([r])=>{var n;return(n=game.messages.get(r.dataset.messageId))==null?void 0:n.selectTargets(r,"hit")},group:"attack"},{name:game.i18n.localize("DND5E.ChatContextSelectMiss"),icon:'<i class="fas fa-bullseye"></i>',condition:i,callback:([r])=>{var n;return(n=game.messages.get(r.dataset.messageId))==null?void 0:n.selectTargets(r,"miss")},group:"attack"}),s}_activateActivityListeners(e){var s;(s=this.getAssociatedActivity())==null||s.activateChatListeners(this,e)}async _onTargetMouseDown(e){var n;e.stopPropagation();const s=e.currentTarget.dataset.uuid,a=fromUuidSync(s),i=((n=a==null?void 0:a.token)==null?void 0:n.object)??(a==null?void 0:a.getActiveTokens()[0]);if(!i||!a.testUserPermission(game.user,"OBSERVER"))return;const r=!e.shiftKey;if(i.controlled)i.release();else return i.control({releaseOthers:r}),canvas.animatePan(i.center)}_onTargetHoverIn(e){var r;const s=e.currentTarget.dataset.uuid,a=fromUuidSync(s),i=((r=a==null?void 0:a.token)==null?void 0:r.object)??(a==null?void 0:a.getActiveTokens()[0]);i&&i.isVisible&&(i.controlled||i._onHoverIn(e,{hoverOutOthers:!0}),this._highlighted=i)}_onTargetHoverOut(e){this._highlighted&&this._highlighted._onHoverOut(e),this._highlighted=null}applyChatCardDamage(e,s){const a=fe(this.rolls,{respectProperties:!0}).map(i=>({value:i.total,type:i.options.type,properties:new Set(i.options.properties??[])}));return Promise.all(canvas.tokens.controlled.map(i=>{var r;return(r=i.actor)==null?void 0:r.applyDamage(a,{multiplier:s})}))}selectTargets(e,s){if(!(canvas!=null&&canvas.ready))return;const a=e.closest("[data-message-id]").querySelectorAll(`.evaluation li.target.${s}`),i=new Set(Array.from(a).map(r=>r.dataset.uuid));canvas.tokens.releaseAll(),i.forEach(r=>{var c;const n=fromUuidSync(r);if(!n)return;const l=n.isToken?[(c=n.token)==null?void 0:c.object]:n.getActiveTokens();for(const g of l)g!=null&&g.isVisible&&n.testUserPermission(game.user,"OWNER")&&g.control({releaseOthers:!1})})}applyChatCardTemp(e){const s=this.rolls.reduce((a,i)=>a+i.total,0);return Promise.all(canvas.tokens.controlled.map(a=>{var i;return(i=a.actor)==null?void 0:i.applyTempHP(s)}))}_onClickDiceRoll(e){e.stopPropagation(),e.currentTarget.classList.toggle("expanded")}static onRenderChatPopout(e,s){var i;s=s instanceof HTMLElement?s:s[0];const a=s.querySelector(".header-button.close");a&&(a.innerHTML='<i class="fas fa-times"></i>',a.dataset.tooltip=game.i18n.localize("Close"),a.setAttribute("aria-label",a.dataset.tooltip)),(i=s.querySelector(".message-metadata [data-context-menu]"))==null||i.remove()}static onRenderChatLog(e){game.release.generation<13&&([e]=e),game.user.isGM&&(e.dataset.gmUser=""),game.settings.get("dnd5e","autoCollapseItemCards")||requestAnimationFrame(()=>{setTimeout(()=>ui.chat.scrollBottom(),250)})}static activateListeners(){window.addEventListener("keydown",this.toggleModifiers,{passive:!0}),window.addEventListener("keyup",this.toggleModifiers,{passive:!0}),window.addEventListener("blur",()=>this.toggleModifiers({releaseAll:!0}),{passive:!0})}static toggleModifiers({releaseAll:e=!1}={}){document.querySelectorAll(".chat-sidebar > ol, #chat .chat-scroll > ol").forEach(s=>{for(const a of Object.values(KeyboardManager.MODIFIER_KEYS))game.keyboard.isModifierActive(a)&&!e?s.dataset[`modifier${a}`]="":delete s.dataset[`modifier${a}`]})}_onDelete(e,s){super._onDelete(e,s),dnd5e.registry.messages.untrack(this)}getAssociatedActivity(){var s,a;const e=fromUuidSync(this.getFlag("dnd5e","activity.uuid"));return e||((a=(s=this.getAssociatedItem())==null?void 0:s.system.activities)==null?void 0:a.get(this.getFlag("dnd5e","activity.id")))}getAssociatedActor(){if(this.speaker.scene&&this.speaker.token){const e=game.scenes.get(this.speaker.scene),s=e==null?void 0:e.tokens.get(this.speaker.token);if(s)return s.actor}return game.actors.get(this.speaker.actor)}getAssociatedItem(){const e=fromUuidSync(this.getFlag("dnd5e","item.uuid"));if(e)return e;const s=this.getAssociatedActor();if(!s)return;const a=this.getFlag("dnd5e","item.data")??this.getOriginatingMessage().getFlag("dnd5e","item.data");if(a)return new Item.implementation(a,{parent:s})}getAssociatedRolls(e){return dnd5e.registry.messages.get(this.id,e)}getOriginatingMessage(){return game.messages.get(this.getFlag("dnd5e","originatingMessage"))??this}_shimFlags(){var s;const e=foundry.utils.getProperty(this,"flags.dnd5e");if((e==null?void 0:e.messageType)==="usage"&&(e!=null&&e.use)){const a="The item data in the `dnd5e.use` flag on `ChatMessage` is now `dnd5e.item.type`, `dnd5e.item.id`, and `dnd5e.item.uuid`. Checking for usage can now be done using the `dnd5e.messageType` flag.";Object.defineProperty(e.use,"type",{get(){var i;return foundry.utils.logCompatibilityWarning(a,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(i=e.item)==null?void 0:i.type},configurable:!0,enumerable:!1}),Object.defineProperty(e.use,"itemId",{get(){var i;return foundry.utils.logCompatibilityWarning(a,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(i=e.item)==null?void 0:i.id},configurable:!0,enumerable:!1}),Object.defineProperty(e.use,"itemUuid",{get(){var i;return foundry.utils.logCompatibilityWarning(a,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(i=e.item)==null?void 0:i.uuid},configurable:!0,enumerable:!1})}else if((e==null?void 0:e.messageType)==="roll"&&(e!=null&&e.roll)){const a="The item data in the `dnd5e.roll` flag on `ChatMessage` is now `dnd5e.item.id` and `dnd5e.item.uuid`.";Object.defineProperty(e.roll,"itemId",{get(){var i;return foundry.utils.logCompatibilityWarning(a,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(i=e.item)==null?void 0:i.id},configurable:!0,enumerable:!1}),Object.defineProperty(e.roll,"itemUuid",{get(){var i;return foundry.utils.logCompatibilityWarning(a,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(i=e.item)==null?void 0:i.uuid},configurable:!0,enumerable:!1})}(s=e==null?void 0:e.item)!=null&&s.data&&Object.defineProperty(e,"itemData",{get(){return foundry.utils.logCompatibilityWarning("The `dnd5e.itemData` flag on `ChatMessage` is now `dnd5e.item.data`.",{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),this.item.data},configurable:!0,enumerable:!1})}}b(le,"TRAY_TYPES",["damage-application","effect-application"]);const S=class S{static serializeForTransport(t){return t==null||(t.rolls&&Array.isArray(t.rolls)&&(t.rolls=t.rolls.map(e=>e instanceof Roll?e.toJSON():e)),u.log("ROLL?? A",[t])),t}static deserializeFromTransport(t){let e={};return t==null?t:(t.rolls&&t.rolls.length>0&&(e={...t,rolls:t.rolls.map(s=>typeof s=="string"?Roll.fromJSON(s):Roll.fromJSON(JSON.stringify(s)))}),u.log("ROLL! A ",[e]),e)}};b(S,"socket"),b(S,"initialize",t=>{Hooks.once(qe.READY,()=>{if(u.log("Attempting to register module..."),typeof socketlib>"u"){u.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled.");return}try{S.socket=socketlib.registerModule(X),t&&t(),u.log("SocketUtil | Module registered",[S.socket])}catch(e){u.log("Problem registering module",[e])}})}),b(S,"registerCall",(t,e)=>{S.socket?(S.socket.register(t,e),u.log("SocketUtil - Registered callback",[S.socket,t])):u.log("SocketUtil - Failed to register callback (socket not initialized)",[S.socket,t])}),b(S,"sendMessage",(t,e)=>{u.log("SocketUtil - sendMessage",[t]),e&&e()}),b(S,"execAsGM",async(t,...e)=>{if(!S.socket){u.log("SocketUtil - Socket not initialized. Cannot execute as GM.");return}return await S.socket.executeAsGM(t,...e)}),b(S,"execForAll",async(t,...e)=>{if(!S.socket){u.log("SocketUtil - Socket not initialized. Cannot execute for all clients.");return}return await S.socket.executeForEveryone(t,...e)}),b(S,"execAsUser",async(t,e,...s)=>{if(!S.socket){u.log("SocketUtil - Socket not initialized. Cannot execute as user.");return}const a=await S.socket.executeAsUser(t,e,...s);return u.log("SocketUtil - Executed as user.",[a]),a});let $=S;const R=class R{static resetRollGetters(t){return t._total=t._evaluateTotal(),t.resetFormula(),t}static replaceTerms(t,e){return t.terms=e.terms,t._total=t._evaluateTotal(),t.resetFormula(),t}static replaceDie(t,e){if(!e||!t)return t;u.log("replaceDie",[e,t]);const s=e.terms.filter(i=>i instanceof Die||i.class==="Die")||[],a=(t==null?void 0:t.terms.filter(i=>!(i instanceof Die||i.class==="Die")))||[];return t.terms=[...s,...a],t._total=t._evaluateTotal(),t.resetFormula(),t}static getDialogSetting(t,e){var i;const s=M(),a=_.get(s.skipRollConfig.tag);if(u.log("getDialogSetting",["skip mode: "+a,U.keysPressed,e]),((i=e.flags)==null?void 0:i["ddb-game-log"])!==void 0)return!1;switch(a){case 1:return U.keysPressed.indexOf("Shift")!=-1;default:return t}}};b(R,"streamlineDDBRoll",async(t,e,s,a,i)=>{u.log("streamlineDDBRoll - A",[a,i]);let r=a,n=i;t&&!game.user.isGM&&(r=$.deserializeFromTransport(a)),n.author=game.user;let l=null,c=game.user,g=s?C.findItemFromActor(n.speaker.actor,e,s):null,d=game.actors.get(n.actor._id);d&&(n.actor=d),u.log("streamlineDDBRoll - B",[n,r,game.messages.get(r.id||r._id)]);let m={},p=r.rolls[0];m.message={flavor:r.flavor,speaker:r.speaker,whisper:r.whisper,user:c,blind:r.blind||C.isPrivateRoll(n.rollMode),rollMode:n.rollMode},m.dialog={configure:!1},m.roll={formula:p.formula,consume:{resources:!1,spellSlot:!1},user:c,rolls:[r.rolls[0]||msgConfig.rolls[0]],flags:{...r.flags,[G]:{processed:!0},dnd5e:{...r.flags.dnd5e},rsr5e:{processed:!0,quickRoll:!1}}},r.flags=m.roll.flags;try{switch(!0){case t===E.toHit.cls:l=F.getActivityFromItem(g,t)??null,await R.triggerAttack(l,r,n,m);break;case t===E.damage.cls:l=F.getActivityFromItem(g,t)??null,await R.triggerDamage(l,r,n,m);break;case(t===E.save.cls||t===E.check.cls):l=null,await R.triggerAbilityTest(t,r,n,m);break;case t===E.heal.cls:l=F.getActivityFromItem(g,t)??null,await R.triggerHeal(l,r,n,m);break;case t===E.custom.cls:l=null,await R.triggerCustomRoll(m,r,s,n);break;default:u.log("streamlineDDBRoll",[t])}}catch(h){return u.error("Error intercepting DDB roll",[h],{ui:!1,console:!0,permanent:!1}),ui.notifications.warn("Could not intercept the DDB roll"),!1}return!0}),b(R,"triggerAttack",async(t,e,s,a)=>{var d;const i=M();let r,n,l,c;const g=C.isModuleOn("midi-qol");if(!t)throw new Error("No associated activity found.");if(a.roll.flags.rsr5e={processed:!0},a.roll.flags.dnd5e.targets=C.getTargetDescriptors({user:a.message.user}),a.roll.flags.dnd5e.roll={type:H.attack},g){if(l=new MidiQOL.Workflow(t.actor,t,e.speaker,a.message.user.targets,{workflowOptions:{attackRollDSN:!1,damageRollDSN:!1}}),n=await t.rollAttack({...a.roll,midiOptions:{workflowOptions:{attackRollDSN:!1,damageRollDSN:!1}}},a.dialog,{create:!1,data:{...a.message}}),n.length<1)return;if(u.log("triggerAttack - rolls",[n[0],e.rolls[0]]),_.get(i.foundryRollModifiers.tag)?n[0]=R.replaceDie(n[0],e.rolls[0]):n[0]=R.replaceTerms(n[0],e.rolls[0]),u.log("triggerAttack - activityRolls",[n,r,l]),r=await t.use({...a.roll,midiOptions:{workflowOptions:{attackRollDSN:!1}}},a.dialog,{create:!0,data:{rolls:[n[0]],user:a.message.user,speaker:a.message.speaker,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`,flags:{rsr5e:a.roll.flags.rsr5e,[G]:{processed:!0,data:{msg:e,msgData:s},rollMode:s.rollMode,cls:e.flags["ddb-game-log"].cls,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`}}}}),r&&u.log("Usage of attack activity was not completed",[t]),r.message.rolls=[n[0]],l.itemCardUuid=r.message.uuid,l.suspended&&l.unSuspend.bind(l)({attackRoll:n[0]}),await l.setAttackRoll(n[0]),["formulaadv","adv"].includes(MidiQOL.configSettings.rollAlternate)&&addAdvAttribution(n[0],l.attackAdvAttribution),await l.setAttackRoll(n[0]),(d=game.modules.get("midi-qol"))==null||d.api,u.log("> MidiQOL API",[MidiQOL]),MidiQOL.configSettings.autoCheckHit!=="none"){await l.displayAttackRoll({GMOnlyAttackRoll:!0}),await l.checkHits(),await l.displayAttackRoll();const m=a.message.rollMode;if(l.whisperAttackCard=MidiQOL.configSettings.autoCheckHit==="whisper"||m===CONST.DICE_ROLL_MODES.BLIND||m===CONST.DICE_ROLL_MODES.PRIVATE,l.aborted)return l.WorkflowState_Abort;await l.displayHits(l.whisperAttackCard)}else await l.displayAttackRoll();u.log("triggerAttack - after use",[r,t.utils])}else{if(c=t.metadata.usage.chatCard,t.metadata.usage.chatCard=`modules/${G}/templates/ddb-attack-info.hbs`,n=await t.rollAttack(a.roll,a.dialog,{create:!1,data:{...a.message}}),n.length<1)return;u.log("triggerAttack - before",[n,e.rolls]),_.get(i.foundryRollModifiers.tag)?n[0]=R.replaceDie(n[0],e.rolls[0]):n[0]=R.replaceTerms(n[0],e.rolls[0]),u.log("triggerAttack - after",[n,e.rolls]),r=await F.ddbglUse(t,a.roll,a.dialog,{create:!1,data:{rolls:[n[0]],user:a.message.user,speaker:a.message.speaker,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`,flags:{rsr5e:a.roll.flags.rsr5e,[G]:{processed:!0,data:{msg:e,msgData:s},rollMode:s.rollMode,cls:e.flags["ddb-game-log"].cls,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`}}}})}if(r.message.flags.dnd5e.targets=C.getTargetDescriptors({user:a.message.user}),r.message.flags=r.message.flags??{},r.message.rolls=n,u.log("triggerAttack - before card",[n,r.message]),!g){const m=await le.create(r.message,{rollMode:s.rollMode});u.log("USAGE RESULTS",[m,r,a.message,t.metadata])}g||(t.metadata.usage.chatCard=c)}),b(R,"triggerDamage",async(t,e,s,a)=>{const i=M(),r=C.isModuleOn("midi-qol");let n,l,c;if(!t)throw new Error("No associated activity found.");if(c=r?t.workflow:null,r)if(!t.attack)u.warn("Damage only roll not implemented");else{if(!c){u.error("Attack workflow not found for damage roll",[t]);return}if(l=await t.rollDamage({...a.roll,midiOptions:{workflowOptions:{damageRollDSN:!1}}},a.dialog,{create:!1,data:{...a.message}}),l.length<1)return;_.get(i.foundryRollModifiers.tag)?l[0]=R.replaceDie(l[0],e.rolls[0]):l[0]=R.replaceTerms(l[0],e.rolls[0]),await c.setDamageRoll(l[0]),await c.WorkflowState_DamageRollComplete(),await c.setDamageRoll(l[0])}else{let g=[];t.attack||(n=await F.ddbglUse(t,a.roll,a.dialog,{create:!1}),await le.create(n.message,{rollMode:s.rollMode})),u.log("triggerDamage A",[a.roll,a.dialog,t,n]);try{g=await t.rollDamage({flags:a.roll.flags,consume:a.roll.consume,formula:a.roll.formula,user:a.roll.user},a.dialog,{create:!1})}catch(d){u.error("triggerDamage B",[d])}if(u.log("triggerDamage - activityRolls",[g]),g.length<1)return;R.replaceTerms(g[0],e.rolls[0]),n||(n={message:a.message}),n.message.rolls=g,n.message.flags=n.message.flags??{},n.message.flags.rsr5e={processed:!0,quickRoll:!1},a.roll.flags.dnd5e.targets=C.getTargetDescriptors({user:a.message.user}),a.roll.flags.dnd5e.roll={type:H.damage},a.message.flags=a.roll.flags,a.message.flags={...a.message,dnd5e:a.roll.flags.dnd5e,rsr5e:a.roll.flags.rsr5e},await g[0].toMessage(a.message,{rollMode:s.rollMode}),t.attack||a.message.user.targets.forEach(d=>{d.control({releaseOthers:!1})}),setTimeout(()=>{C.removeTemplateForItem(t.item)},3e3)}}),b(R,"triggerAbilityTest",async(t,e,s,a)=>{const i=C.parseDDBGLAbility(e.flags["ddb-game-log"].flavor);let r;a.roll.flags.dnd5e.roll={type:t===E.check.cls?"ability":"save"},i&&(a.roll.flags.dnd5e.roll={type:t===E.check.cls?H.abilityCheck:H.abilitySave,ability:i.abbrev}),a.message.flags={dnd5e:a.roll.flags.dnd5e,rsr5e:a.roll.flags.rsr5e},t===E.save.cls?r=await s.actor.rollSavingThrow({ability:i==null?void 0:i.abbrev},a.dialog,{create:!1}):t===E.check.cls&&(r=await s.actor.rollAbilityCheck({ability:i==null?void 0:i.abbrev},a.dialog,{create:!1}),u.log("triggerAbilityTest",[r,a.message])),!(r.length<1)&&(R.replaceTerms(r[0],e.rolls[0]),await r[0].toMessage(a.message,{rollMode:s.rollMode}))}),b(R,"triggerHeal",async(t,e,s,a)=>{let i;if(!t)throw new Error("No associated activity found.");i=await F.ddbglUse(t,a.roll,a.dialog,{create:!1}),u.log("ACTIVITY",[i]),await le.create(i.message,{rollMode:s.rollMode});let r=await t.rollDamage(a.roll,a.dialog,{create:!1,data:{flags:a.message.flags}});r.length<1||(R.replaceTerms(r[0],e.rolls[0]),i||(i={message:a.message}),i.message.rolls=r,i.message.flags=i.message.flags??{},i.message.flags.rsr5e={processed:!0,quickRoll:!1},a.roll.flags.dnd5e.roll={type:H.healing},a.roll.flags.dnd5e.targets=C.getTargetDescriptors({user:a.message.user}),a.message.flags={...a.message,dnd5e:a.roll.flags.dnd5e,rsr5e:a.roll.flags.rsr5e},await r[0].toMessage(a.message,{rollMode:s.rollMode}))}),b(R,"triggerCustomRoll",async(t,e,s,a)=>{t.message={...t.message,dnd5e:{...t.roll.flags.dnd5e},rsr5e:t.roll.flags.rsr5e},await e.rolls[0].toMessage(t.message,{...a})});let se=R;const A=class A{static init(){A.setupKeyListeners(),A.registerHooks()}static addCSSLocalization(){const t="CRLNGN-DDB-BRIDGE.dnd5e.chatCard.buttons";u.log("Test",[game.i18n.translations,game.i18n.translations["CRLNGN-DDB-BRIDGE"]]),u.log(`Full path being requested: ${t}.attack`),game.i18n.has(`${t}.attack`)?u.warn("Key exists"):u.warn(`Missing translation key: ${t}.attack`),C.addCSSVars("--crlngn-i18n-attack",game.i18n.localize(`${t}.attack`)),C.addCSSVars("--crlngn-i18n-damage",game.i18n.localize(`${t}.damage`)),C.addCSSVars("--crlngn-i18n-summons",game.i18n.localize(`${t}.summons`)),C.addCSSVars("--crlngn-i18n-healing",game.i18n.localize(`${t}.healing`)),C.addCSSVars("--crlngn-i18n-template",game.i18n.localize(`${t}.template`)),C.addCSSVars("--crlngn-i18n-consume",game.i18n.localize(`${t}.consume`)),C.addCSSVars("--crlngn-i18n-refund",game.i18n.localize(`${t}.refund`)),C.addCSSVars("--crlngn-i18n-macro",game.i18n.localize(`${t}.macro`)),C.addCSSVars("--crlngn-i18n-save-dc",game.i18n.localize(`${t}.savedc`))}static registerHooks(){$.initialize(()=>{u.log("SocketUtil - initialized with socket",[$.socket,game.system.utils.areKeysPressed])}),Hooks.once(P.INIT,()=>{A.isMidiOn=C.isModuleOn("midi-qol"),u.log("Initiating module",[],!0),document.querySelector("body").classList.add("crlngn-chat"),_.registerSettings(),A.registerActivityHooks(),A.registerRollHooks(),A.registerChatHooks(),A.registerTemplateHooks()}),Hooks.once(P.READY,()=>{if(!game.socket){ui.notifications.error("⚠️ DDB Bridge: Foundry needs to be restarted to enable socket functionality.",{permanent:!0}),u.error("Foundry restart required to enable sockets.");return}_.resetGamelogSettings(),A.registerSocketFunction(),A.addCSSLocalization(),oe.init()}),Hooks.on(P.CLOSE_SETTINGS_CONFIG,()=>{_.resetGamelogSettings()})}static registerSocketFunction(){$.registerCall("DDBRoll",se.streamlineDDBRoll)}static registerActivityHooks(){Hooks.on(D.PRE_USE_ACTIVITY,dt),Hooks.on(D.POST_USE_ACTIVITY,ut)}static registerRollHooks(){Hooks.on(D.ROLL_ATTACK_V2,Ct),Hooks.on(D.ROLL_DAMAGE_V2,Tt),Hooks.on(D.PRE_ROLL_V2,ft),Hooks.on(D.PRE_ROLL_ATTACK_V2,yt),Hooks.on(D.PRE_ROLL_DAMAGE_V2,bt),Hooks.on(D.PRE_ROLL_SAVING_THROW,ht)}static registerChatHooks(){Hooks.on(D.RENDER_CHAT_MESSAGE,pt),Hooks.on(P.PRE_CREATE_CHAT_MESSAGE,gt),Hooks.on(P.CREATE_CHAT_MESSAGE,mt)}static registerTemplateHooks(){Hooks.on(P.REFRESH_MEASURED_TEMPLATE,Et)}static setupKeyListeners(){window.addEventListener("keydown",t=>{const e=t.key;A.keysPressed.indexOf(e)<0&&A.keysPressed.push(e)}),window.addEventListener("keyup",t=>{const e=t.key,s=A.keysPressed.indexOf(e);s>=0&&A.keysPressed.splice(s,1)})}};b(A,"keysPressed",[]),b(A,"isMidiOn",!1),b(A,"areKeysPressed");let U=A;const dt=async(o,t,e,s)=>(u.log(D.PRE_USE_ACTIVITY,[t,e,s,U.keysPressed]),!0),ut=async(o,t,e)=>(u.log(D.POST_USE_ACTIVITY,[o,t,e]),!0),gt=(o,t,e,s)=>{var m,p,h,f,y;const a=M();let i=!1,r,n,l,c,g=!1,d=o;if(n=C.isModuleOn("ddb-game-log")&&((m=o.getFlag("ddb-game-log","cls"))==null?void 0:m.toLowerCase())||"",g=o.getFlag(G,"processed")||!1,u.log(P.PRE_CREATE_CHAT_MESSAGE,[n,d,t,e]),n&&!g)if(r=t.actor||game.actors.get(t.speaker.actor)||null,l=((h=(p=t.flags)==null?void 0:p["ddb-game-log"])==null?void 0:h.itemId)||"",d.rolls=d.rolls&&d.rolls.length>0?[d.rolls[0]]:[t.rolls[0]],r){i=!0,d.flags={...d.flags,...t.flags},d.flags[G]&&(d.flags[G].processed=!0,g=!0);const T=document.createElement("div");T.innerHTML=t.flavor;let k=(f=T==null?void 0:T.querySelector("span:first-child"))==null?void 0:f.innerHTML.replace(":","");if(c=k?C.findItemFromActor(t.speaker.actor,l,k):null,!c&&(n===E.toHit.cls||n===E.damage.cls||n===E.heal.cls))return u.error("Could not find an item for the roll",[n,k,r.items]),!0;{const w=C.getUserFromActor((y=d.speaker)==null?void 0:y.actor),z=_.get(a.ddbRollOwnership.tag)==2;if(w&&z){u.log("Main - Before serialization",[d]);const B=$.serializeForTransport(d);u.log("Main - After serialization",[B]),u.log("CHECK ROLL",[z,w,B,t]),$.execAsUser("DDBRoll",w.id,n,l,k,B,t)}else u.log("Main - No serialization",[d]),se.streamlineDDBRoll(n,l,k,d,t)}}else return u.warn("Could not find the actor from DDB Gamelog roll"),!0;return!i||g},mt=(o,t,e)=>{u.log(P.CREATE_CHAT_MESSAGE,[o,t,e])},pt=(o,t)=>{u.log(D.RENDER_CHAT_MESSAGE,[o,t]),oe.enrichCard(o,t)},ft=(o,t,e)=>{u.log(D.PRE_ROLL_V2,[o,t,e]),t.configure=se.getDialogSetting(t.configure,o)},ht=(o,t,e)=>{u.log(D.PRE_ROLL_SAVING_THROW,[o,t,e])},yt=(o,t,e)=>(u.log(D.PRE_ROLL_ATTACK_V2,[e,t,o]),!0),bt=(o,t,e)=>(u.log(D.PRE_ROLL_DAMAGE_V2,[o,t,e,U.keysPressed]),!0),Tt=(o,t,e)=>{u.log(D.ROLL_DAMAGE_V2,[game])},Ct=async(o,t,e,s)=>{u.log(D.ROLL_ATTACK_V2,[o,t,e,s]),C.isModuleOn("midi-qol")&&u.log(D.ROLL_ATTACK_V2,[MidiQOL.getWorkflow])},Et=(o,t)=>{var a;if(!o.isOwner)return;const e=_.get("template-auto-target");let s=3;switch(e){case 1:s=3;break;case 2:s=0;break;default:return}(a=canvas.tokens.placeables[0])==null||a.setTarget(!1,{releaseOthers:!0});for(let i of canvas.tokens.placeables)i.document.disposition<=s&&o.shape.contains(i.center.x-o.x,i.center.y-o.y)&&i.setTarget(!i.isTargeted,{releaseOthers:!1})};U.init();
//# sourceMappingURL=module.js.map
