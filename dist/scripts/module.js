var Y=Object.defineProperty;var j=(d,e,t)=>e in d?Y(d,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):d[e]=t;var R=(d,e,t)=>j(d,typeof e!="symbol"?e+"":e,t);const f={toHit:{prop:"toHit",cls:"to hit",actionType:"attack",rollType:"attack"},damage:{prop:"damage",cls:"damage",actionType:"damage",rollType:"damage"},heal:{prop:"heal",cls:"heal",actionType:"heal",rollType:"heal"},save:{prop:"save",cls:"save",actionType:"save",rollType:"ability"},check:{prop:"check",cls:"check",actionType:"check",rollType:"ability"},custom:{prop:"custom",cls:"roll",actionType:"roll",rollType:"custom"},cast:{prop:"cast",cls:"cast",actionType:"cast",rollType:"cast"}},V="crlngn-ddb-bridge",H="crlngn-ddb-bridge",z=["%cDDB Gamelog Tweaks","color: #003377; font-weight: bold;","|"],I={abilityCheck:"ability",abilitySave:"save",attack:"attack",check:"check",concentration:"concentration",damage:"damage",deathSave:"death",formula:"formula",healing:"heal",custom:"roll",skillCheck:"skill",toolCheck:"tool"},W=[{abbrev:"str",name:"strength"},{abbrev:"dex",name:"dexterity"},{abbrev:"con",name:"constitution"},{abbrev:"int",name:"intelligence"},{abbrev:"wis",name:"wisdom"},{abbrev:"cha",name:"charisma"}],w={CHAT_MESSAGE:"chatMessage",INIT:"init",READY:"ready",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage",CREATE_CHAT_MESSAGE:"createChatMessage",RENDER_CHAT_MESSAGE:"renderChatMessage",CREATE_MEASURED_TEMPLATE:"createMeasuredTemplate",REFRESH_MEASURED_TEMPLATE:"refreshMeasuredTemplate",CLOSE_SETTINGS_CONFIG:"closeSettingsConfig",RENDER_ROLL_RESOLVER:"renderRollResolver"},S={PRE_ROLL_V2:"dnd5e.preRollV2",PRE_ROLL_ABILITY_TEST:"dnd5e.preRollAbilityTest",PRE_ROLL_ABILITY_SAVE:"dnd5e.preRollAbilitySave",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrow",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_CLASS_HIT_POINTS:"dnd5e.preRollClassHitPoints",PRE_ROLL_CONCENTRATION:"dnd5e.preRollConcentration",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",PRE_ROLL_DEATH_SAVE:"dnd5e.preRollDeathSave",PRE_ROLL_FORMULA_V2:"dnd5e.preRollFormulaV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_NPC_HIT_POINTS:"dnd5e.preRollNPCHitPoints",PRE_ROLL_RECHARGE_V2:"dnd5e.preRollRechargeV2",PRE_ROLL_SKILL:"dnd5e.preRollSkill",PRE_ROLL_TOOL_CHECK:"dnd5e.preRollToolCheck",PRE_USE_ITEM:"dnd5e.preUseItem",ROLL_ABILITY_TEST:"dnd5e.rollAbilityTest",ROLL_ABILITY_SAVE:"dnd5e.rollAbilitySave",ROLL_ATTACK_V2:"dnd5e.rollAttackV2",ROLL_CLASS_HIT_POINTS:"dnd5e.rollClassHitPoints",ROLL_CONCENTRATION:"dnd5e.rollConcentration",ROLL_DEATH_SAVE:"dnd5e.rollDeathSave",ROLL_DAMAGE_V2:"dnd5e.rollDamageV2",ROLL_FORMULA_V2:"dnd5e.rollFormulaV2",ROLL_HIT_DIE_V2:"dnd5e.rollHitDieV2",ROLL_INITIATIVE:"dnd5e.rollInitiative",ROLL_NPC_HIT_POINTS:"dnd5e.rollNPCHitPoints",ROLL_RECHARGE_V2:"dnd5e.rollRechargeV2",ROLL_SKILL:"dnd5e.rollSkill",ROLL_TOOL_CHECK:"dnd5e.rollToolCheck",DISPLAY_CARD:"dnd5e.preDisplayCardV2",PRE_DISPLAY_CARD_V2:"dnd5e.preDisplayCardV2",RENDER_CHAT_MESSAGE:"dnd5e.renderChatMessage",PRE_LONG_REST:"dnd5e.preLongRest",PRE_REST_COMPLETED:"dnd5e.preRestCmpleted",PRE_SHORT_REST:"dnd5e.preShortRest",REST_COMPLETED:"dnd5e.restCmpleted",ACTIVITY_CONSUMPTION:"dnd5e.activityConsumption",POST_ACTIVITY_CONSUMPTION:"dnd5e.postActivityConsumption",POST_CREATE_USAGE_MESSAGE:"dnd5e.postCreateUsageMessage",POST_USE_ACTIVITY:"dnd5e.postUseActivity",PRE_ACTIVITY_CONSUMPTION:"dnd5e.preActivityConsumption",PRE_CREATE_USAGE_MESSAGE:"dnd5e.preCreateUsageMessage",PRE_USE_ACTIVITY:"dnd5e.preUseActivity"},J={READY:"socketlib.ready"},_={select:"select",checkbox:"checkbox"},M={client:"client",world:"world"};function D(){return{enableChatStyles:{tag:"enable-chat-styles",label:game.i18n.localize("CRLNGN.settings.enableChatStyles.label"),hint:game.i18n.localize("CRLNGN.settings.enableChatStyles.hint"),propType:Boolean,inputType:_.checkbox,default:!0,scope:M.client,config:!0,requiresReload:!0},ddbRollOwnership:{tag:"ddb-roll-ownership",label:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.label"),hint:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.choices.gm.label"),2:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.choices.player.label")},inputType:_.select,default:2,scope:M.world,config:!0},foundryRollModifiers:{tag:"foundry-roll-modifiers",label:game.i18n.localize("CRLNGN.settings.foundryRollModifiers.label"),hint:game.i18n.localize("CRLNGN.settings.foundryRollModifiers.hint"),propType:Boolean,inputType:_.checkbox,default:!0,scope:M.world,config:!0},forceDDBGL:{tag:"force-ddbgl-settings",label:game.i18n.localize("CRLNGN.settings.forceDDBGL.label"),hint:game.i18n.localize("CRLNGN.settings.forceDDBGL.hint"),propType:Boolean,inputType:_.checkbox,default:!0,scope:M.world,config:!0},removeTemplate:{tag:"remove-template",label:game.i18n.localize("CRLNGN.settings.removeTemplate.label"),hint:game.i18n.localize("CRLNGN.settings.removeTemplate.hint"),propType:Boolean,inputType:_.checkbox,default:!0,scope:M.world,config:!0},templateAutoTarget:{tag:"template-auto-target",label:game.i18n.localize("CRLNGN.settings.templateAutoTarget.label"),hint:game.i18n.localize("CRLNGN.settings.templateAutoTarget.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.all.label"),2:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.notFriendly.label"),3:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.none.label")},inputType:_.checkbox,default:!0,scope:M.world,config:!0},skipRollConfig:{tag:"skip-roll-config",label:game.i18n.localize("CRLNGN.settings.skipRollConfig.label"),hint:game.i18n.localize("CRLNGN.settings.skipRollConfig.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.skipRollConfig.choices.all.label"),2:game.i18n.localize("CRLNGN.settings.skipRollConfig.choices.ddbgl.label")},inputType:_.select,default:1,scope:M.world,config:!0},debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN.settings.debugMode.hint"),propType:Boolean,inputType:_.checkbox,default:!0,scope:M.client,config:!0}}}const $=class ${static log(e="",t=[],a=!1){try{const s=$.debugOn;if(!(a||s))return;console.log(...z,e,...t)}catch{console.log(...z,e,...t)}}static warn(e="",t=[]){console.warn(...z,e,...t)}static error(e="",t=[],a={ui:!1,console:!0,permanent:!1}){var s;console.log(...z,e,t,a),a.ui&&((s=ui.notifications)==null||s.error(e,{permanent:a.permanent})),a.console&&console.error(...z,e,...t)}};R($,"debugOn",!1);let o=$;class p{static getTargets(e){let t=game.users.find(s=>s.isGM===!0),a=e.targets||t.targets;return new Set([...a])}static getActorFromItem(e){const t=e.split(".")[1];return game.actors.get(t)}static isModuleOn(e){var a;const t=(a=game.modules)==null?void 0:a.get(e);return!!(t!=null&&t.active)}static parseDDBGLAbility(e){let t=null;const a=`${e}`;return W.forEach(s=>{a.toLowerCase().includes(s.name)&&(t=s)}),t}static isPrivateRoll(e){return e===CONST.DICE_ROLL_MODES.BLIND||e===CONST.DICE_ROLL_MODES.PRIVATE}static removeTemplateForItem(e){o.log("removeTemplateForItem - A",[e]);const t=A.get("remove-template");if(o.log("removeTemplateForItem - B",[t]),!t)return;const a=canvas.templates.objects.children.filter(s=>s.document.flags.dnd5e.item===(e==null?void 0:e.uuid));canvas.scene.deleteEmbeddedDocuments("MeasuredTemplate",a.map(s=>s.id))}static getUserFromActor(e){let t;if(!e)return null;const a=e?game.actors.get(e):null;return t=game.users.players.find(l=>l.active===!0&&l.character.id===e),t||game.users.players.forEach(l=>{l.active&&a.testUserPermission(l,foundry.CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,{exact:!0})&&(t=l)}),o.log("getUserFromActor",[e,t]),t}static html(e,t){return e.querySelector(t)}}R(p,"getClientTargets",()=>{if(!game.user)return[];const e=Array.from(game.user.targets);return o.log("Selected Targets",[game.user.id,e,e.filter(t=>t.actor)]),e}),R(p,"getTargetDescriptors",()=>{var t,a;const e=new Map;for(const s of game.user.targets){const{name:l}=s,{img:r,system:n,uuid:i,statuses:u}=s.actor??{};if(i){const c=u.has("coverTotal")?null:(a=(t=n.attributes)==null?void 0:t.ac)==null?void 0:a.value;e.set(i,{name:l,img:r,uuid:i,ac:c??null})}}return Array.from(e.values())}),R(p,"findItemFromActor",(e,t,a)=>{const s=game.actors.get(e);if(o.log("findItemFromActor",[t,a]),!s)return null;let l=t?s.items.find(r=>r.id===t):null;return l||(l=a?s.items.find(r=>r.name.toLowerCase()===a.toLowerCase()):null,l||(l=s.items.find(r=>r.name.toLowerCase()===(a+" (Legacy)").toLowerCase()))),l}),R(p,"addCSSVars",(e,t)=>{let a=document.querySelector("#crlngn-ddbgl-chat-vars");if(!a){const m=document.querySelector("body");a=document.createElement("style"),a.id="crlngn-ddbgl-chat-vars",a.textContent=`body.crlngn-ddbgl-chat {
}
`,m.prepend(a)}let s=a.textContent,l=s.indexOf("body.crlngn-ddbgl-chat {"),r=s.indexOf("}",l);l===-1&&(s=`body.crlngn-ddbgl-chat {
}
`,l=0,r=s.indexOf("}"));const i=s.substring(l+24,r).split(";").map(m=>m.trim()).filter(m=>m!==""),u={};i.forEach(m=>{const E=m.split(":");if(E.length>=2){const C=E[0].trim(),L=E.slice(1).join(":").trim();C&&(u[C]=L)}}),e.includes("i18n")&&typeof t=="string"&&!t.startsWith('"')&&!t.startsWith("'")&&!t.match(/^url\(|^rgba?\(|^hsla?\(/)&&(t=`"${t}"`),u[e]=t;const c=Object.entries(u).map(([m,E])=>`  ${m}: ${E};`).join(`
`),g=s.substring(0,l)+`body.crlngn-ddbgl-chat {
`+c+`
}`+s.substring(r+1);a.textContent=g});const b=class b{static registerSettings(){const e=D();document.querySelector("body").classList.add(H),Object.entries(e).forEach(async a=>{const s=a[1];o.log("Registering... ",[a]);const l={name:s.label,hint:s.hint,default:s.default,type:s.propType,scope:s.scope,config:s.config,requiresReload:s.requiresReload||!1,onChange:r=>b.apply(s.tag,r)};s.choices&&(l.choices=s.choices),await game.settings.register(V,s.tag,l),b.get(s.tag)===void 0&&b.set(s.tag,s.default),o.log("registerSettings",[s.tag,b.get(s.tag)])}),b.get(e.enableChatStyles.tag)?game.version.startsWith("12")?document.querySelector("body").classList.add("v12"):game.version.startsWith("13")&&document.querySelector("body").classList.add("v13"):document.querySelector("body").classList.remove("crlngn-ddbgl-chat"),b.applyDebugSettings()}static get(e,t=V){if(!e)return null;let a=!1;if(t===V)a=game.settings.get(t,e);else{let l=game.settings.storage.get("client")[`${t}.${e}`];l===void 0&&(l=game.settings.storage.get("world").getSetting(`${t}.${e}`)),a=l==null?void 0:l.value,o.log("GET Setting",[l,a])}return a}static set(e,t,a=V){if(!e)return!1;let s=game.settings.storage.get("client")[`${a}.${e}`];s||(s=game.settings.storage.get("world").getSetting(`${a}.${e}`));try{s&&s.update({value:t}),o.log("Able to change setting",[e,s])}catch{o.log("Unable to change setting",[e,s])}return!0}static apply(e,t){const a=D();switch(e){case a.forceDDBGL.tag:b.resetGamelogSettings();break;case a.debugMode.tag:b.applyDebugSettings();break}}static resetGamelogSettings(){const e=D();if(!p.isModuleOn("ddb-game-log"))return;const a=b.get("enable_chatcards","ddb-game-log"),s=b.get(e.forceDDBGL.tag);o.log("resetGamelogSettings",[a,s]),!a&&s&&b.set("enable_chatcards",!0,"ddb-game-log")}static applyDebugSettings(e){const t=D();o.debugOn=e||b.get(t.debugMode.tag)}};R(b,"currSettings");let A=b;const F=class F{static init(){const e=D();F.chatMsgSettings=A.get(e.enableChatStyles.tag)}static enrichCard(e,t){var s,l,r,n,i,u,c,g;t.classList.remove("ddb-game-log-open-card");const a=F.chatMsgSettings;if(a){const m=((r=(l=(s=e.flags)==null?void 0:s.dnd5e)==null?void 0:l.activity)==null?void 0:r.type)||((u=(i=(n=e.flags)==null?void 0:n.dnd5e)==null?void 0:i.roll)==null?void 0:u.type)||"custom";let E=t.get?t.get(0):t;E.classList.add("crlngn"),E.classList.add(m),o.log("enrichCard",[a.borderColor,(c=e.author)==null?void 0:c.id]),(g=a.flags)!=null&&g["ddb-game-log"]&&t.classList.add("ddbgl");const C=E.querySelectorAll(".card-buttons button[data-action=rollSave]");C.length>0&&C.forEach(L=>{const O=L.querySelector(".visible-dc"),k=L.querySelector(".hidden-dc");o.log("enrichCard",[O,k]),O.setAttribute("data-ability",L.getAttribute("data-ability")||""),O.setAttribute("data-dc",L.getAttribute("data-dc")||""),k.setAttribute("data-ability",L.getAttribute("data-ability")||"")})}}static formatFlavorText(e,t,a){var n,i,u,c;const s=game.actors.get(((n=t.speaker)==null?void 0:n.actor)||"")||null,l=(s==null?void 0:s.items.get(((c=(u=(i=t.flags)==null?void 0:i.dnd5e)==null?void 0:u.item)==null?void 0:c.id)||""))||null;let r=e||"Message";return a===I.attack?(o.log("renderChatMessage",[s,l]),l&&(r='<span class="item-name">'+(l==null?void 0:l.name),r=r+':</span> <span class="tohit">To Hit</span>')):a===I.damage?(o.log("renderChatMessage",[s,l]),l&&(r='<span class="item-name">'+(l==null?void 0:l.name),r=r+':</span> <span class="damage">Damage</span>')):a===I.healing?(o.log("renderChatMessage",[s,l]),l&&(r='<span class="item-name">'+((l==null?void 0:l.name)??"Action"),r=r+':</span> <span class="heal">Heal</span>')):e.includes("Skill Check")?(r='<span class="item-name">'+e,r=r.replace("Skill Check",':</span> <span class="check">Check</span>')):e.includes("Ability Check")?(r='<span class="item-name">'+e,r=r.replace("Ability Check",':</span> <span class="check">Check</span>')):e.includes("Saving Throw")?(r='<span class="item-name">'+e,r=r.replace("Saving Throw",':</span> <span class="save">Save</span>')):(a==="tool"||a==="check")&&e.includes("Check")?(r='<span class="item-name">'+e,r=r.replace("Check",':</span> <span class="check">Check</span>')):l?r=`<span class="item-name">${l.type}</span>`:r||(r='<span class="item-name">Info</span>'),r}};R(F,"chatMsgSettings");let U=F;class N{static getActivityFromItem(e,t){var i;let a=null;if(!e)return a;const s=(i=e.system)==null?void 0:i.activities,l=e.hasAttack,r=e.hasSave;o.log("getActivityFromItem",[s,typeof s,Array.isArray(s)]);const n=u=>{const c=s.find(g=>g.type==u);return o.log("activityByType",[e,u,s.size,c]),c};switch(t){case f.toHit.cls:a=n(f.toHit.actionType);break;case f.damage.cls:l?a=n(f.toHit.actionType):r?a=n(f.save.actionType):a=n(f.damage.actionType);break;case f.check.cls:a=n(f.check.actionType);break;case f.save.cls:a=n(f.save.actionType);break;case f.heal.cls:a=n(f.heal.actionType);break;case f.cast.cls:a=n(f.cast.actionType);break}return a??Array.from(s.keys())[0]??null}static async ddbglUse(e,t={},a={},s={}){var g,m,E,C,L,O;if(!e){ui.notifications.error("No activity found",{localize:!1});return}if(!e.item.isEmbedded||e.item.pack)return;if(!e.item.isOwner){ui.notifications.error("DND5E.DocumentUseWarn",{localize:!0});return}if(!e.canUse){ui.notifications.error("DND5E.ACTIVITY.Warning.UsageNotAllowed",{localize:!0});return}let l=e.item.clone({},{keepId:!0});const r=e._prepareUsageConfig(t);(g=r.create)!=null&&g.measuredTemplate&&((m=ui.notifications)==null||m.info("Click the map to place the template and see the roll. Right click to cancel",{localize:!1}));const n=foundry.utils.mergeObject({configure:!0,applicationClass:e.metadata.usage.dialog},a),i=foundry.utils.mergeObject({create:!0,data:{flags:{dnd5e:{...e.messageFlags,messageType:"usage",use:{effects:(E=e.applicableEffects)==null?void 0:E.map(k=>k.id)}},rsr5e:{processed:!0,quickRoll:!1}}},hasConsumption:r.hasConsumption},s);if(Hooks.call("dnd5e.preUseActivity",e,r,n,i)===!1)return;if(n.configure&&e._requiresConfigurationDialog(r))try{await n.applicationClass.create(e,r,n.options)}catch{return}await e._prepareUsageScaling(r,i,l),e=l.system.activities.get(e.id);const u=await e.consume(r,i);if(u===!1)return;const c={effects:[],templates:[],updates:u};if((C=r.concentration)!=null&&C.begin){const k=await l.actor.beginConcentrating(e,{"flags.dnd5e.scaling":r.scaling});if(k&&(c.effects??(c.effects=[]),c.effects.push(k),foundry.utils.setProperty(i.data,"flags.dnd5e.use.concentrationId",k.id)),(L=r.concentration)!=null&&L.end){const G=await l.actor.endConcentration(r.concentration.end);c.effects.push(...G)}}return i.data.rolls=(i.data.rolls??[]).concat(u.rolls),c.message=await N.createUsageMessage(e,i),o.log("messageConfig",[i,c.message]),c.message.dnd5e=((O=i.flags)==null?void 0:O.dnd5e)??{},c.message.dnd5e.targets=p.getTargetDescriptors({actorId:c.message.speaker.actor}),c.message.flags={...c.message.flags,rsr5e:{processed:!0}},o.log("ddbglUse",[c.message]),await e._finalizeUsage(r,c),Hooks.call("dnd5e.postUseActivity",e,r,c)===!1||r.subsequentActions!==!1&&e._triggerSubsequentActions(r,c),c}static async createUsageMessage(e,t){let a=await e._usageChatContext(t),s=await Q(t.data.rolls);a={...a,rolls:s},o.log("createUsageMessage",[e.metadata.usage.chatCard,a]);const l=foundry.utils.mergeObject({rollMode:game.settings.get("core","rollMode"),data:{content:await renderTemplate(e.metadata.usage.chatCard,a),speaker:ChatMessage.getSpeaker({actor:e.item.actor}),flags:{core:{canPopout:!0},rsr5e:{processed:!0}}}},t);Hooks.callAll("dnd5e.preCreateUsageMessage",e,l),ChatMessage.applyRollMode(l.data,l.rollMode);const r=l.create===!1?l.data:await ChatMessage.create(l.data);return Hooks.callAll("dnd5e.postCreateUsageMessage",e,r),r}}const Q=async(d,e)=>{let t=[];return t=await Promise.all(d.map(async a=>{var i;const s=await a.getTooltip(),l=Number.isNumeric((i=a.options)==null?void 0:i.target),r=l&&a.total>=a.options.target,n=l&&a.total<a.options.target;return{...a,formula:a.formula,total:a.total,tooltipHtml:s,isSuccess:r,isFailure:n,hasTarget:l}})),t},T=class T{static serializeForTransport(e){var a;if(e==null)return e;o.log("Serializing data - Original structure",["Keys:",Object.keys(e||{}),"Has rolls:",!!e.rolls,"Rolls length:",(a=e.rolls)==null?void 0:a.length]);let t={...e};t.rolls&&Array.isArray(t.rolls)&&(o.log("Roll objects before serialization",["Roll count:",t.rolls.length,"Roll types:",t.rolls.map(s=>{var l;return((l=s==null?void 0:s.constructor)==null?void 0:l.name)||typeof s})]),t.rolls=t.rolls.map(s=>{if(s instanceof Roll){let l=s.toJSON();return o.log("Serialized roll",["Original:",s.formula,"Serialized keys:",Object.keys(l)]),l}else return s}));try{JSON.stringify(t),o.log("Data serialized successfully without circular references")}catch(s){o.error("Circular reference detected in data",["Error:",s.message,"Keys with potential circular refs:",Object.keys(t||{})]),t.actor&&o.log("Actor property exists",[typeof t.actor]),t.item&&o.log("Item property exists",[typeof t.item]),t.workflow&&o.log("Workflow property exists",[typeof t.workflow]),t.message&&o.log("Message property exists",[typeof t.message]),t.flags&&o.log("Flags property exists",[typeof t.flags,Object.keys(t.flags||{})]),t.speaker&&o.log("Speaker property exists",[typeof t.speaker,Object.keys(t.speaker||{})])}return t}static deserializeFromTransport(e){var a;o.log("Deserializing data - Received structure",["Data type:",typeof e,"Is null/undefined:",e==null,"Keys:",Object.keys(e||{}),"Has rolls:",!!(e!=null&&e.rolls),"Rolls length:",(a=e==null?void 0:e.rolls)==null?void 0:a.length]);let t={...e};if(!e)return t;if(e.rolls&&e.rolls.length>0){o.log("Roll data before deserialization",["Roll count:",e.rolls.length,"Roll types:",e.rolls.map(s=>typeof s)]);try{const s=t.rolls.map(l=>{let r=l;return typeof l=="string"?r=Roll.fromJSON(l):r=Roll.fromJSON(JSON.stringify(l)),o.log("Deserialized roll",["Result formula:",r.formula,"Result total:",r.total]),r});t.rolls=[...s]}catch(s){o.error("Error deserializing rolls",["Error:",s.message,"Roll data:",e.rolls])}}return t}};R(T,"socket"),R(T,"_activeExecutions",new Map),R(T,"initialize",e=>{Hooks.once(J.READY,()=>{if(o.log("Attempting to register module..."),typeof socketlib>"u"){o.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{T.socket=socketlib.registerModule(V),e&&e(),o.log("SocketUtil | Module registered",[T.socket])}catch(t){o.log("Problem registering module",[t])}})}),R(T,"registerCall",(e,t)=>{T.socket?(T.socket.register(e,t),o.log("SocketUtil - Registered callback",[T.socket,e])):o.log("SocketUtil - Failed to register callback (socket not initialized)",[T.socket,e])}),R(T,"sendMessage",(e,t)=>{o.log("SocketUtil - sendMessage",[e]),t&&t()}),R(T,"execForGMs",async(e,...t)=>{if(!T.socket){o.log("SocketUtil - Socket not initialized. Cannot execute as GM.");return}return await T.socket.executeForAllGMs(e,...t)}),R(T,"execForAll",async(e,...t)=>{if(!T.socket){o.log("SocketUtil - Socket not initialized. Cannot execute for all clients.");return}return await T.socket.executeForEveryone(e,...t)}),R(T,"execForUser",async(e,t,...a)=>{if(!T.socket){o.log("SocketUtil - Socket not initialized. Cannot execute as user.");return}if(t===game.user.id)return o.log("SocketUtil - Preventing recursive call",[t]),null;const s=`${e}-${t}`;if(T._activeExecutions.has(s))return o.log("SocketUtil - Preventing recursive call",[s]),null;T._activeExecutions.set(s,!0);try{const l=await T.socket.executeAsUser(e,t,...a);return o.log("SocketUtil - Executed as user.",[l]),l}catch(l){return o.log("SocketUtil - Error executing as user",[l]),null}finally{T._activeExecutions.delete(s)}});let P=T;const h=class h{static resetRollGetters(e){return e._total=e._evaluateTotal(),e.resetFormula(),e}static replaceTerms(e,t){return e.terms=t.terms,e._total=e._evaluateTotal(),e.resetFormula(),e}static replaceDie(e,t){var l;if(!t||!e)return e;if(o.log("replaceDie",[t,e]),!t.terms)return o.error("replaceDie - replacer.terms is undefined",[t]),e;const a=t.terms.filter(r=>r instanceof Die||r.class==="Die")||[],s=((l=e==null?void 0:e.terms)==null?void 0:l.filter(r=>!(r instanceof Die||r.class==="Die")))||[];return e.terms=[...a,...s],e._total=e._evaluateTotal(),e.resetFormula(),e}static getDialogSetting(e,t){var l;const a=D(),s=A.get(a.skipRollConfig.tag);if(o.log("getDialogSetting",["skip mode: "+s,v.keysPressed,t]),((l=t.flags)==null?void 0:l["ddb-game-log"])!==void 0)return!1;switch(s){case 1:return v.keysPressed.indexOf("Shift")!=-1;default:return e}}};R(h,"streamlineDDBRoll",async(e,t,a,s,l)=>{o.log("streamlineDDBRoll - A",[s,l]);let r=s,n=l;e&&!game.user.isGM&&(r=P.deserializeFromTransport(s)),n.author=game.user;let i=null,u=game.user,c=a?p.findItemFromActor(n.speaker.actor,t,a):null,g=game.actors.get(n.actor._id);g&&(n.actor=g),o.log("streamlineDDBRoll - B",[n,r,game.messages.get(r.id||r._id)]);let m={},E=r.rolls[0];m.message={flavor:r.flavor,speaker:r.speaker,whisper:r.whisper,user:u,blind:r.blind||p.isPrivateRoll(n.rollMode),rollMode:n.rollMode},m.dialog={configure:!1},m.roll={formula:E.formula,consume:{resources:!1,spellSlot:!1},user:u,rolls:[r.rolls[0]],flags:{...r.flags,[H]:{processed:!0},dnd5e:{...r.flags.dnd5e},rsr5e:{processed:!0,quickRoll:!1}}},r.flags=m.roll.flags;try{switch(!0){case e===f.toHit.cls:i=N.getActivityFromItem(c,e)??null,await h.triggerAttack(i,r,n,m);break;case e===f.damage.cls:i=N.getActivityFromItem(c,e)??null,await h.triggerDamage(i,r,n,m);break;case(e===f.save.cls||e===f.check.cls):i=null,await h.triggerAbilityTest(e,r,n,m);break;case e===f.heal.cls:i=N.getActivityFromItem(c,e)??null,await h.triggerHeal(i,r,n,m);break;case e===f.custom.cls:i=null,await h.triggerCustomRoll(m,r,a,n);break;default:o.log("streamlineDDBRoll",[e])}}catch(C){return o.error("Error intercepting DDB roll",[C],{ui:!1,console:!0,permanent:!1}),ui.notifications.warn("Could not intercept the DDB roll"),!1}return!0}),R(h,"triggerAttack",async(e,t,a,s)=>{const l=D();let r,n,i;const u=p.isModuleOn("midi-qol");if(!e)throw new Error("No associated activity found.");const c=p.getTargetDescriptors({user:game.user});if(s.roll.target=c.length===1?c[0].ac:void 0,s.roll.flags.rsr5e={processed:!0},s.roll.flags.dnd5e.roll={type:I.attack},u)o.log("MidiQOL is not supported yet");else{if(i=e.metadata.usage.chatCard,e.metadata.usage.chatCard=`modules/${H}/templates/ddb-attack-info.hbs`,n=await e.rollAttack(s.roll,s.dialog,{create:!1,data:{...s.message}}),n.length<1)return;o.log("triggerAttack - before",[n,t.rolls,p.getTargetDescriptors({user:game.user})]),A.get(l.foundryRollModifiers.tag)?n[0]=h.replaceDie(n[0],t.rolls[0]):n[0]=h.replaceTerms(n[0],t.rolls[0]),o.log("triggerAttack - after",[n,t.rolls]),s.roll.subsequentActions=!1,r=await N.ddbglUse(e,s.roll,s.dialog,{create:!1,data:{rolls:[n[0]],user:s.message.user,speaker:s.message.speaker,flavor:`<span class="crlngn item-name">${e.item.name}:</span> <span class="crlngn ${t.flags["ddb-game-log"].cls.replace(" ","")}">${t.flags["ddb-game-log"].cls}</span>`,flags:{rsr5e:s.roll.flags.rsr5e,[H]:{processed:!0,data:{msg:t,msgData:a},rollMode:a.rollMode,cls:t.flags["ddb-game-log"].cls,flavor:`<span class="crlngn item-name">${e.item.name}:</span> <span class="crlngn ${t.flags["ddb-game-log"].cls.replace(" ","")}">${t.flags["ddb-game-log"].cls}</span>`}}}})}if(r.message.flags=r.message.flags??{},o.log("triggerAttack - before card",[n,r.message]),!u){const g=await ChatMessage.create(r.message,{rollMode:a.rollMode});o.log("USAGE RESULTS",[g,r,s.message,e.metadata])}u||(e.metadata.usage.chatCard=i)}),R(h,"triggerDamage",async(e,t,a,s)=>{var c;const l=D(),r=p.isModuleOn("midi-qol");let n,i,u;if(!e)throw new Error("No associated activity found.");if(u=r?e.workflow:null,r)if(!e.attack)o.warn("Damage only roll not implemented");else{if(!u){o.error("Attack workflow not found for damage roll",[e]);return}if(i=await e.rollDamage({...s.roll,midiOptions:{workflowOptions:{damageRollDSN:!1}}},s.dialog,{create:!1,data:{...s.message}}),i.length<1)return;A.get(l.foundryRollModifiers.tag)?i[0]=h.replaceDie(i[0],t.rolls[0]):i[0]=h.replaceTerms(i[0],t.rolls[0]),await u.setDamageRoll(i[0]),await u.WorkflowState_DamageRollComplete(),await u.setDamageRoll(i[0])}else{let g=[];e.attack||(n=await N.ddbglUse(e,s.roll,s.dialog,{create:!1,data:{flags:{dnd5e:{messageType:"roll",roll:{type:"damage"}}}}}),await ChatMessage.create(n.message,{rollMode:a.rollMode})),o.log("triggerDamage A",[p.getTargetDescriptors()]);try{g=await e.rollDamage({flags:s.roll.flags,consume:s.roll.consume,formula:s.roll.formula,user:s.roll.user},s.dialog,{create:!1,data:{...s.message,flags:{...s.message.flags,dnd5e:{...(c=s.message.flags)==null?void 0:c.dnd5e,targets:p.getTargetDescriptors()}}}})}catch(m){o.error("triggerDamage B",[m])}if(o.log("triggerDamage - activityRolls",[g]),g.length<1)return;h.replaceTerms(g[0],t.rolls[0]),n||(n={message:s.message}),n.message.rolls=g,n.message.flags=n.message.flags??{},n.message.flags.rsr5e={processed:!0,quickRoll:!1},s.roll.flags.dnd5e.roll={type:I.damage},s.message.flags=s.roll.flags,s.message.flags={...s.message,dnd5e:{...s.roll.flags.dnd5e,targets:p.getTargetDescriptors()},rsr5e:s.roll.flags.rsr5e},o.log("triggerDamage - message config",[s.message]),await g[0].toMessage(s.message,{rollMode:a.rollMode}),e.attack||s.message.user.targets.forEach(m=>{m.control({releaseOthers:!1})}),setTimeout(()=>{p.removeTemplateForItem(e.item)},3e3)}}),R(h,"triggerAbilityTest",async(e,t,a,s)=>{const l=p.parseDDBGLAbility(t.flags["ddb-game-log"].flavor);let r;s.roll.flags.dnd5e.roll={type:e===f.check.cls?"ability":"save"},l&&(s.roll.flags.dnd5e.roll={type:e===f.check.cls?I.abilityCheck:I.abilitySave,ability:l.abbrev}),s.message.flags={dnd5e:s.roll.flags.dnd5e,rsr5e:s.roll.flags.rsr5e},e===f.save.cls?r=await a.actor.rollSavingThrow({ability:l==null?void 0:l.abbrev},s.dialog,{create:!1}):e===f.check.cls&&(r=await a.actor.rollAbilityCheck({ability:l==null?void 0:l.abbrev},s.dialog,{create:!1}),o.log("triggerAbilityTest",[r,s.message])),!(r.length<1)&&(h.replaceTerms(r[0],t.rolls[0]),await r[0].toMessage(s.message,{rollMode:a.rollMode}))}),R(h,"triggerHeal",async(e,t,a,s)=>{let l;if(!e)throw new Error("No associated activity found.");l=await N.ddbglUse(e,s.roll,s.dialog,{create:!1}),o.log("ACTIVITY",[l]),await ChatMessage.create(l.message,{rollMode:a.rollMode});let r=await e.rollDamage(s.roll,s.dialog,{create:!1,data:{flags:s.message.flags}});r.length<1||(h.replaceTerms(r[0],t.rolls[0]),l||(l={message:s.message}),l.message.rolls=r,l.message.flags=l.message.flags??{},l.message.flags.rsr5e={processed:!0,quickRoll:!1},s.roll.flags.dnd5e.roll={type:I.healing},s.message.flags={...s.message,dnd5e:s.roll.flags.dnd5e,rsr5e:s.roll.flags.rsr5e},await r[0].toMessage(s.message,{rollMode:a.rollMode}))}),R(h,"triggerCustomRoll",async(e,t,a,s)=>{e.message={...e.message,dnd5e:{...e.roll.flags.dnd5e},rsr5e:e.roll.flags.rsr5e},await t.rolls[0].toMessage(e.message,{...s})});let x=h;const y=class y{static init(){y.setupKeyListeners(),y.registerHooks()}static addCSSLocalization(){const e="CRLNGN.dnd5e.chatCard.buttons";o.log("Test",[game.i18n.translations,game.i18n.translations.CRLNGN]),o.log(`Full path being requested: ${e}.attack`),game.i18n.has(`${e}.attack`)?o.warn("Key exists"):o.warn(`Missing translation key: ${e}.attack`),p.addCSSVars("--crlngn-i18n-attack",game.i18n.localize(`${e}.attack`)),p.addCSSVars("--crlngn-i18n-damage",game.i18n.localize(`${e}.damage`)),p.addCSSVars("--crlngn-i18n-summons",game.i18n.localize(`${e}.summons`)),p.addCSSVars("--crlngn-i18n-healing",game.i18n.localize(`${e}.healing`)),p.addCSSVars("--crlngn-i18n-template",game.i18n.localize(`${e}.template`)),p.addCSSVars("--crlngn-i18n-consume",game.i18n.localize(`${e}.consume`)),p.addCSSVars("--crlngn-i18n-refund",game.i18n.localize(`${e}.refund`)),p.addCSSVars("--crlngn-i18n-macro",game.i18n.localize(`${e}.macro`)),p.addCSSVars("--crlngn-i18n-save-dc",game.i18n.localize(`${e}.savedc`))}static registerHooks(){P.initialize(()=>{o.log("SocketUtil - initialized with socket",[P.socket,game.system.utils.areKeysPressed])}),Hooks.once(w.INIT,()=>{y.isMidiOn=p.isModuleOn("midi-qol"),o.log("Initiating module",[],!0),document.querySelector("body").classList.add("crlngn-ddbgl-chat"),A.registerSettings(),y.registerActivityHooks(),y.registerRollHooks(),y.registerChatHooks(),y.registerTemplateHooks()}),Hooks.once(w.READY,()=>{if(!game.socket){ui.notifications.error("⚠️ DDB Bridge: Foundry needs to be restarted to enable socket functionality.",{permanent:!0}),o.error("Foundry restart required to enable sockets.");return}A.resetGamelogSettings(),y.registerSocketFunction(),y.addCSSLocalization(),U.init()}),Hooks.on(w.CLOSE_SETTINGS_CONFIG,()=>{A.resetGamelogSettings()})}static registerSocketFunction(){P.registerCall("DDBRoll",x.streamlineDDBRoll)}static registerActivityHooks(){Hooks.on(S.PRE_USE_ACTIVITY,X),Hooks.on(S.POST_USE_ACTIVITY,Z)}static registerRollHooks(){Hooks.on(S.ROLL_ATTACK_V2,ie),Hooks.on(S.ROLL_DAMAGE_V2,ne),Hooks.on(S.PRE_ROLL_V2,ae),Hooks.on(S.PRE_ROLL_ATTACK_V2,re),Hooks.on(S.PRE_ROLL_DAMAGE_V2,oe),Hooks.on(S.PRE_ROLL_SAVING_THROW,le)}static registerChatHooks(){Hooks.on(S.RENDER_CHAT_MESSAGE,se),Hooks.on(w.PRE_CREATE_CHAT_MESSAGE,ee),Hooks.on(w.CREATE_CHAT_MESSAGE,te)}static registerTemplateHooks(){Hooks.on(w.REFRESH_MEASURED_TEMPLATE,ce)}static setupKeyListeners(){window.addEventListener("keydown",e=>{const t=e.key;y.keysPressed.indexOf(t)<0&&y.keysPressed.push(t)}),window.addEventListener("keyup",e=>{const t=e.key,a=y.keysPressed.indexOf(t);a>=0&&y.keysPressed.splice(a,1)})}};R(y,"keysPressed",[]),R(y,"isMidiOn",!1),R(y,"areKeysPressed");let v=y;const X=async(d,e,t,a)=>(o.log(S.PRE_USE_ACTIVITY,[e,t,a,v.keysPressed]),!0),Z=async(d,e,t)=>(o.log(S.POST_USE_ACTIVITY,[d,e,t]),!0),ee=(d,e,t,a)=>{var m,E,C,L,O;const s=D();let l=!1,r,n,i,u,c=!1,g=d;if(n=p.isModuleOn("ddb-game-log")&&((m=d.getFlag("ddb-game-log","cls"))==null?void 0:m.toLowerCase())||"",c=d.getFlag(H,"processed")||!1,o.log(w.PRE_CREATE_CHAT_MESSAGE,[n,g,e,t]),n&&!c)if(r=e.actor||game.actors.get(e.speaker.actor)||null,i=((C=(E=e.flags)==null?void 0:E["ddb-game-log"])==null?void 0:C.itemId)||"",g.rolls=g.rolls&&g.rolls.length>0?[g.rolls[0]]:[e.rolls[0]],o.log("onPreCreateChatMessage",[g.flags,e.flags]),r){l=!0,g.flags={...g.flags,...e.flags},g.flags[H]&&(g.flags[H].processed=!0,c=!0);const k=document.createElement("div");k.innerHTML=e.flavor;let G=(L=k==null?void 0:k.querySelector("span:first-child"))==null?void 0:L.innerHTML.replace(":","");if(u=G?p.findItemFromActor(e.speaker.actor,i,G):null,!u&&(n===f.toHit.cls||n===f.damage.cls||n===f.heal.cls))return o.error("Could not find an item for the roll",[n,G,r.items]),!0;{const B=p.getUserFromActor((O=g.speaker)==null?void 0:O.actor),q=A.get(s.ddbRollOwnership.tag)==2;if(o.log("Main - onPreCreateChatMessage",[g,B,q]),B&&q){o.log("Main - Before serialization",[g]);const K=P.serializeForTransport(g);o.log("Main - After serialization",[K]),o.log("CHECK ROLL",[q,B,K,e]),P.execForUser("DDBRoll",B.id,n,i,G,K,e)}else o.log("Main - No serialization",[g]),x.streamlineDDBRoll(n,i,G,g,e)}}else return o.warn("Could not find the actor from DDB Gamelog roll"),!0;return!l||c},te=(d,e,t)=>{o.log(w.CREATE_CHAT_MESSAGE,[d,e,t])},se=(d,e)=>{o.log(S.RENDER_CHAT_MESSAGE,[d,e]),U.enrichCard(d,e)},ae=(d,e,t)=>{o.log(S.PRE_ROLL_V2,[d,e,t]),e.configure=x.getDialogSetting(e.configure,d)},le=(d,e,t)=>{o.log(S.PRE_ROLL_SAVING_THROW,[d,e,t])},re=(d,e,t)=>(o.log(S.PRE_ROLL_ATTACK_V2,[t,e,d]),!0),oe=(d,e,t)=>(o.log(S.PRE_ROLL_DAMAGE_V2,[d,e,t,v.keysPressed]),!0),ne=(d,e,t)=>{o.log(S.ROLL_DAMAGE_V2,[game])},ie=async(d,e,t,a)=>{o.log(S.ROLL_ATTACK_V2,[d,e,t,a]),p.isModuleOn("midi-qol")&&o.log(S.ROLL_ATTACK_V2,[MidiQOL.getWorkflow])},ce=(d,e)=>{var s;if(!d.isOwner)return;const t=A.get("template-auto-target");let a=3;switch(t){case 1:a=3;break;case 2:a=0;break;default:return}(s=canvas.tokens.placeables[0])==null||s.setTarget(!1,{releaseOthers:!0});for(let l of canvas.tokens.placeables)l.document.disposition<=a&&d.shape.contains(l.center.x-d.x,l.center.y-d.y)&&l.setTarget(!l.isTargeted,{releaseOthers:!1})};v.init();
//# sourceMappingURL=module.js.map
