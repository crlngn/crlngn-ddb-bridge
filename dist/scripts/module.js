var Ie=Object.defineProperty;var Pe=Object.getPrototypeOf;var Fe=Reflect.get;var Se=o=>{throw TypeError(o)};var He=(o,t,e)=>t in o?Ie(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var T=(o,t,e)=>He(o,typeof t!="symbol"?t+"":t,e),de=(o,t,e)=>t.has(o)||Se("Cannot "+e);var U=(o,t,e)=>(de(o,t,"read from private field"),e?e.call(o):t.get(o)),q=(o,t,e)=>t.has(o)?Se("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(o):t.set(o,e),B=(o,t,e,a)=>(de(o,t,"write to private field"),a?a.call(o,e):t.set(o,e),e),se=(o,t,e)=>(de(o,t,"access private method"),e);var ke=(o,t,e)=>Fe(Pe(o),e,t);const C={toHit:{prop:"toHit",cls:"to hit",actionType:"attack",rollType:"attack"},damage:{prop:"damage",cls:"damage",actionType:"damage",rollType:"damage"},heal:{prop:"heal",cls:"heal",actionType:"heal",rollType:"heal"},save:{prop:"save",cls:"save",actionType:"save",rollType:"ability"},check:{prop:"check",cls:"check",actionType:"check",rollType:"ability"},custom:{prop:"custom",cls:"roll",actionType:"roll",rollType:"custom"},cast:{prop:"cast",cls:"cast",actionType:"cast",rollType:"cast"}},W="crlngn-ddb-bridge",F="crlngn-ddb-bridge",ae=["%cCarolingian DDB Bridge","color: #003377; font-weight: bold;","|"],P={abilityCheck:"ability",abilitySave:"save",attack:"attack",check:"check",concentration:"concentration",damage:"damage",deathSave:"death",formula:"formula",healing:"heal",custom:"roll",skillCheck:"skill",toolCheck:"tool"},Ge=[{abbrev:"str",name:"strength"},{abbrev:"dex",name:"dexterity"},{abbrev:"con",name:"constitution"},{abbrev:"int",name:"intelligence"},{abbrev:"wis",name:"wisdom"},{abbrev:"cha",name:"charisma"}],N={CHAT_MESSAGE:"chatMessage",INIT:"init",READY:"ready",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage",CREATE_CHAT_MESSAGE:"createChatMessage",RENDER_CHAT_MESSAGE:"renderChatMessage",CREATE_MEASURED_TEMPLATE:"createMeasuredTemplate",REFRESH_MEASURED_TEMPLATE:"refreshMeasuredTemplate",CLOSE_SETTINGS_CONFIG:"closeSettingsConfig"},k={PRE_ROLL_V2:"dnd5e.preRollV2",PRE_ROLL_ABILITY_TEST:"dnd5e.preRollAbilityTest",PRE_ROLL_ABILITY_SAVE:"dnd5e.preRollAbilitySave",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrow",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_CLASS_HIT_POINTS:"dnd5e.preRollClassHitPoints",PRE_ROLL_CONCENTRATION:"dnd5e.preRollConcentration",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",PRE_ROLL_DEATH_SAVE:"dnd5e.preRollDeathSave",PRE_ROLL_FORMULA_V2:"dnd5e.preRollFormulaV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_NPC_HIT_POINTS:"dnd5e.preRollNPCHitPoints",PRE_ROLL_RECHARGE_V2:"dnd5e.preRollRechargeV2",PRE_ROLL_SKILL:"dnd5e.preRollSkill",PRE_ROLL_TOOL_CHECK:"dnd5e.preRollToolCheck",PRE_USE_ITEM:"dnd5e.preUseItem",ROLL_ABILITY_TEST:"dnd5e.rollAbilityTest",ROLL_ABILITY_SAVE:"dnd5e.rollAbilitySave",ROLL_ATTACK_V2:"dnd5e.rollAttackV2",ROLL_CLASS_HIT_POINTS:"dnd5e.rollClassHitPoints",ROLL_CONCENTRATION:"dnd5e.rollConcentration",ROLL_DEATH_SAVE:"dnd5e.rollDeathSave",ROLL_DAMAGE_V2:"dnd5e.rollDamageV2",ROLL_FORMULA_V2:"dnd5e.rollFormulaV2",ROLL_HIT_DIE_V2:"dnd5e.rollHitDieV2",ROLL_INITIATIVE:"dnd5e.rollInitiative",ROLL_NPC_HIT_POINTS:"dnd5e.rollNPCHitPoints",ROLL_RECHARGE_V2:"dnd5e.rollRechargeV2",ROLL_SKILL:"dnd5e.rollSkill",ROLL_TOOL_CHECK:"dnd5e.rollToolCheck",DISPLAY_CARD:"dnd5e.preDisplayCardV2",PRE_DISPLAY_CARD_V2:"dnd5e.preDisplayCardV2",RENDER_CHAT_MESSAGE:"dnd5e.renderChatMessage",PRE_LONG_REST:"dnd5e.preLongRest",PRE_REST_COMPLETED:"dnd5e.preRestCmpleted",PRE_SHORT_REST:"dnd5e.preShortRest",REST_COMPLETED:"dnd5e.restCmpleted",ACTIVITY_CONSUMPTION:"dnd5e.activityConsumption",POST_ACTIVITY_CONSUMPTION:"dnd5e.postActivityConsumption",POST_CREATE_USAGE_MESSAGE:"dnd5e.postCreateUsageMessage",POST_USE_ACTIVITY:"dnd5e.postUseActivity",PRE_ACTIVITY_CONSUMPTION:"dnd5e.preActivityConsumption",PRE_CREATE_USAGE_MESSAGE:"dnd5e.preCreateUsageMessage",PRE_USE_ACTIVITY:"dnd5e.preUseActivity"},$e={READY:"socketlib.ready"},v={select:"select",checkbox:"checkbox"},M={client:"client",world:"world"};function H(){return{enableChatStyles:{tag:"enable-chat-styles",label:game.i18n.localize("CRLNGN.settings.enableChatStyles.label"),hint:game.i18n.localize("CRLNGN.settings.enableChatStyles.hint"),propType:Boolean,inputType:v.checkbox,default:!0,scope:M.client,config:!0,requiresReload:!0},ddbRollOwnership:{tag:"ddb-roll-ownership",label:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.label"),hint:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.choices.gm.label"),2:game.i18n.localize("CRLNGN.settings.ddbRollOwnership.choices.player.label")},inputType:v.select,default:2,scope:M.world,config:!0},foundryRollModifiers:{tag:"foundry-roll-modifiers",label:game.i18n.localize("CRLNGN.settings.foundryRollModifiers.label"),hint:game.i18n.localize("CRLNGN.settings.foundryRollModifiers.hint"),propType:Boolean,inputType:v.checkbox,default:!0,scope:M.world,config:!0},forceDDBGL:{tag:"force-ddbgl-settings",label:game.i18n.localize("CRLNGN.settings.forceDDBGL.label"),hint:game.i18n.localize("CRLNGN.settings.forceDDBGL.hint"),propType:Boolean,inputType:v.checkbox,default:!0,scope:M.world,config:!0},removeTemplate:{tag:"remove-template",label:game.i18n.localize("CRLNGN.settings.removeTemplate.label"),hint:game.i18n.localize("CRLNGN.settings.removeTemplate.hint"),propType:Boolean,inputType:v.checkbox,default:!0,scope:M.world,config:!0},templateAutoTarget:{tag:"template-auto-target",label:game.i18n.localize("CRLNGN.settings.templateAutoTarget.label"),hint:game.i18n.localize("CRLNGN.settings.templateAutoTarget.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.all.label"),2:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.notFriendly.label"),3:game.i18n.localize("CRLNGN.settings.templateAutoTarget.choices.none.label")},inputType:v.checkbox,default:!0,scope:M.world,config:!0},skipRollConfig:{tag:"skip-roll-config",label:game.i18n.localize("CRLNGN.settings.skipRollConfig.label"),hint:game.i18n.localize("CRLNGN.settings.skipRollConfig.hint"),propType:Number,choices:{1:game.i18n.localize("CRLNGN.settings.skipRollConfig.choices.all.label"),2:game.i18n.localize("CRLNGN.settings.skipRollConfig.choices.ddbgl.label")},inputType:v.select,default:1,scope:M.world,config:!0},debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN.settings.debugMode.hint"),propType:Boolean,inputType:v.checkbox,default:!0,scope:M.client,config:!0}}}class L{static getTargets(t){let e=game.users.find(s=>s.isGM===!0),a=t.targets||e.targets;return new Set([...a])}static getActorFromItem(t){const e=t.split(".")[1];return game.actors.get(e)}static isModuleOn(t){var a;const e=(a=game.modules)==null?void 0:a.get(t);return!!(e!=null&&e.active)}static parseDDBGLAbility(t){let e=null;const a=`${t}`;return Ge.forEach(s=>{a.toLowerCase().includes(s.name)&&(e=s)}),e}static isPrivateRoll(t){return t===CONST.DICE_ROLL_MODES.BLIND||t===CONST.DICE_ROLL_MODES.PRIVATE}static removeTemplateForItem(t){p.log("removeTemplateForItem - A",[t]);const e=E.get("remove-template");if(p.log("removeTemplateForItem - B",[e]),!e)return;const a=canvas.templates.objects.children.filter(s=>s.document.flags.dnd5e.item===(t==null?void 0:t.uuid));canvas.scene.deleteEmbeddedDocuments("MeasuredTemplate",a.map(s=>s.id))}static getUserFromActor(t){let e;if(!t)return null;const a=t?game.actors.get(t):null;return e=game.users.players.find(i=>i.active===!0&&i.character.id===t),e||game.users.players.forEach(i=>{i.active&&a.testUserPermission(i,foundry.CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,{exact:!0})&&(e=i)}),p.log("getUserFromActor",[t,e]),e}static html(t,e){return t.querySelector(e)}}T(L,"getClientTargets",()=>{if(!game.user)return[];const t=Array.from(game.user.targets);return p.log("Selected Targets",[game.user.id,t,t.filter(e=>e.actor)]),t}),T(L,"getTargetDescriptors",()=>{var e,a;const t=new Map;for(const s of game.user.targets){const{name:i}=s,{img:r,system:n,uuid:l,statuses:c}=s.actor??{};if(l){const u=c.has("coverTotal")?null:(a=(e=n.attributes)==null?void 0:e.ac)==null?void 0:a.value;t.set(l,{name:i,img:r,uuid:l,ac:u??null})}}return Array.from(t.values())}),T(L,"findItemFromActor",(t,e,a)=>{const s=game.actors.get(t);if(p.log("findItemFromActor",[e,a]),!s)return null;let i=e?s.items.find(r=>r.id===e):null;return i||(i=a?s.items.find(r=>r.name.toLowerCase()===a.toLowerCase()):null,i||(i=s.items.find(r=>r.name.toLowerCase()===(a+" (Legacy)").toLowerCase()))),i});class E{static registerSettings(){const t=H();document.querySelector("body").classList.add(F),Object.entries(t).forEach(async a=>{const s=a[1];p.log("Registering... ",[a]);const i={name:s.label,hint:s.hint,default:s.default,type:s.propType,scope:s.scope,config:s.config,requiresReload:s.requiresReload||!1,onChange:r=>E.apply(s.tag,r)};s.choices&&(i.choices=s.choices),await game.settings.register(W,s.tag,i),E.get(s.tag)===void 0&&E.set(s.tag,s.default),p.log("registerSettings",[s.tag,E.get(s.tag)])}),E.get(t.enableChatStyles.tag)||document.querySelector("body").classList.remove("crlngn-chat")}static get(t,e=W){if(!t)return null;let a=!1;if(e===W)a=game.settings.get(e,t);else{let i=game.settings.storage.get("client")[`${e}.${t}`];i===void 0&&(i=game.settings.storage.get("world").getSetting(`${e}.${t}`)),a=i==null?void 0:i.value,p.log("GET Setting",[i,a])}return a}static set(t,e,a=W){if(!t)return!1;let s=game.settings.storage.get("client")[`${a}.${t}`];s||(s=game.settings.storage.get("world").getSetting(`${a}.${t}`));try{s&&s.update({value:e}),p.log("Able to change setting",[t,s])}catch{p.log("Unable to change setting",[t,s])}return!0}static apply(t,e){const a=H();switch(t){case a.forceDDBGL.tag:E.resetGamelogSettings();break}}static resetGamelogSettings(){const t=H();if(!L.isModuleOn("ddb-game-log"))return;const a=E.get("enable_chatcards","ddb-game-log"),s=E.get(t.forceDDBGL.tag);p.log("resetGamelogSettings",[a,s]),!a&&s&&E.set("enable_chatcards",!0,"ddb-game-log")}}class p{static log(t="",e=[],a=!1){const s=H();try{const i=E.get(s.debugMode.tag);if(!(a||i))return;console.log(...ae,t,...e)}catch{console.log(...ae,t,...e)}}static warn(t="",e=[]){console.warn(...ae,t,...e)}static error(t,e=[],a={ui:!1,console:!0,permanent:!1}){var s;a.ui&&((s=ui.notifications)==null||s.error(t,{localize:!0,permanent:a.permanent})),a.console&&console.error(...ae,t,...e)}}class ze{static enrichCard(t,e){var s,i,r,n,l,c,u;const a=H();if(e.classList.remove("ddb-game-log-open-card"),E.get(a.enableChatStyles.tag)){const d=((r=(i=(s=t.flags)==null?void 0:s.dnd5e)==null?void 0:i.activity)==null?void 0:r.type)||((c=(l=(n=t.flags)==null?void 0:n.dnd5e)==null?void 0:l.roll)==null?void 0:c.type)||"custom";let m=e.get?e.get(0):e;const g="CRLNGN_UI.dnd5e.chatCard.buttons";m.style.setProperty("--crlngn-i18n-attack",game.i18n.localize(`${g}.attack`)),m.style.setProperty("--crlngn-i18n-damage",game.i18n.localize(`${g}.damage`)),m.style.setProperty("--crlngn-i18n-summons",game.i18n.localize(`${g}.summons`)),m.style.setProperty("--crlngn-i18n-healing",game.i18n.localize(`${g}.healing`)),m.style.setProperty("--crlngn-i18n-template",game.i18n.localize(`${g}.template`)),m.style.setProperty("--crlngn-i18n-consume",game.i18n.localize(`${g}.consume`)),m.style.setProperty("--crlngn-i18n-refund",game.i18n.localize(`${g}.refund`)),m.style.setProperty("--crlngn-i18n-macro",game.i18n.localize(`${g}.macro`)),m.style.setProperty("--crlngn-i18n-save-dc",game.i18n.localize(`${g}.savedc`)),m.classList.add("crlngn"),m.classList.add(d)}(u=t.flags)!=null&&u["ddb-game-log"]&&e.classList.add("ddbgl")}static formatFlavorText(t,e,a){var n,l,c,u;const s=game.actors.get(((n=e.speaker)==null?void 0:n.actor)||"")||null,i=(s==null?void 0:s.items.get(((u=(c=(l=e.flags)==null?void 0:l.dnd5e)==null?void 0:c.item)==null?void 0:u.id)||""))||null;let r=t||"Message";return a===P.attack?(p.log("renderChatMessage",[s,i]),i&&(r='<span class="item-name">'+(i==null?void 0:i.name),r=r+':</span> <span class="tohit">To Hit</span>')):a===P.damage?(p.log("renderChatMessage",[s,i]),i&&(r='<span class="item-name">'+(i==null?void 0:i.name),r=r+':</span> <span class="damage">Damage</span>')):a===P.healing?(p.log("renderChatMessage",[s,i]),i&&(r='<span class="item-name">'+((i==null?void 0:i.name)??"Action"),r=r+':</span> <span class="heal">Heal</span>')):t.includes("Skill Check")?(r='<span class="item-name">'+t,r=r.replace("Skill Check",':</span> <span class="check">Check</span>')):t.includes("Ability Check")?(r='<span class="item-name">'+t,r=r.replace("Ability Check",':</span> <span class="check">Check</span>')):t.includes("Saving Throw")?(r='<span class="item-name">'+t,r=r.replace("Saving Throw",':</span> <span class="save">Save</span>')):(a==="tool"||a==="check")&&t.includes("Check")?(r='<span class="item-name">'+t,r=r.replace("Check",':</span> <span class="check">Check</span>')):i?r=`<span class="item-name">${i.type}</span>`:r||(r='<span class="item-name">Info</span>'),r}}class I{static getActivityFromItem(t,e){var l;let a=null;if(!t)return a;const s=(l=t.system)==null?void 0:l.activities,i=t.hasAttack,r=t.hasSave;p.log("getActivityFromItem",[s,typeof s,Array.isArray(s)]);const n=c=>{const u=s.find(d=>d.type==c);return p.log("activityByType",[t,c,s.size,u]),u};switch(e){case C.toHit.cls:a=n(C.toHit.actionType);break;case C.damage.cls:i?a=n(C.toHit.actionType):r?a=n(C.save.actionType):a=n(C.damage.actionType);break;case C.check.cls:a=n(C.check.actionType);break;case C.save.cls:a=n(C.save.actionType);break;case C.heal.cls:a=n(C.heal.actionType);break;case C.cast.cls:a=n(C.cast.actionType);break}return a??Array.from(s.keys())[0]??null}static async ddbglUse(t,e={},a={},s={},i=!1){var m,g,y,f,h,b;if(!t){ui.notifications.error("No activity found",{localize:!1});return}if(!t.item.isEmbedded||t.item.pack)return;if(!t.item.isOwner){ui.notifications.error("DND5E.DocumentUseWarn",{localize:!0});return}if(!t.canUse){ui.notifications.error("DND5E.ACTIVITY.Warning.UsageNotAllowed",{localize:!0});return}let r=t.item.clone({},{keepId:!0});const n=t._prepareUsageConfig(e);(m=n.create)!=null&&m.measuredTemplate&&((g=ui.notifications)==null||g.info("Click the map to place the template and see the roll. Right click to cancel",{localize:!1}));const l=foundry.utils.mergeObject({configure:!0,applicationClass:t.metadata.usage.dialog},a),c=foundry.utils.mergeObject({create:!0,data:{flags:{dnd5e:{...t.messageFlags,messageType:"usage",use:{effects:(y=t.applicableEffects)==null?void 0:y.map(S=>S.id)}},rsr5e:{processed:!0,quickRoll:!1}}},hasConsumption:n.hasConsumption},s);if(Hooks.call("dnd5e.preUseActivity",t,n,l,c)===!1)return;await t._prepareUsageScaling(n,c,r),t=r.system.activities.get(t.id);const u=await t.consume(n,c);if(u===!1)return;const d={effects:[],templates:[],updates:u};if((f=n.concentration)!=null&&f.begin){const S=await r.actor.beginConcentrating(t,{"flags.dnd5e.scaling":n.scaling});if(S&&(d.effects??(d.effects=[]),d.effects.push(S),foundry.utils.setProperty(c.data,"flags.dnd5e.use.concentrationId",S.id)),(h=n.concentration)!=null&&h.end){const _=await r.actor.endConcentration(n.concentration.end);d.effects.push(..._)}}return c.data.rolls=(c.data.rolls??[]).concat(u.rolls),d.message=await I.createUsageMessage(t,c),p.log("messageConfig",[s,d.message]),d.message.dnd5e=((b=c.flags)==null?void 0:b.dnd5e)??{},d.message.dnd5e.targets=L.getTargetDescriptors({actorId:d.message.speaker.actor}),d.message.flags={...d.message.flags,rsr5e:{processed:!0}},await t._finalizeUsage(n,d),Hooks.call("dnd5e.postUseActivity",t,n,d)===!1||i&&t._triggerSubsequentActions&&t._triggerSubsequentActions(n,d),d}static async createUsageMessage(t,e){let a=await t._usageChatContext(e),s=await xe(e.data.rolls);a={...a,rolls:s},p.log("createUsageMessage",[t.metadata.usage.chatCard,a]);const i=foundry.utils.mergeObject({rollMode:game.settings.get("core","rollMode"),data:{content:await renderTemplate(t.metadata.usage.chatCard,a),speaker:ChatMessage.getSpeaker({actor:t.item.actor}),flags:{core:{canPopout:!0},rsr5e:{processed:!0}}}},e);Hooks.callAll("dnd5e.preCreateUsageMessage",t,i),ChatMessage.applyRollMode(i.data,i.rollMode);const r=i.create===!1?i.data:await ChatMessage.create(i.data);return Hooks.callAll("dnd5e.postCreateUsageMessage",t,r),r}}const xe=async(o,t)=>{let e=[];return e=await Promise.all(o.map(async a=>{const s=await a.getTooltip();return{...a,formula:a.formula,total:a.total,tooltipHtml:s}})),e},{OperatorTerm:Ae,RollTerm:Ve}=foundry.dice.terms;function ue(o,{respectProperties:t}={}){const e=(i,r=[])=>[i,...t?Array.from(r).sort():[]].join(),a=new Map;for(const i of o){if(!i._evaluated)throw new Error("Only evaluated rolls can be aggregated.");for(const r of Ue(i.terms,i.options.type)){const n=e(r.type,i.options.properties);a.has(n)||a.set(n,{type:r.type,properties:new Set,terms:[]});const l=a.get(n);l.terms.push(new Ae({operator:r.negative?"-":"+"}),...r.terms),i.options.properties&&(l.properties=l.properties.union(new Set(i.options.properties)))}}const s=[];for(const i of a.values()){const r=new CONFIG.Dice.DamageRoll;r.terms=i.terms,r._total=r._evaluateTotal(),r._evaluated=!0,r.options={type:i.type,properties:Array.from(i.properties)},r.resetFormula(),s.push(r)}return s}function Ue(o,t){var n;const e=()=>{i.type??(i.type=t),s.push(i),i=null,r=!1},a=l=>l in CONFIG.DND5E.damageTypes||l in CONFIG.DND5E.healingTypes,s=[];let i,r=!1;for(let l of o){if(l instanceof Ae&&["+","-"].includes(l.operator)){i&&e(),l.operator==="-"&&(r=!r);continue}l=Ve.fromData(foundry.utils.deepClone(l.toJSON())),i??(i={terms:[],negative:r,type:null}),i.terms.push(l);const c=(n=l.flavor)==null?void 0:n.toLowerCase().trim();a(c)&&(i.type??(i.type=c),l.options.flavor="")}return i&&e(),s}const{HandlebarsApplicationMixin:qe}=foundry.applications.api;function Be(o){class t extends qe(o){get subtitle(){return game.i18n.localize(this.options.window.subtitle??"")}_initializeApplicationOptions(a){const s=super._initializeApplicationOptions(a);return s.uniqueId=s.uniqueId.replace(/\./g,"-"),s}_configureRenderOptions(a){var s;super._configureRenderOptions(a),a.isFirstRender&&this.hasFrame&&(a.window||(a.window={}),(s=a.window).subtitle||(s.subtitle=this.subtitle))}_onFirstRender(a,s){var r;super._onFirstRender(a,s);const i={};for(const[n,l]of Object.entries(this.constructor.PARTS)){if(!((r=l.container)!=null&&r.id))continue;const c=this.element.querySelector(`[data-application-part="${n}"]`);if(c){if(!i[l.container.id]){const u=document.createElement("div");u.dataset.containerId=l.container.id,u.classList.add(...l.container.classes??[]),i[l.container.id]=u,c.replaceWith(u)}i[l.container.id].append(c)}}}async _prepareContext(a){const s=await super._prepareContext(a);return s.CONFIG=CONFIG.DND5E,s.inputs={...foundry.applications.fields,...dnd5e.applications.fields},s}async _preparePartContext(a,s,i){return{...await super._preparePartContext(a,s,i)}}async _renderFrame(a){var r,n,l;const s=await super._renderFrame(a),i=document.createElement("h2");if(i.classList.add("window-subtitle"),(r=s==null?void 0:s.querySelector(".window-title"))==null||r.insertAdjacentElement("afterend",i),(((n=a.window)==null?void 0:n.icon)??"").includes(".")){const c=s.querySelector(".window-icon"),u=document.createElement((l=a.window.icon)!=null&&l.endsWith(".svg")?"dnd5e-icon":"img");u.classList.add("window-icon"),u.src=a.window.icon,c.replaceWith(u)}return s}_updateFrame(a){super._updateFrame(a),a.window&&"subtitle"in a.window&&(this.element.querySelector(".window-header > .window-subtitle").innerText=a.window.subtitle)}_onRender(a,s){super._onRender(a,s),this.element.querySelectorAll("multi-select").forEach(i=>{i.disabled||i.querySelectorAll(".tag").forEach(r=>{var n;r.classList.add("remove"),(n=r.querySelector(":scope > span"))==null||n.classList.add("remove")})}),this.element.querySelectorAll(".label-top > p.hint").forEach(i=>{const r=i.parentElement.querySelector(":scope > label");r&&(i.ariaLabel=i.innerText,i.dataset.tooltip=i.innerHTML,i.innerHTML="",r.insertAdjacentElement("beforeend",i))})}_disableFields(){const a=`.window-content :is(${["INPUT","SELECT","TEXTAREA","BUTTON","DND5E-CHECKBOX","COLOR-PICKER","DOCUMENT-TAGS","FILE-PICKER","HUE-SLIDER","MULTI-SELECT","PROSE-MIRROR","RANGE-PICKER","STRING-TAGS"].join(", ")}):not(.interface-only)`;for(const s of this.element.querySelectorAll(a))s.tagName==="TEXTAREA"?s.readOnly=!0:s.disabled=!0}}return T(t,"DEFAULT_OPTIONS",{classes:["dnd5e2"],window:{subtitle:""}}),T(t,"PARTS",{}),t}const{ApplicationV2:Ke}=foundry.applications.api;class Ye extends Be(Ke){}class fe extends Ye{get form(){return this.options.tag==="form"?this.element:this.element.querySelector("form")}async _preparePartContext(t,e,a){return e={...await super._preparePartContext(t,e,a)},t==="content"?this._prepareContentContext(e,a):t==="footer"?this._prepareFooterContext(e,a):e}async _prepareContentContext(t,e){return t}async _prepareFooterContext(t,e){var a;return t.buttons=(a=this.options.buttons)==null?void 0:a.map(s=>({...s,cssClass:s.class})),t}_attachFrameListeners(){var t,e;super._attachFrameListeners(),this.options.tag!=="form"&&((t=this.form)==null||t.addEventListener("submit",this._onSubmitForm.bind(this,this.options.form)),(e=this.form)==null||e.addEventListener("change",this._onChangeForm.bind(this,this.options.form)))}}T(fe,"DEFAULT_OPTIONS",{tag:"dialog",window:{contentTag:"form",contentClasses:["standard-form"],minimizable:!1}}),T(fe,"PARTS",{content:{template:""},footer:{template:"templates/generic/form-footer.hbs"}});const{DiceTerm:je}=foundry.dice.terms;var $,Z,z,ee,he,le,we;const K=class K extends fe{constructor(e={},a={},s={}){super(s);q(this,ee);q(this,$);q(this,Z);q(this,z);B(this,$,e),B(this,Z,a),se(this,ee,he).call(this,foundry.utils.deepClone(U(this,$)))}static get rollType(){return CONFIG.Dice.BasicRoll}get config(){return U(this,$)}get message(){return U(this,Z)}get rolls(){return U(this,z)}get rollType(){return this.options.rollType??this.constructor.rollType}_identifyDiceTerms(){let e=[],a=!0;const s=r=>{if(r instanceof je){if(!Number.isFinite(r.number)||!Number.isFinite(r.faces)||!this.options.rendering.dice.denominations.has(r.denomination))return a=!1;for(let n=0;n<r.number;n++)e.push({icon:`systems/dnd5e/icons/svg/dice/${r.denomination}.svg`,label:r.denomination,denomination:r.denomination})}},i=(r=[])=>{for(const n of r)s(n),"dice"in n&&i(n.dice)};if(this.rolls.forEach(r=>i(r.terms)),e.length>this.options.rendering.dice.max){const r=e.reduce((n,{icon:l,denomination:c})=>(n[c]??(n[c]={icon:l,count:0}),n[c].count++,n),{});e=Object.entries(r).map(([n,{icon:l,count:c}])=>({icon:l,label:`${c}${n}`})),e.length>this.options.rendering.dice.max&&(a=!1)}else e.length||(a=!1);return a?e:[]}async _preparePartContext(e,a,s){switch(a=await super._preparePartContext(e,a,s),e){case"buttons":return this._prepareButtonsContext(a,s);case"configuration":return this._prepareConfigurationContext(a,s);case"formulas":return this._prepareFormulasContext(a,s);default:return a}}async _prepareButtonsContext(e,a){return e.buttons={roll:{default:!0,icon:'<i class="fa-solid fa-dice" inert></i>',label:game.i18n.localize("DND5E.Roll")}},e}async _prepareConfigurationContext(e,a){var s;return e.fields=[{field:new foundry.data.fields.StringField({label:game.i18n.localize("DND5E.RollMode")}),name:"rollMode",value:this.message.rollMode??((s=this.options.default)==null?void 0:s.rollMode)??game.settings.get("core","rollMode"),options:Object.entries(CONFIG.Dice.rollModes).map(([i,r])=>({value:i,label:game.i18n.localize(`${game.release.generation<13?r:r.label}`)}))}],e}async _prepareFormulasContext(e,a){return e.rolls=this.rolls.map(s=>({roll:s})),e.dice=this._identifyDiceTerms()||[],e}_buildConfig(e,a,s){var r,n;e=foundry.utils.mergeObject({parts:[],data:{},options:{}},e),Hooks.callAll("dnd5e.buildRollConfig",this,e,a,s);const i=a==null?void 0:a.get(`roll.${s}.situational`);return i&&e.situational!==!1?(e.parts.push("@situational"),e.data.situational=i):e.parts.findSplice(l=>l==="@situational"),(n=(r=this.options).buildConfig)==null||n.call(r,this.config,e,a,s),e}_finalizeRolls(e){return this.rolls}rebuild(){this._onChangeForm(this.options.form,new Event("change"))}_onChangeForm(e,a){super._onChangeForm(e,a);const s=new FormDataExtended(this.form);s.has("rollMode")&&(this.message.rollMode=s.get("rollMode")),se(this,ee,he).call(this,foundry.utils.deepClone(U(this,$)),s),this.render({parts:["formulas"]})}_onClose(e={}){var a;(a=e.dnd5e)!=null&&a.submitted||B(this,z,[])}static async configure(e={},a={},s={}){return new Promise(i=>{const r=new this(e,s,a.options);r.addEventListener("close",()=>i(r.rolls),{once:!0}),r.render({force:!0})})}};$=new WeakMap,Z=new WeakMap,z=new WeakMap,ee=new WeakSet,he=function(e,a){var i;const s=this.rollType;B(this,z,((i=e.rolls)==null?void 0:i.map((r,n)=>s.fromConfig(this._buildConfig(r,a,n),this.config)))??[])},le=new WeakSet,we=async function(e,a,s){var i,r;s.has("rollMode")&&(this.message.rollMode=s.get("rollMode")),B(this,z,this._finalizeRolls((r=(i=e.submitter)==null?void 0:i.dataset)==null?void 0:r.action)),await this.close({dnd5e:{submitted:!0}})},q(K,le),T(K,"DEFAULT_OPTIONS",{classes:["roll-configuration"],window:{title:"DND5E.RollConfiguration.Title",icon:"fa-solid fa-dice"},form:{handler:se(K,le,we)},position:{width:400},buildConfig:null,rendering:{dice:{max:5,denominations:new Set(["d4","d6","d8","d10","d12","d20"])}}}),T(K,"PARTS",{formulas:{template:"systems/dnd5e/templates/dice/roll-formulas.hbs"},configuration:{template:"systems/dnd5e/templates/dice/roll-configuration.hbs"},buttons:{template:"systems/dnd5e/templates/dice/roll-buttons.hbs"}});let ne=K;const J=class J extends ne{static get rollType(){return CONFIG.Dice.DamageRoll}async _prepareButtonsContext(t,e){var i;const a=((i=this.config.critical)==null?void 0:i.allow)!==!1,s=a&&this.options.defaultButton==="critical";return t.buttons={critical:{default:s,icon:'<i class="fa-solid fa-bomb" inert></i>',label:game.i18n.localize("DND5E.CriticalHit")},normal:{default:!s,icon:'<i class="fa-solid fa-dice" inert></i>',label:game.i18n.localize(a?"DND5E.Normal":"DND5E.Roll")}},a||delete t.buttons.critical,t}async _prepareFormulasContext(t,e){t=await super._prepareFormulasContext(t,e);const a=foundry.utils.mergeObject(CONFIG.DND5E.damageTypes,CONFIG.DND5E.healingTypes,{inplace:!1});return t.rolls=t.rolls.map(({roll:s})=>{var i,r;return{roll:s,damageConfig:a[s.options.type]??a[(i=s.options.types)==null?void 0:i[0]],damageTypes:((r=s.options.types)==null?void 0:r.length)>1?Object.entries(a).map(([n,l])=>{var c;return(c=s.options.types)!=null&&c.includes(n)?{value:n,label:l.label}:null}).filter(n=>n):null}}),t}_buildConfig(t,e,a){t=super._buildConfig(t,e,a);const s=e==null?void 0:e.get(`roll.${a}.damageType`);return s&&(t.options.type=s),t}_finalizeRolls(t){return this.rolls.map(e=>(e.options.isCritical=t==="critical",e.configureDamage({critical:this.config.critical}),e))}};T(J,"PARTS",{...ke(J,J,"PARTS"),formulas:{template:"systems/dnd5e/templates/dice/damage-formulas.hbs"}});let ye=J;const We={Alt:KeyboardManager.MODIFIER_CODES.Alt,Control:KeyboardManager.MODIFIER_CODES.Control.filter(o=>o.startsWith("Control")),Meta:KeyboardManager.MODIFIER_CODES.Control.filter(o=>!o.startsWith("Control")),Shift:KeyboardManager.MODIFIER_CODES.Shift};function ge(o,t){if(!o)return!1;const e={},a=(s,i)=>{e[s]=i,We[s].forEach(r=>e[r]=i)};return a(KeyboardManager.MODIFIER_KEYS.ALT,o.altKey),a(KeyboardManager.MODIFIER_KEYS.CONTROL,o.ctrlKey),a("Meta",o.metaKey),a(KeyboardManager.MODIFIER_KEYS.SHIFT,o.shiftKey),game.keybindings.get("dnd5e",t).some(s=>game.keyboard.downKeys.has(s.key)&&s.modifiers.every(i=>e[i])?!0:s.modifiers.length?!1:e[s.key])}const{DiceTerm:Je,NumericTerm:Xe}=foundry.dice.terms,X=class X extends Roll{static fromConfig(t,e){var s;const a=(t.parts??[]).join(" + ");return t.options??(t.options={}),(s=t.options).target??(s.target=e.target),new this(a,t.data,t.options)}static constructParts(t,e={}){const a=[];for(const[s,i]of Object.entries(t))!i&&i!==0||(a.push(`@${s}`),foundry.utils.setProperty(e,s,foundry.utils.getType(i)==="string"?Roll.replaceFormulaData(i,e):i));return{parts:a,data:e}}static async build(t={},e={},a={}){const s=await this.buildConfigure(t,e,a);return await this.buildEvaluate(s,t,a),await this.buildPost(s,t,a),s}static async buildConfigure(t={},e={},a={}){var r;t.hookNames=[...t.hookNames??[],""];for(const n of t.hookNames)if(Hooks.call(`dnd5e.preRoll${n.capitalize()}V2`,t,e,a)===!1)return[];this.applyKeybindings(t,e,a);let s;e.configure===!1?s=((r=t.rolls)==null?void 0:r.map((n,l)=>{var c,u;return(u=(c=e.options)==null?void 0:c.buildConfig)==null||u.call(c,t,n,null,l),this.fromConfig(n,t)}))??[]:s=await(e.applicationClass??this.DefaultConfigurationDialog).configure(t,e,a);const i=foundry.utils.getProperty(a,"data.flags.dnd5e.roll.type");i&&s.forEach(n=>{var l;return(l=n.options).rollType??(l.rollType=i)});for(const n of t.hookNames){const l=`dnd5e.post${n.capitalize()}RollConfiguration`;if(Hooks.call(l,s,t,e,a)===!1)return[]}return s}static async buildEvaluate(t,e={},a={}){if(e.evaluate!==!1)for(const s of t)await s.evaluate()}static async buildPost(t,e,a){var i,r;a.data=foundry.utils.expandObject(a.data??{});const s=(r=(i=e.event)==null?void 0:i.target.closest("[data-message-id]"))==null?void 0:r.dataset.messageId;return s&&foundry.utils.setProperty(a.data,"flags.dnd5e.originatingMessage",s),t!=null&&t.length&&e.evaluate!==!1&&a.create!==!1&&(a.document=await this.toMessage(t,a.data,{rollMode:a.rollMode})),a.document}static applyKeybindings(t,e,a){e.configure??(e.configure=!0)}get isFailure(){if(this._evaluated)return Number.isNumeric(this.options.target)?this.total<this.options.target:!1}get isSuccess(){if(this._evaluated)return Number.isNumeric(this.options.target)?this.total>=this.options.target:!1}static async toMessage(t,e={},{rollMode:a,create:s=!0}={}){for(const n of t)n._evaluated||await n.evaluate({allowInteractive:a!==CONST.DICE_ROLL_MODES.BLIND}),a??(a=n.options.rollMode);e=foundry.utils.mergeObject({sound:CONFIG.sounds.dice},e),e.rolls=t,this._prepareMessageData(t,e);const i=getDocumentClass("ChatMessage"),r=new i(e);return s?i.create(r.toObject(),{rollMode:a}):(a&&r.applyRollMode(a),r.toObject())}static _prepareMessageData(t,e){}async evaluate(t={}){return this.preCalculateDiceTerms(t),super.evaluate(t)}evaluateSync(t={}){return this.preCalculateDiceTerms(t),super.evaluateSync(t)}static replaceFormulaData(t,e,a){return super.replaceFormulaData(t,e,a).replaceAll(/\$"?!(.+?)!"?\$/g,"$1")}preCalculateDiceTerms(t={}){this._evaluated||!t.maximize&&!t.minimize||(this.terms=this.terms.map(e=>{if(e instanceof Je&&e.modifiers.length){const a=!t.maximize,s=this.constructor.preCalculateTerm(e,{minimize:a});if(Number.isFinite(s))return new Xe({number:s,options:e.options})}return e}))}static preCalculateTerm(t,{minimize:e=!1}={}){let a=e?1:t.faces,s=t.number;const i=foundry.utils.deepClone(t.modifiers),r=new Set(["k","kh","kl"]),n=new Set(["d","dh","dl"]),l=new Set([...r,...n,"max","min"]);let c=!1;for(const u of i){const d=/(m[ai][xn]|[kd][hl]?)(\d+)?/i,m=u.match(d);if(!m)continue;m[0].length<m.input.length&&i.push(m.input.slice(m[0].length));let[,g,y]=m;if(g=g.toLowerCase(),!l.has(g))continue;c=!0;const f=parseInt(y)||(g==="max"||g==="min"?-1:1);if(f>0){if(g==="max"&&e||g==="min"&&!e)continue;g==="max"||g==="min"?a=Math.min(t.faces,f):r.has(g)?s=Math.min(s,f):n.has(g)&&(s=Math.max(1,s-f))}}return c?a*s:null}simplify(){var t,e;for(const a of this.dice){const s=a._number;s instanceof X&&s.isDeterministic&&(a._number=s.evaluateSync().total);const i=a._faces;i instanceof X&&i.isDeterministic&&(a._faces=i.evaluateSync().total),(e=(t=i.terms)==null?void 0:t[0])!=null&&e.flavor&&(a.options.flavor=i.terms[0].flavor)}this.resetFormula()}static mergeConfigs(t,e={}){var a;return e.data&&(t.data??(t.data={}),Object.assign(t.data,e.data)),(a=e.parts)!=null&&a.length&&(t.parts??(t.parts=[]),t.parts.unshift(...e.parts)),e.options&&(t.options??(t.options={}),foundry.utils.mergeObject(t.options,e.options)),t}};T(X,"DefaultConfigurationDialog",ne);let Te=X;const{DiceTerm:Qe,FunctionTerm:Ze,NumericTerm:Le,OperatorTerm:me,ParentheticalTerm:pe,StringTerm:ie}=foundry.dice.terms;class be extends Te{constructor(t,e,a){super(t,e,a),this.options.preprocessed||this.preprocessFormula(),this.options.configured||this.configureDamage()}static fromConfig(t,e){return e.critical&&(t=foundry.utils.deepClone(t),t.options??(t.options={}),t.options.critical=foundry.utils.mergeObject(e.critical,t.options.critical??{},{inplace:!1})),super.fromConfig(t,e)}static async build(t={},e={},a={}){var s,i;return t.critical??(t.critical={}),(s=t.critical).multiplyNumeric??(s.multiplyNumeric=game.settings.get("dnd5e","criticalDamageModifiers")),(i=t.critical).powerfulCritical??(i.powerfulCritical=game.settings.get("dnd5e","criticalDamageMaxDice")),super.build(t,e,a)}static applyKeybindings(t,e,a){var i;const s={default:ge(t.event,"skipDialogNormal"),normal:ge(t.event,"skipDialogDisadvantage"),critical:ge(t.event,"skipDialogAdvantage")};e.configure??(e.configure=Object.values(s).every(r=>!r));for(const r of t.rolls)r.options??(r.options={}),(i=r.options).isCritical??(i.isCritical=(t.isCritical||s.critical)&&!s.normal)}get isCritical(){return this.options.isCritical===!0}preprocessFormula(){for(let[t,e]of this.terms.entries()){const a=this.terms[t+1],s=this.terms[t-1];if(e instanceof ie&&/^d\d+/.test(e.term)&&!(s instanceof pe)){const i=`1${e.term}`,r=new Roll(i).terms[0];this.terms.splice(t,1,r),e=r}else if(e instanceof pe&&s instanceof ie&&s.term.match(/^[0-9]*d$/)){if(e.isDeterministic){let i=`${s.term}${e.evaluate().total}`,r=2;a instanceof ie&&(i+=a.term,r+=1);const n=new Roll(i).terms[0];this.terms.splice(t-1,r,n),e=n}}else if((e instanceof pe||e instanceof Ze)&&a instanceof ie&&a.term.match(/^d[0-9]*$/)&&e.isDeterministic){const i=`${e.evaluate().total}${a.term}`,r=new Roll(i).terms[0];this.terms.splice(t,2,r),e=r}}this.resetFormula(),this.options.preprocessed=!0}configureDamage({critical:t={}}={}){var a;t=foundry.utils.mergeObject(t,this.options.critical??{},{inplace:!1});const e=new Map;for(let[s,i]of this.terms.entries())if(i instanceof Qe){if(i._number instanceof Roll){if(!i._number.isDeterministic)continue;i._number._evaluated||i._number.evaluateSync()}if(i.options.baseNumber=i.options.baseNumber??i.number,i.number=i.options.baseNumber,this.isCritical){let r=t.multiplier??2;if(t.powerfulCritical){const l=Roll.create(i.formula).evaluateSync({maximize:!0}).total;if(l>0){const c=((a=i.flavor)==null?void 0:a.toLowerCase().trim())??game.i18n.localize("DND5E.PowerfulCritical");e.set(c,(e.get(c)??0)+l)}r=Math.max(1,r-1)}let n=t.bonusDice&&s===0?t.bonusDice:0;i.alter(r,n),i.options.critical=!0}}else t.multiplyNumeric&&i instanceof Le&&(i.options.baseNumber=i.options.baseNumber??i.number,i.number=i.options.baseNumber,this.isCritical&&(i.number*=t.multiplier??2,i.options.critical=!0));if(t.powerfulCritical&&e.size)for(const[s,i]of e.entries())this.terms.push(new me({operator:"+"})),this.terms.push(new Le({number:i,options:{flavor:s}}));if(this.isCritical&&t.bonusDamage){const s=new Roll(t.bonusDamage,this.data);s.terms[0]instanceof me||this.terms.push(new me({operator:"+"})),this.terms.push(...s.terms)}this.resetFormula(),this.options.configured=!0}async configureDialog(t={},e={}){return(await this.constructor.configureDialog([this],t,e))[0]??null}static async configureDialog(t,{title:e,defaultRollMode:a,defaultCritical:s=!1,template:i,allowCritical:r=!0}={},n={}){return foundry.utils.logCompatibilityWarning("The `configureDialog` on DamageRoll has been deprecated and is now handled through `DamageRoll.build`.",{since:"DnD5e 4.0",until:"DnD5e 4.4"}),await this.DefaultConfigurationDialog.configure({critical:{allow:r},rolls:t.map(c=>({parts:[c.formula],options:c.options}))},{options:{title:e}},{rollMode:a})}}T(be,"DefaultConfigurationDialog",ye);const{Coin:et,DiceTerm:_e,Die:tt,FunctionTerm:st,NumericTerm:oe,OperatorTerm:O,ParentheticalTerm:Oe,RollTerm:at}=foundry.dice.terms;function ve(o,{preserveFlavor:t=!1,deterministic:e=!1}={}){var c;let a;try{a=new Roll(o)}catch(u){console.warn(`Unable to simplify formula '${o}': ${u}`)}if(Roll.validate(a.formula),t||(a.terms=Roll.parse(a.formula.replace(at.FLAVOR_REGEXP,""))),e){a.terms=Ce(a.terms);const u=[];let d=[],m=!1,g;for(let y=a.terms.length-1;y>=0;){let f,h=a.terms[y];if(h instanceof Oe&&(f=ve(h.term,{preserveFlavor:t,deterministic:e})),Number.isNumeric(f)){const b={number:f};t&&(b.options={flavor:h.flavor}),h=new oe(b)}for(g=h.isDeterministic&&(!m||g),g?d.unshift(h):d=[],h=a.terms[--y];h instanceof O;){if(g&&d.unshift(h),h.operator==="*"||h.operator==="/"||h.operator==="%")m=!0;else for(m=!1;d.length;)u.unshift(d.pop());h=a.terms[--y]}}if(g)for(;d.length;)u.unshift(d.pop());a.terms=u}if(a.terms=Ce(a.terms),/[*/]/.test(a.formula))return a.isDeterministic&&!/d\(/.test(a.formula)&&(!/\[/.test(a.formula)||!t)?String(new Roll(a.formula).evaluateSync().total):a.constructor.getFormula(a.terms);a.terms=Me(a.terms),a.terms=Roll.simplifyTerms(a.terms);let{poolTerms:s,diceTerms:i,mathTerms:r,numericTerms:n}=nt(a.terms);n=it(n??[]),i=rt(i??[]);const l=[i,s,r,n].flat().filter(Boolean);return((c=l[0])==null?void 0:c.operator)==="+"&&l.shift(),a.constructor.getFormula(l)}function Ce(o){return o.reduce((t,e)=>{const a=t[t.length-1],s=new Set([a==null?void 0:a.operator,e.operator]);return s.has(void 0)?t.push(e):s.has("+")&&s.has("-")?t.splice(-1,1,new O({operator:"-"})):s.has("-")&&s.size===1?t.splice(-1,1,new O({operator:"+"})):s.has("+")||t.push(e),t},[])}function it(o){const t=[],{annotated:e,unannotated:a}=Ne(o);if(a.length){const s=Roll.safeEval(Roll.getFormula(a));if(s===0)return[...e];s>0&&t.push(new O({operator:"+"})),t.push(new oe({number:s}))}return[...t,...e]}function rt(o){const{annotated:t,unannotated:e}=Ne(o),a=e.reduce((i,r,n)=>{var m;if(r instanceof O)return i;const l=((m=r.constructor)==null?void 0:m.name)==="Coin",c=l?"c":r.faces,u=l?"":r.modifiers.filterJoin(""),d=`${e[n-1].operator}${c}${u}`;return i[d]??(i[d]={}),r._number instanceof Roll&&r._number.isDeterministic&&r._number.evaluateSync(),i[d].number=(i[d].number??0)+r.number,l||(i[d].modifiers=(i[d].modifiers??[]).concat(r.modifiers)),i},{});return[...Object.entries(a).flatMap(([i,{number:r,modifiers:n}])=>[new O({operator:i.charAt(0)}),i.slice(1)==="c"?new et({number:r}):new tt({number:r,faces:parseInt(i.slice(1)),modifiers:[...new Set(n)]})]),...t]}function Me(o){return o=o.reduce((t,e)=>{if(e instanceof Oe)if(e.isDeterministic){const a=new Roll(e.term);e=new oe({number:a.evaluateSync().total})}else{const a=new Roll(e.term).terms;e=Me(a)}return t.push(e),t},[]),Ce(o.flat())}function nt(o){return o[0]instanceof O||o.unshift(new O({operator:"+"})),o.reduce((t,e,a)=>{let s;e instanceof _e?s=_e:e instanceof st&&e.isDeterministic?s=oe:s=e.constructor;const i=`${s.name.charAt(0).toLowerCase()}${s.name.substring(1)}s`;return(t[i]=t[i]??[]).push(o[a-1],e),t},{})}function Ne(o){return o.reduce((t,e,a)=>(e instanceof O||t[e.flavor?"annotated":"unannotated"].push(o[a-1],e),t),{annotated:[],unannotated:[]})}class re extends ChatMessage{constructor(){super(...arguments);T(this,"_highlighted",null);T(this,"_trayStates")}get canApplyDamage(){var a,s,i;const e=(s=(a=this.flags.dnd5e)==null?void 0:a.roll)==null?void 0:s.type;return e&&e!=="damage"?!1:this.isRoll&&this.isContentVisible&&!!((i=canvas.tokens)!=null&&i.controlled.length)}get canSelectTargets(){var e,a;return((a=(e=this.flags.dnd5e)==null?void 0:e.roll)==null?void 0:a.type)!=="attack"?!1:this.isRoll&&this.isContentVisible}get isRoll(){var e,a;return((e=this.system)==null?void 0:e.isRoll)!==void 0?this.system.isRoll:super.isRoll&&!((a=this.flags.dnd5e)!=null&&a.rest)}get shouldDisplayChallenge(){if(game.user.isGM||this.author===game.user)return!0;switch(game.settings.get("dnd5e","challengeVisibility")){case"all":return!0;case"player":return!this.author.isGM;default:return!1}}static migrateData(e){if(e=super.migrateData(e),foundry.utils.hasProperty(e,"flags.dnd5e.itemData")&&(foundry.utils.setProperty(e,"flags.dnd5e.item.data",e.flags.dnd5e.itemData),delete e.flags.dnd5e.itemData),foundry.utils.hasProperty(e,"flags.dnd5e.use")){const a=e.flags.dnd5e.use;foundry.utils.setProperty(e,"flags.dnd5e.messageType","usage"),a.type&&foundry.utils.setProperty(e,"flags.dnd5e.item.type",a.type),a.itemId&&foundry.utils.setProperty(e,"flags.dnd5e.item.id",a.itemId),a.itemUuid&&foundry.utils.setProperty(e,"flags.dnd5e.item.uuid",a.itemUuid)}return e}prepareData(){var e,a,s,i,r;if(super.prepareData(),this._shimFlags(),!((a=(e=this.flags.dnd5e)==null?void 0:e.item)!=null&&a.data)&&((i=(s=this.flags.dnd5e)==null?void 0:s.item)!=null&&i.id)){const n=(r=this.getFlag("dnd5e","use.consumed.deleted"))==null?void 0:r.find(l=>l._id===this.flags.dnd5e.item.id);n&&Object.defineProperty(this.flags.dnd5e.item,"data",{value:n})}dnd5e.registry.messages.track(this)}async getHTML(e={}){var i;const a=await super.getHTML(e),s=a instanceof HTMLElement?a:a[0];return foundry.utils.getType((i=this.system)==null?void 0:i.getHTML)==="function"?(await this.system.getHTML(s,e),a):(this._displayChatActionButtons(a),this._highlightCriticalSuccessFailure(a),game.settings.get("dnd5e","autoCollapseItemCards")&&a.find(".description.collapsible").each((r,n)=>n.classList.add("collapsed")),this._enrichChatCard(s),this._collapseTrays(s),this._activateActivityListeners(s),dnd5e.bastion._activateChatListeners(this,s),Hooks.callAll("dnd5e.renderChatMessage",this,s),a)}_collapseTrays(e){var s,i;let a;switch(game.settings.get("dnd5e","autoCollapseChatTrays")){case"always":a=!0;break;case"never":a=!1;break;case"older":a=this.timestamp<Date.now()-5*60*1e3;break}for(const r of e.querySelectorAll(".card-tray"))r.classList.toggle("collapsed",((s=this._trayStates)==null?void 0:s.get(r.className.replace(" collapsed","")))??a);for(const r of e.querySelectorAll(this.constructor.TRAY_TYPES.join(", ")))r.toggleAttribute("open",((i=this._trayStates)==null?void 0:i.get(r.tagName))??!a)}_displayChatActionButtons(e){var s;const a=e.find(".dnd5e.chat-card, .dnd5e2.chat-card");if(a.length>0){const i=e.find(".flavor-text");i.text()===e.find(".item-name").text()&&i.remove(),this.shouldDisplayChallenge&&(a[0].dataset.displayChallenge="");const r=game.actors.get(this.speaker.actor),n=game.user.isGM||(r==null?void 0:r.isOwner)||this.author.id===game.user.id;for(const l of e[0].querySelectorAll(".card-buttons button"))l.dataset.visibility!=="all"&&(l.dataset.visibility==="gm"&&!game.user.isGM||!n||(s=this.getAssociatedActivity())!=null&&s.shouldHideChatButton(l,this))&&(l.hidden=!0)}}_highlightCriticalSuccessFailure(e){var l,c;if(!this.isContentVisible||!this.rolls.length)return;const a=this.getOriginatingMessage(),s=a==null?void 0:a.shouldDisplayChallenge,i=game.user.isGM||game.settings.get("dnd5e","attackRollVisibility")!=="none",r=((c=(l=this.flags.dnd5e)==null?void 0:l.roll)==null?void 0:c.forceSuccess)===!0;function n(u){const d=document.createElement("i");return d.classList.add("fas",u),d.setAttribute("inert",""),d}for(let[u,d]of this.rolls.entries()){const m=d.dice[0];if((m==null?void 0:m.faces)!==20||(m==null?void 0:m.values.length)!==1)continue;d=dnd5e.dice.D20Roll.fromRoll(d);const g=d.dice[0];if("success"in g.results[0]||g.options.marginSuccess||g.options.marginFailure)continue;const f=e.find(".dice-total")[u];if(!f)continue;const h=["attack","death"].includes(this.getFlag("dnd5e","roll.type")),S=this.getFlag("dnd5e","roll.type")==="attack"?i:s;g.options.target&&S&&(d.isSuccess||r?f.classList.add("success"):f.classList.add("failure")),h&&d.isCritical&&f.classList.add("critical"),h&&d.isFumble&&!r&&f.classList.add("fumble");const _=document.createElement("div");_.classList.add("icons"),f.classList.contains("critical")?_.append(n("fa-check"),n("fa-check")):f.classList.contains("fumble")?_.append(n("fa-xmark"),n("fa-xmark")):f.classList.contains("success")?_.append(n("fa-check")):f.classList.contains("failure")&&_.append(n("fa-xmark")),_.children.length&&f.append(_)}}_enrichChatCard(e){var S,_,V,te,Ee,Re;const a=this.getAssociatedActor();let s,i;this.isContentVisible?(s=(a==null?void 0:a.img)??this.author.avatar,i=this.alias):(s=this.author.avatar,i=this.author.name);const r=document.createElement("a");r.classList.add("avatar"),a&&(r.dataset.uuid=a.uuid);const n=document.createElement("img");Object.assign(n,{src:s,alt:i}),r.append(n);const l=document.createElement("span");l.classList.add("name-stacked");const c=document.createElement("span");c.classList.add("title"),c.append(i),l.append(c);const u=document.createElement("span");u.classList.add("subtitle"),this.whisper.length&&(u.innerText=((S=e.querySelector(".whisper-to"))==null?void 0:S.innerText)??""),i!==((_=this.author)==null?void 0:_.name)&&!u.innerText.length&&(u.innerText=((V=this.author)==null?void 0:V.name)??""),l.appendChild(u);const d=e.querySelector(".message-sender");d==null||d.replaceChildren(r,l),(te=e.querySelector(".whisper-to"))==null||te.remove();const m=e.querySelector(".message-metadata"),g=m.querySelector(".message-delete");game.user.isGM||g==null||g.remove();const y=document.createElement("a");y.setAttribute("aria-label",game.i18n.localize("DND5E.AdditionalControls")),y.classList.add("chat-control"),y.dataset.contextMenu="",y.innerHTML='<i class="fas fa-ellipsis-vertical fa-fw"></i>',m.appendChild(y),e.querySelectorAll("i.dnd5e-icon").forEach(w=>{const G=document.createElement("dnd5e-icon");G.src=w.dataset.src,w.replaceWith(G)});const f=this.getFlag("dnd5e","roll"),h=this.getAssociatedItem(),b=this.getAssociatedActivity();if(this.isContentVisible&&h&&f){const w=f.type==="damage"&&((Ee=this.rolls[0])==null?void 0:Ee.isCritical),G=f.type==="damage"?w?game.i18n.localize("DND5E.CriticalHit"):(b==null?void 0:b.damageFlavor)??game.i18n.localize("DND5E.DamageRoll"):f.type==="attack"?(b==null?void 0:b.getActionLabel(f.attackMode))??"":((Re=h.system.type)==null?void 0:Re.label)??game.i18n.localize(CONFIG.Item.typeLabels[h.type]),j=document.createElement("div");j.classList.add("dnd5e2","chat-card"),j.innerHTML=`
        <section class="card-header description ${w?"critical":""}">
          <header class="summary">
            <div class="name-stacked">
              <span class="subtitle">${G}</span>
            </div>
          </header>
        </section>
      `;const De=document.createElement("img");Object.assign(De,{className:"gold-icon",src:h.img,alt:h.name}),j.querySelector("header").insertAdjacentElement("afterbegin",De);const ce=document.createElement("span");ce.classList.add("title"),ce.append(h.name),j.querySelector(".name-stacked").insertAdjacentElement("afterbegin",ce),e.querySelector(".message-header .flavor-text").remove(),e.querySelector(".message-content").insertAdjacentElement("afterbegin",j)}this._enrichAttackTargets(e),this.isContentVisible?(e.querySelectorAll(".dice-tooltip").forEach((w,G)=>{!(f instanceof be)&&this.rolls[G]&&this._enrichRollTooltip(this.rolls[G],w)}),this._enrichDamageTooltip(this.rolls.filter(w=>w instanceof be),e),this._enrichSaveTooltip(e),this._enrichEnchantmentTooltip(e),e.querySelectorAll(".dice-roll").forEach(w=>w.addEventListener("click",this._onClickDiceRoll.bind(this)))):e.querySelectorAll(".dice-roll").forEach(w=>w.classList.add("secret-roll")),this._enrichUsageEffects(e),r.addEventListener("click",this._onTargetMouseDown.bind(this)),r.addEventListener("pointerover",this._onTargetHoverIn.bind(this)),r.addEventListener("pointerout",this._onTargetHoverOut.bind(this))}_enrichRollTooltip(e,a){const s=Number(ve(e._formula,{deterministic:!0}));if(!s)return;const i=s<0?"-":"+",r=document.createElement("section");r.classList.add("tooltip-part","constant"),r.innerHTML=`
      <div class="dice">
        <ol class="dice-rolls"></ol>
        <div class="total">
          <span class="value"><span class="sign">${i}</span>${Math.abs(s)}</span>
        </div>
      </div>
    `,a.appendChild(r)}_enrichAttackTargets(e){var d,m;const a=this.rolls[0];if(!(a instanceof dnd5e.dice.D20Roll))return;const s=CONFIG.DND5E.weaponMasteries[a.options.mastery];if(s){const g=document.createElement("p");g.classList.add("supplement");let y=s.label;s.reference&&(y=`
        <a class="content-link" draggable="true" data-link data-uuid="${s.reference}"
           data-tooltip="${y}">${y}</a>
      `),g.innerHTML=`<strong>${game.i18n.format("DND5E.WEAPON.Mastery.Flavor")}</strong> ${y}`,(d=e.querySelector(".chat-card")??e.querySelector(".message-content"))==null||d.appendChild(g)}const i=game.settings.get("dnd5e","attackRollVisibility");if(!(game.user.isGM||i!=="none"))return;const n=this.getFlag("dnd5e","targets");if(!(n!=null&&n.length))return;const l=document.createElement("div");l.classList.add("dnd5e2"),l.innerHTML=`
      <div class="card-tray targets-tray collapsible collapsed">
        <label class="roboto-upper">
          <i class="fas fa-bullseye" inert></i>
          <span>${game.i18n.localize("DND5E.TargetPl")}</span>
          <i class="fas fa-caret-down" inert></i>
        </label>
        <div class="collapsible-content">
          <ul class="dnd5e2 unlist evaluation wrapper"></ul>
        </div>
      </div>
    `;const c=l.querySelector("ul"),u=n.map(({name:g,ac:y,uuid:f})=>{!game.user.isGM&&i!=="all"&&(y="");const h=!a.isCritical&&(a.total<y||a.isFumble),b=document.createElement("li");return Object.assign(b.dataset,{uuid:f,miss:h}),b.className=`target ${h?"miss":"hit"}`,b.innerHTML=`
        <i class="fas ${h?"fa-times":"fa-check"}"></i>
        <div class="name"></div>
        ${y!==""?`
        <div class="ac">
          <i class="fas fa-shield-halved"></i>
          <span>${y===null?"&infin;":y}</span>
        </div>
        `:""}
      `,b.querySelector(".name").append(g),b}).sort((g,y)=>{const f=!!g.dataset.miss,h=!!y.dataset.miss;return f===h?0:f?1:-1});c.append(...u),c.querySelectorAll("li.target").forEach(g=>{g.addEventListener("click",this._onTargetMouseDown.bind(this)),g.addEventListener("pointerover",this._onTargetHoverIn.bind(this)),g.addEventListener("pointerout",this._onTargetHoverOut.bind(this))}),(m=e.querySelector(".message-content"))==null||m.appendChild(l)}_enrichDamageTooltip(e,a){var d;if(!e.length)return;const s=CONFIG.DND5E.aggregateDamageDisplay?ue(e):e;let{formula:i,total:r,breakdown:n}=s.reduce((m,g)=>(m.formula.push(CONFIG.DND5E.aggregateDamageDisplay?g.formula:` + ${g.formula}`),m.total+=g.total,m.breakdown.push(this._simplifyDamageRoll(g)),m),{formula:[],total:0,breakdown:[]});i=i.join("").replace(/^ \+ /,""),a.querySelectorAll(".dice-roll").forEach(m=>m.remove());const l=document.createElement("div");l.classList.add("dice-roll");const c=n.reduce((m,{type:g,total:y,constant:f,dice:h})=>{const b=CONFIG.DND5E.damageTypes[g]??CONFIG.DND5E.healingTypes[g];return`${m}
        <section class="tooltip-part">
          <div class="dice">
            <ol class="dice-rolls">
              ${h.reduce((S,{result:_,classes:V})=>`
                ${S}<li class="roll ${V}">${_}</li>
              `,"")}
              ${f?`
              <li class="constant"><span class="sign">${f<0?"-":"+"}</span>${Math.abs(f)}</li>
              `:""}
            </ol>
            <div class="total">
              ${b?`<img src="${b.icon}" alt="${b.label}">`:""}
              <span class="label">${(b==null?void 0:b.label)??""}</span>
              <span class="value">${y}</span>
            </div>
          </div>
        </section>
      `},"");l.innerHTML=`
      <div class="dice-result">
        <div class="dice-formula">${i}</div>
        <div class="dice-tooltip-collapser">
          <div class="dice-tooltip">
            ${c}
          </div>
        </div>
        <h4 class="dice-total">${r}</h4>
      </div>
    `,a.querySelector(".message-content").appendChild(l);const u=this.getFlag("dnd5e","roll.damageOnSave");if(u){const m=document.createElement("p");m.classList.add("supplement"),m.innerHTML=`<strong>${game.i18n.format("DND5E.SAVE.OnSave")}</strong> ${game.i18n.localize(`DND5E.SAVE.FIELDS.damage.onSave.${u.capitalize()}`)}`,(d=a.querySelector(".chat-card, .message-content"))==null||d.appendChild(m)}if(game.user.isGM){const m=document.createElement("damage-application");m.classList.add("dnd5e2"),m.damages=ue(e,{respectProperties:!0}).map(g=>({value:g.total,type:g.options.type,properties:new Set(g.options.properties??[])})),a.querySelector(".message-content").appendChild(m)}}_simplifyDamageRoll(e){const a={type:e.options.type,total:e.total,constant:0,dice:[]};let s=!1;for(let i=e.terms.length-1;i>=0;){const r=e.terms[i--];if(!(r instanceof foundry.dice.terms.NumericTerm)&&!(r instanceof foundry.dice.terms.DiceTerm))continue;const n=r.total;r instanceof foundry.dice.terms.DiceTerm&&a.dice.push(...r.results.map(u=>({result:r.getResultLabel(u),classes:r.getResultCSS(u).filterJoin(" ")})));let l=1,c=e.terms[i];for(;c instanceof foundry.dice.terms.OperatorTerm;)["+","-"].includes(c.operator)||(s=!0),c.operator==="-"&&(l*=-1),c=e.terms[--i];r instanceof foundry.dice.terms.NumericTerm&&(a.constant+=n*l)}return s&&(a.constant=null),a}_enrichEnchantmentTooltip(e){var n,l;if(!this.getFlag("dnd5e","use.enchantmentProfile"))return;const s=this.getFlag("dnd5e","use.concentrationId");if(s&&!((n=this.getAssociatedActor())!=null&&n.effects.get(s)))return;const i=document.createElement("enchantment-application");i.classList.add("dnd5e2");const r=e.querySelector(".card-footer");r?r.insertAdjacentElement("beforebegin",i):(l=e.querySelector(".chat-card"))==null||l.append(i)}_enrichSaveTooltip(e){const a=this.getAssociatedActor(),s=this.getFlag("dnd5e","roll");if((a==null?void 0:a.type)!=="npc"||(s==null?void 0:s.type)!=="save"||this.rolls.some(r=>r.isSuccess))return;const i=document.createElement("div");if(i.classList.add("dnd5e2","chat-card"),s.forceSuccess)i.insertAdjacentHTML("beforeend",`
      <p class="supplement">
        <strong>${game.i18n.localize("DND5E.ROLL.Status")}</strong>
        ${game.i18n.localize("DND5E.LegendaryResistance.Resisted")}
      </p>
    `);else if(a.system.resources.legres.value&&a.isOwner)i.insertAdjacentHTML("beforeend",`
        <div class="card-buttons">
          <button type="button">
            <i class="fa-solid fa-dragon" inert></i>
            ${game.i18n.localize("DND5E.LegendaryResistance.Action.Resist")}
          </button>
        </div>
      `),i.querySelector("button").addEventListener("click",()=>a.system.resistSave(this));else return;e.querySelector(".message-content").append(i)}_enrichUsageEffects(e){var r;if(this.getFlag("dnd5e","messageType")!=="usage")return;const a=this.getAssociatedItem(),s=(r=this.getFlag("dnd5e","use.effects"))==null?void 0:r.map(n=>a==null?void 0:a.effects.get(n)).filter(n=>n&&(game.user.isGM||n.transfer&&this.author.id===game.user.id));if(!(s!=null&&s.length))return;const i=document.createElement("effect-application");i.classList.add("dnd5e2"),i.effects=s,e.querySelector(".message-content").appendChild(i)}static addChatMessageContextOptions(e,a){const s=([r])=>{var n;return(n=game.messages.get(r.dataset.messageId))==null?void 0:n.canApplyDamage},i=([r])=>{var n;return(n=game.messages.get(r.dataset.messageId))==null?void 0:n.canSelectTargets};return a.push({name:game.i18n.localize("DND5E.ChatContextDamage"),icon:'<i class="fas fa-user-minus"></i>',condition:s,callback:r=>{var n;return(n=game.messages.get(r.data("messageId")))==null?void 0:n.applyChatCardDamage(r,1)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextHealing"),icon:'<i class="fas fa-user-plus"></i>',condition:s,callback:r=>{var n;return(n=game.messages.get(r.data("messageId")))==null?void 0:n.applyChatCardDamage(r,-1)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextTempHP"),icon:'<i class="fas fa-user-clock"></i>',condition:s,callback:r=>{var n;return(n=game.messages.get(r.data("messageId")))==null?void 0:n.applyChatCardTemp(r)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextDoubleDamage"),icon:'<i class="fas fa-user-injured"></i>',condition:s,callback:r=>{var n;return(n=game.messages.get(r.data("messageId")))==null?void 0:n.applyChatCardDamage(r,2)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextHalfDamage"),icon:'<i class="fas fa-user-shield"></i>',condition:s,callback:r=>{var n;return(n=game.messages.get(r.data("messageId")))==null?void 0:n.applyChatCardDamage(r,.5)},group:"damage"},{name:game.i18n.localize("DND5E.ChatContextSelectHit"),icon:'<i class="fas fa-bullseye"></i>',condition:i,callback:([r])=>{var n;return(n=game.messages.get(r.dataset.messageId))==null?void 0:n.selectTargets(r,"hit")},group:"attack"},{name:game.i18n.localize("DND5E.ChatContextSelectMiss"),icon:'<i class="fas fa-bullseye"></i>',condition:i,callback:([r])=>{var n;return(n=game.messages.get(r.dataset.messageId))==null?void 0:n.selectTargets(r,"miss")},group:"attack"}),a}_activateActivityListeners(e){var a;(a=this.getAssociatedActivity())==null||a.activateChatListeners(this,e)}async _onTargetMouseDown(e){var n;e.stopPropagation();const a=e.currentTarget.dataset.uuid,s=fromUuidSync(a),i=((n=s==null?void 0:s.token)==null?void 0:n.object)??(s==null?void 0:s.getActiveTokens()[0]);if(!i||!s.testUserPermission(game.user,"OBSERVER"))return;const r=!e.shiftKey;if(i.controlled)i.release();else return i.control({releaseOthers:r}),canvas.animatePan(i.center)}_onTargetHoverIn(e){var r;const a=e.currentTarget.dataset.uuid,s=fromUuidSync(a),i=((r=s==null?void 0:s.token)==null?void 0:r.object)??(s==null?void 0:s.getActiveTokens()[0]);i&&i.isVisible&&(i.controlled||i._onHoverIn(e,{hoverOutOthers:!0}),this._highlighted=i)}_onTargetHoverOut(e){this._highlighted&&this._highlighted._onHoverOut(e),this._highlighted=null}applyChatCardDamage(e,a){const s=ue(this.rolls,{respectProperties:!0}).map(i=>({value:i.total,type:i.options.type,properties:new Set(i.options.properties??[])}));return Promise.all(canvas.tokens.controlled.map(i=>{var r;return(r=i.actor)==null?void 0:r.applyDamage(s,{multiplier:a})}))}selectTargets(e,a){if(!(canvas!=null&&canvas.ready))return;const s=e.closest("[data-message-id]").querySelectorAll(`.evaluation li.target.${a}`),i=new Set(Array.from(s).map(r=>r.dataset.uuid));canvas.tokens.releaseAll(),i.forEach(r=>{var c;const n=fromUuidSync(r);if(!n)return;const l=n.isToken?[(c=n.token)==null?void 0:c.object]:n.getActiveTokens();for(const u of l)u!=null&&u.isVisible&&n.testUserPermission(game.user,"OWNER")&&u.control({releaseOthers:!1})})}applyChatCardTemp(e){const a=this.rolls.reduce((s,i)=>s+i.total,0);return Promise.all(canvas.tokens.controlled.map(s=>{var i;return(i=s.actor)==null?void 0:i.applyTempHP(a)}))}_onClickDiceRoll(e){e.stopPropagation(),e.currentTarget.classList.toggle("expanded")}static onRenderChatPopout(e,a){var i;a=a instanceof HTMLElement?a:a[0];const s=a.querySelector(".header-button.close");s&&(s.innerHTML='<i class="fas fa-times"></i>',s.dataset.tooltip=game.i18n.localize("Close"),s.setAttribute("aria-label",s.dataset.tooltip)),(i=a.querySelector(".message-metadata [data-context-menu]"))==null||i.remove()}static onRenderChatLog(e){game.release.generation<13&&([e]=e),game.user.isGM&&(e.dataset.gmUser=""),game.settings.get("dnd5e","autoCollapseItemCards")||requestAnimationFrame(()=>{setTimeout(()=>ui.chat.scrollBottom(),250)})}static activateListeners(){window.addEventListener("keydown",this.toggleModifiers,{passive:!0}),window.addEventListener("keyup",this.toggleModifiers,{passive:!0}),window.addEventListener("blur",()=>this.toggleModifiers({releaseAll:!0}),{passive:!0})}static toggleModifiers({releaseAll:e=!1}={}){document.querySelectorAll(".chat-sidebar > ol, #chat .chat-scroll > ol").forEach(a=>{for(const s of Object.values(KeyboardManager.MODIFIER_KEYS))game.keyboard.isModifierActive(s)&&!e?a.dataset[`modifier${s}`]="":delete a.dataset[`modifier${s}`]})}_onDelete(e,a){super._onDelete(e,a),dnd5e.registry.messages.untrack(this)}getAssociatedActivity(){var a,s;const e=fromUuidSync(this.getFlag("dnd5e","activity.uuid"));return e||((s=(a=this.getAssociatedItem())==null?void 0:a.system.activities)==null?void 0:s.get(this.getFlag("dnd5e","activity.id")))}getAssociatedActor(){if(this.speaker.scene&&this.speaker.token){const e=game.scenes.get(this.speaker.scene),a=e==null?void 0:e.tokens.get(this.speaker.token);if(a)return a.actor}return game.actors.get(this.speaker.actor)}getAssociatedItem(){const e=fromUuidSync(this.getFlag("dnd5e","item.uuid"));if(e)return e;const a=this.getAssociatedActor();if(!a)return;const s=this.getFlag("dnd5e","item.data")??this.getOriginatingMessage().getFlag("dnd5e","item.data");if(s)return new Item.implementation(s,{parent:a})}getAssociatedRolls(e){return dnd5e.registry.messages.get(this.id,e)}getOriginatingMessage(){return game.messages.get(this.getFlag("dnd5e","originatingMessage"))??this}_shimFlags(){var a;const e=foundry.utils.getProperty(this,"flags.dnd5e");if((e==null?void 0:e.messageType)==="usage"&&(e!=null&&e.use)){const s="The item data in the `dnd5e.use` flag on `ChatMessage` is now `dnd5e.item.type`, `dnd5e.item.id`, and `dnd5e.item.uuid`. Checking for usage can now be done using the `dnd5e.messageType` flag.";Object.defineProperty(e.use,"type",{get(){var i;return foundry.utils.logCompatibilityWarning(s,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(i=e.item)==null?void 0:i.type},configurable:!0,enumerable:!1}),Object.defineProperty(e.use,"itemId",{get(){var i;return foundry.utils.logCompatibilityWarning(s,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(i=e.item)==null?void 0:i.id},configurable:!0,enumerable:!1}),Object.defineProperty(e.use,"itemUuid",{get(){var i;return foundry.utils.logCompatibilityWarning(s,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(i=e.item)==null?void 0:i.uuid},configurable:!0,enumerable:!1})}else if((e==null?void 0:e.messageType)==="roll"&&(e!=null&&e.roll)){const s="The item data in the `dnd5e.roll` flag on `ChatMessage` is now `dnd5e.item.id` and `dnd5e.item.uuid`.";Object.defineProperty(e.roll,"itemId",{get(){var i;return foundry.utils.logCompatibilityWarning(s,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(i=e.item)==null?void 0:i.id},configurable:!0,enumerable:!1}),Object.defineProperty(e.roll,"itemUuid",{get(){var i;return foundry.utils.logCompatibilityWarning(s,{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),(i=e.item)==null?void 0:i.uuid},configurable:!0,enumerable:!1})}(a=e==null?void 0:e.item)!=null&&a.data&&Object.defineProperty(e,"itemData",{get(){return foundry.utils.logCompatibilityWarning("The `dnd5e.itemData` flag on `ChatMessage` is now `dnd5e.item.data`.",{since:"DnD5e 4.0",until:"DnD5e 4.4",once:!0}),this.item.data},configurable:!0,enumerable:!1})}}T(re,"TRAY_TYPES",["damage-application","effect-application"]);const D=class D{static resetRollGetters(t){return t._total=t._evaluateTotal(),t.resetFormula(),t}static replaceTerms(t,e){return t.terms=e.terms,t._total=t._evaluateTotal(),t.resetFormula(),t}static replaceDie(t,e){const a=e.terms.filter(i=>i instanceof Die),s=t.terms.filter(i=>!(i instanceof Die));return t.terms=[...a,...s],t._total=t._evaluateTotal(),t.resetFormula(),p.log("replaceDie",[t.formula,t.terms,e.terms]),t}static getDialogSetting(t,e){var i;const a=H(),s=E.get(a.skipRollConfig.tag);if(p.log("getDialogSetting",["skip mode: "+s,x.keysPressed,e]),((i=e.flags)==null?void 0:i["ddb-game-log"])!==void 0)return!1;switch(s){case 1:return x.keysPressed.indexOf("Shift")!=-1;default:return t}}};T(D,"streamlineDDBRoll",async(t,e,a,s,i)=>{let r=null,n=game.user,l=a?L.findItemFromActor(i.speaker.actor,e,a):null;s.rolls=s.rolls.map(d=>Roll.fromJSON(d));let c={},u=s.rolls[0];c.message={flavor:s.flavor,speaker:s.speaker,whisper:s.whisper,user:n,blind:s.blind||L.isPrivateRoll(i.rollMode),rollMode:i.rollMode},c.dialog={configure:!1},c.roll={formula:u.formula,consume:{resources:!1,spellSlot:!1},user:n,rolls:[],flags:{...s.flags,[F]:{processed:!0},dnd5e:{...s.flags.dnd5e},rsr5e:{processed:!0,quickRoll:!1}}},s.flags=c.roll.flags;try{switch(!0){case t===C.toHit.cls:r=I.getActivityFromItem(l,t)??null,await D.triggerAttack(r,s,i,c);break;case t===C.damage.cls:r=I.getActivityFromItem(l,t)??null,await D.triggerDamage(r,s,i,c);break;case(t===C.save.cls||t===C.check.cls):r=null,await D.triggerAbilityTest(t,s,i,c);break;case t===C.heal.cls:r=I.getActivityFromItem(l,t)??null,await D.triggerHeal(r,s,i,c);break;case t===C.custom.cls:r=null,await D.triggerCustomRoll(c,s,a,i);break;default:p.log("streamlineDDBRoll",[t])}}catch(d){return p.error("Error intercepting DDB roll",[d],{ui:!1,console:!0,permanent:!1}),ui.notifications.warn("Could not intercept the DDB roll"),!1}return!0}),T(D,"triggerAttack",async(t,e,a,s)=>{const i=H();let r,n,l;if(!t)throw new Error("No associated activity found.");s.roll.flags.rsr5e={processed:!0},s.roll.flags.dnd5e.targets=L.getTargetDescriptors({user:s.message.user}),s.roll.flags.dnd5e.roll={type:P.attack},p.log("triggerAttack",[s,t]);const c=L.isModuleOn("midi-qol");if(p.log("triggerAttack - isMidiOn",[c,t,r]),c){const u=new MidiQOL.Workflow(t.actor,t,e.speaker,s.message.user.targets,{workflowOptions:{attackRollDSN:!1}});if(n=await t.rollAttack({...s.roll,midiOptions:{workflowOptions:{attackRollDSN:!1}}},s.dialog,{create:!1,data:{...s.message}}),n.length<1)return;E.get(i.foundryRollModifiers.tag)?D.replaceDie(n[0],e.rolls[0]):D.replaceTerms(n[0],e.rolls[0]),r=await t.use({...s.roll},s.dialog,{create:!0,data:{rolls:[n[0]],user:s.message.user,speaker:s.message.speaker,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`,flags:{rsr5e:s.roll.flags.rsr5e,[F]:{processed:!0,data:{msg:e,msgData:a},rollMode:a.rollMode,cls:e.flags["ddb-game-log"].cls,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`}}}}),u.setAttackRoll(n[0])}else{if(l=t.metadata.usage.chatCard,t.metadata.usage.chatCard=`modules/${F}/templates/ddb-attack-info.hbs`,n=await t.rollAttack(s.roll,s.dialog,{create:!1,data:{...s.message}}),n.length<1)return;E.get(i.foundryRollModifiers.tag)?D.replaceDie(n[0],e.rolls[0]):D.replaceTerms(n[0],e.rolls[0]),r=await I.ddbglUse(t,s.roll,s.dialog,{create:!1,data:{rolls:[n[0]],user:s.message.user,speaker:s.message.speaker,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`,flags:{rsr5e:s.roll.flags.rsr5e,[F]:{processed:!0,data:{msg:e,msgData:a},rollMode:a.rollMode,cls:e.flags["ddb-game-log"].cls,flavor:`<span class="crlngn item-name">${t.item.name}:</span> <span class="crlngn ${e.flags["ddb-game-log"].cls.replace(" ","")}">${e.flags["ddb-game-log"].cls}</span>`}}}})}if(r.message.flags.dnd5e.targets=L.getTargetDescriptors({user:s.message.user}),r.message.flags=r.message.flags??{},r.message.rolls=n,p.log("triggerAttack - before card",[n,r.message]),!c){const u=await re.create(r.message,{rollMode:a.rollMode});p.log("USAGE RESULTS",[u,r,s.message,t.metadata])}c||(t.metadata.usage.chatCard=l)}),T(D,"triggerDamage",async(t,e,a,s)=>{let i;if(!t)throw new Error("No associated activity found.");t.attack||(i=await I.ddbglUse(t,s.roll,s.dialog,{create:!1}),await re.create(i.message,{rollMode:a.rollMode})),p.log("triggerDamage",[s,t]);let r=await t.rollDamage(s.roll,s.dialog,{create:!1});r.length<1||(D.replaceTerms(r[0],e.rolls[0]),i||(i={message:s.message}),i.message.rolls=r,i.message.flags=i.message.flags??{},i.message.flags.rsr5e={processed:!0,quickRoll:!1},s.roll.flags.dnd5e.targets=L.getTargetDescriptors({user:s.message.user}),s.roll.flags.dnd5e.roll={type:P.damage},s.message.flags=s.roll.flags,s.message.flags={...s.message,dnd5e:s.roll.flags.dnd5e,rsr5e:s.roll.flags.rsr5e},await r[0].toMessage(s.message,{rollMode:a.rollMode}),t.attack||s.message.user.targets.forEach(n=>{n.control({releaseOthers:!1})}),setTimeout(()=>{L.removeTemplateForItem(t.item)},3e3))}),T(D,"triggerAbilityTest",async(t,e,a,s)=>{const i=L.parseDDBGLAbility(e.flags["ddb-game-log"].flavor);let r;s.roll.flags.dnd5e.roll={type:t===C.check.cls?"ability":"save"},i&&(s.roll.flags.dnd5e.roll={type:t===C.check.cls?P.abilityCheck:P.abilitySave,ability:i.abbrev}),s.message.flags={dnd5e:s.roll.flags.dnd5e,rsr5e:s.roll.flags.rsr5e},t===C.save.cls?r=await a.actor.rollSavingThrow({ability:i==null?void 0:i.abbrev},s.dialog,{create:!1}):t===C.check.cls&&(r=await a.actor.rollAbilityCheck({ability:i==null?void 0:i.abbrev},s.dialog,{create:!1}),p.log("triggerAbilityTest",[r,s.message])),!(r.length<1)&&(D.replaceTerms(r[0],e.rolls[0]),await r[0].toMessage(s.message,{rollMode:a.rollMode}))}),T(D,"triggerHeal",async(t,e,a,s)=>{let i;if(!t)throw new Error("No associated activity found.");i=await I.ddbglUse(t,s.roll,s.dialog,{create:!1}),p.log("ACTIVITY",[i]),await re.create(i.message,{rollMode:a.rollMode});let r=await t.rollDamage(s.roll,s.dialog,{create:!1,data:{flags:s.message.flags}});r.length<1||(D.replaceTerms(r[0],e.rolls[0]),i||(i={message:s.message}),i.message.rolls=r,i.message.flags=i.message.flags??{},i.message.flags.rsr5e={processed:!0,quickRoll:!1},s.roll.flags.dnd5e.roll={type:P.healing},s.roll.flags.dnd5e.targets=L.getTargetDescriptors({user:s.message.user}),s.message.flags={...s.message,dnd5e:s.roll.flags.dnd5e,rsr5e:s.roll.flags.rsr5e},await r[0].toMessage(s.message,{rollMode:a.rollMode}))}),T(D,"triggerCustomRoll",async(t,e,a,s)=>{t.message={...t.message,dnd5e:{...t.roll.flags.dnd5e},rsr5e:t.roll.flags.rsr5e},await e.rolls[0].toMessage(t.message,{...s})});let Q=D;const R=class R{};T(R,"socket"),T(R,"initialize",t=>{Hooks.once($e.READY,()=>{if(p.log("Attempting to register module..."),typeof socketlib>"u"){p.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled.");return}try{R.socket=socketlib.registerModule(W),t&&t(),p.log("SocketUtil | Module registered",[R.socket])}catch(e){p.log("Problem registering module",[e])}})}),T(R,"registerCall",(t,e)=>{R.socket?(R.socket.register(t,e),p.log("SocketUtil - Registered callback",[R.socket,t])):p.log("SocketUtil - Failed to register callback (socket not initialized)",[R.socket,t])}),T(R,"sendMessage",(t,e)=>{p.log("SocketUtil - sendMessage",[t]),e&&e()}),T(R,"execAsGM",async(t,...e)=>{if(!R.socket){p.log("SocketUtil - Socket not initialized. Cannot execute as GM.");return}return await R.socket.executeAsGM(t,...e)}),T(R,"execAsUser",async(t,e,...a)=>{if(!R.socket){p.log("SocketUtil - Socket not initialized. Cannot execute as user.");return}const s=await R.socket.executeAsUser(t,e,...a);return p.log("SocketUtil - Executed as user.",[s]),s}),T(R,"execForAll",async(t,...e)=>{if(!R.socket){p.log("SocketUtil - Socket not initialized. Cannot execute for all clients.");return}return await R.socket.executeForEveryone(t,...e)});let Y=R;const A=class A{static init(){A.setupKeyListeners(),A.registerHooks()}static registerHooks(){Y.initialize(()=>{p.log("SocketUtil - initialized with socket",[Y.socket,game.system.utils.areKeysPressed])}),Hooks.once(N.INIT,()=>{A.isMidiOn=L.isModuleOn("midi-qol"),p.log("Initiating module",[],!0),document.querySelector("body").classList.add("crlngn-chat"),E.registerSettings(),A.registerActivityHooks(),A.registerRollHooks(),A.registerChatHooks(),A.registerTemplateHooks()}),Hooks.once(N.READY,()=>{if(!game.socket){ui.notifications.error("⚠️ DDB Bridge: Foundry needs to be restarted to enable socket functionality.",{permanent:!0}),p.error("Foundry restart required to enable sockets.");return}E.resetGamelogSettings(),A.registerSocketFunction()}),Hooks.on(N.CLOSE_SETTINGS_CONFIG,()=>{E.resetGamelogSettings()})}static registerSocketFunction(){Y.registerCall("DDBRoll",Q.streamlineDDBRoll)}static registerActivityHooks(){Hooks.on(k.PRE_USE_ACTIVITY,lt),Hooks.on(k.POST_USE_ACTIVITY,ot)}static registerRollHooks(){Hooks.on(k.ROLL_ATTACK_V2,yt),Hooks.on(k.ROLL_DAMAGE_V2,ht),Hooks.on(k.PRE_ROLL_V2,gt),Hooks.on(k.PRE_ROLL_ATTACK_V2,pt),Hooks.on(k.PRE_ROLL_DAMAGE_V2,ft),Hooks.on(k.PRE_ROLL_SAVING_THROW,mt)}static registerChatHooks(){Hooks.on(k.RENDER_CHAT_MESSAGE,ut),Hooks.on(N.PRE_CREATE_CHAT_MESSAGE,ct),Hooks.on(N.CREATE_CHAT_MESSAGE,dt)}static registerTemplateHooks(){Hooks.on(N.REFRESH_MEASURED_TEMPLATE,Tt)}static setupKeyListeners(){window.addEventListener("keydown",t=>{const e=t.key;A.keysPressed.indexOf(e)<0&&A.keysPressed.push(e)}),window.addEventListener("keyup",t=>{const e=t.key,a=A.keysPressed.indexOf(e);a>=0&&A.keysPressed.splice(a,1)})}};T(A,"keysPressed",[]),T(A,"isMidiOn",!1),T(A,"areKeysPressed");let x=A;const lt=async(o,t,e,a)=>(p.log(k.PRE_USE_ACTIVITY,[t,e,a,x.keysPressed]),!0),ot=async(o,t,e)=>(p.log(k.POST_USE_ACTIVITY,[o,t,e]),!0),ct=(o,t,e,a)=>{var m,g,y,f,h;const s=H();let i=!1,r,n,l,c,u=!1;const d={...o};if(n=L.isModuleOn("ddb-game-log")&&((m=o.getFlag("ddb-game-log","cls"))==null?void 0:m.toLowerCase())||"",u=o.getFlag(F,"processed")||!1,p.log(N.PRE_CREATE_CHAT_MESSAGE,[n,o,{...t},e]),n&&!u)if(r=t.actor||game.actors.get(t.speaker.actor)||null,l=((y=(g=t.flags)==null?void 0:g["ddb-game-log"])==null?void 0:y.itemId)||"",r){i=!0,d.flags={...d.flags,...t.flags},d.flags[F]&&(d.flags[F].processed=!0,u=!0);const b=document.createElement("div");b.innerHTML=t.flavor;let S=(f=b==null?void 0:b.querySelector("span:first-child"))==null?void 0:f.innerHTML.replace(":","");if(c=S?L.findItemFromActor(t.speaker.actor,l,S):null,!c&&(n===C.toHit.cls||n===C.damage.cls||n===C.heal.cls))return p.error("Could not find an item for the roll",[n,S,r.items]),!0;{d.rolls=d.rolls.map(te=>JSON.stringify(te.toJSON()));const _=L.getUserFromActor((h=d.speaker)==null?void 0:h.actor),V=E.get(s.ddbRollOwnership.tag)==2;p.log("playerMakesRoll",[E.get(s.ddbRollOwnership.tag)]),_&&V?Y.execAsUser("DDBRoll",_.id,n,l,S,d,t):Q.streamlineDDBRoll(n,l,S,d,t)}}else return p.warn("Could not find the actor from DDB Gamelog roll"),!0;return!i||u},dt=(o,t,e)=>{p.log(N.CREATE_CHAT_MESSAGE,[o,t,e])},ut=(o,t)=>{p.log(k.RENDER_CHAT_MESSAGE,[o,t]),ze.enrichCard(o,t)},gt=(o,t,e)=>{p.log(k.PRE_ROLL_V2,[o,t,e]),t.configure=Q.getDialogSetting(t.configure,o)},mt=(o,t,e)=>{p.log(k.PRE_ROLL_SAVING_THROW,[o,t,e])},pt=(o,t,e)=>(p.log(k.PRE_ROLL_ATTACK_V2,[e,t,o]),!0),ft=(o,t,e)=>(p.log(k.PRE_ROLL_DAMAGE_V2,[o,t,e,x.keysPressed]),!0),ht=(o,t,e)=>{p.log(k.ROLL_DAMAGE_V2,[game])},yt=async(o,t)=>{p.log(k.ROLL_ATTACK_V2,[o,t])},Tt=(o,t)=>{var s;if(!o.isOwner)return;const e=E.get("template-auto-target");let a=3;switch(e){case 1:a=3;break;case 2:a=0;break;default:return}(s=canvas.tokens.placeables[0])==null||s.setTarget(!1,{releaseOthers:!0});for(let i of canvas.tokens.placeables)i.document.disposition<=a&&o.shape.contains(i.center.x-o.x,i.center.y-o.y)&&i.setTarget(!i.isTargeted,{releaseOthers:!1})};x.init();
//# sourceMappingURL=module.js.map
